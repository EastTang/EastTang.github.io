<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>OS-23-设备回收与分配 缓冲区管理</title>
    <url>/2020/07/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%89%E6%AC%A1%E8%AF%BE%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E8%AE%BE%E5%A4%87%E7%9A%84%E5%88%86%E9%85%8D%E4%B8%8E%E5%9B%9E%E6%94%B6">设备的分配与回收</a>
<ul>
<li><a href="#%E6%A6%82%E5%BF%B5">概念</a></li>
<li><a href="#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84">数据结构</a></li>
<li><a href="#%E5%88%86%E9%85%8D%E6%AD%A5%E9%AA%A4">分配步骤</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93">小结</a></li>
</ul>
</li>
<li><a href="#%E7%BC%93%E5%86%B2%E5%8C%BA%E7%AE%A1%E7%90%86">缓冲区管理</a>
<ul>
<li><a href="#%E6%A6%82%E5%BF%B5-2">概念</a></li>
<li><a href="#%E5%8D%95%E7%BC%93%E5%86%B2">单缓冲</a></li>
<li><a href="#%E5%8F%8C%E7%BC%93%E5%86%B2">双缓冲</a></li>
<li><a href="#%E5%85%B8%E5%9E%8B%E4%BE%8B%E9%A2%98">典型例题</a></li>
<li><a href="#%E5%BE%AA%E7%8E%AF%E7%BC%93%E5%86%B2">循环缓冲</a></li>
<li><a href="#%E7%BC%93%E5%86%B2%E6%B1%A0">缓冲池</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93-2">小结</a></li>
</ul>
</li>
</ul>
</p>
<h1 id="操作系统第二十三次课小结"><a class="markdownIt-Anchor" href="#操作系统第二十三次课小结"></a> 操作系统第二十三次课小结</h1>
<h2 id="设备的分配与回收"><a class="markdownIt-Anchor" href="#设备的分配与回收"></a> 设备的分配与回收</h2>
<h3 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h3>
<ul>
<li><strong>独占</strong>设备：一时段一进程<br />
<strong>共享</strong>设备：一时段多进程，宏观同时微观交替<br />
<strong>虚拟</strong>设备：一时段多进程，假脱机技术改造成的共享设备</li>
<li><strong>安全分配方式</strong>：为进程分配一个设备后，<strong>将本进程阻塞</strong>，本次 I/O 结束后唤醒<br />
<strong>一时段一进程一设备</strong><br />
优点：破坏了<strong>请求和保持</strong>，不死锁<br />
缺点：对于一个进程，CPU 和 I/O 设备<strong>只能串行</strong><br />
<strong>不安全分配方式</strong>：系统相应进程请求分配设备，进程可继续执行或发出新请求，<strong>得不到满足时阻塞</strong><br />
<strong>一时段一进程多设备</strong><br />
优点：CPU 和 I/O 设备<strong>并行处理</strong><br />
缺点：<strong>可能死锁</strong></li>
<li><strong>静态</strong>分配：进程<strong>运行前分配全部</strong>所需资源，运行结束后归还资源，破坏请求和保持，<strong>不死锁</strong><br />
<strong>动态</strong>分配：进程运行过程<strong>动态申请</strong>设备资源</li>
</ul>
<h3 id="数据结构"><a class="markdownIt-Anchor" href="#数据结构"></a> 数据结构</h3>
<ul>
<li>
<p><strong>一通道控制多控制器</strong>，<strong>一控制器控制多设备</strong></p>
</li>
<li>
<p><strong>设备控制表</strong>（DCT）：系统为每设备配置一张 DCT，用于记录设备情况</p>
<table>
<thead>
<tr>
<th style="text-align:center">设备控制表（DCT）</th>
<th style="text-align:center">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">设备类型</td>
<td style="text-align:center">如：打印机/扫描仪</td>
</tr>
<tr>
<td style="text-align:center">设备标识符</td>
<td style="text-align:center"><strong>物理</strong>设备名，<strong>唯一</strong></td>
</tr>
<tr>
<td style="text-align:center">设备状态</td>
<td style="text-align:center">忙碌/空闲/故障</td>
</tr>
<tr>
<td style="text-align:center">指向控制器表的指针</td>
<td style="text-align:center">找到控制该设备的控制器</td>
</tr>
<tr>
<td style="text-align:center">重复执行次数或时间</td>
<td style="text-align:center">重复多次不成功判为失败</td>
</tr>
<tr>
<td style="text-align:center">设备队列队首指针</td>
<td style="text-align:center">指向正等待本设备的进程队列<br />（由进程 <strong>PCB</strong> 组成）</td>
</tr>
</tbody>
</table>
<p>系统会根据<strong>阻塞原因不同</strong>，将进程 PCB 挂到<strong>不同的阻塞队列</strong></p>
</li>
<li>
<p><strong>控制器控制表</strong>（COCT）：每个控制器对应一张 COCT，操作系统据此操作和管理控制器</p>
<table>
<thead>
<tr>
<th style="text-align:center">控制器控制表（COCT）</th>
<th style="text-align:center">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">控制器标识符</td>
<td style="text-align:center">各控制器的唯一 ID</td>
</tr>
<tr>
<td style="text-align:center">控制器状态</td>
<td style="text-align:center">忙碌/空闲/故障</td>
</tr>
<tr>
<td style="text-align:center">指向通道表的指针</td>
<td style="text-align:center">找到控制</td>
</tr>
<tr>
<td style="text-align:center">控制器队列队首指针</td>
<td style="text-align:center">等待本控制器处理的进程 PCB 队列</td>
</tr>
<tr>
<td style="text-align:center">控制器队列队尾指针</td>
<td style="text-align:center">同上</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><strong>通道控制表</strong>（CHCT）：</p>
<table>
<thead>
<tr>
<th style="text-align:center">通道控制表（CHCT）</th>
<th style="text-align:center">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">通道标识符</td>
<td style="text-align:center">各通道唯一 ID</td>
</tr>
<tr>
<td style="text-align:center">通道状态</td>
<td style="text-align:center">忙碌/空闲/故障</td>
</tr>
<tr>
<td style="text-align:center">与通道连接的控制器表首址</td>
<td style="text-align:center">指向下级控制器控制表队列</td>
</tr>
<tr>
<td style="text-align:center">通道队列队首指针</td>
<td style="text-align:center">指向等待本通道处理的进程 PCB 队列</td>
</tr>
<tr>
<td style="text-align:center">通道队列队尾指针</td>
<td style="text-align:center">同上</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><strong>系统设备表</strong>（SDT）：记录<strong>系统中全部设备</strong>的情况，每个设备对应一个表目</p>
<table>
<thead>
<tr>
<th style="text-align:center">系统控制表（SDT）</th>
<th></th>
<th style="text-align:center">表目i</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">表目1</td>
<td></td>
<td style="text-align:center">设备类型</td>
</tr>
<tr>
<td style="text-align:center">表目2</td>
<td></td>
<td style="text-align:center">设备标识符（物理设备名）</td>
</tr>
<tr>
<td style="text-align:center">······</td>
<td></td>
<td style="text-align:center">设备控制表（DCT）</td>
</tr>
<tr>
<td style="text-align:center">表目i</td>
<td></td>
<td style="text-align:center">驱动程序入口</td>
</tr>
</tbody>
</table>
</li>
</ul>
<h3 id="分配步骤"><a class="markdownIt-Anchor" href="#分配步骤"></a> 分配步骤</h3>
<ol>
<li>根据进程请求的<strong>逻辑设备名</strong>（设备类型）查找<strong>系统设备表</strong>（SDT）</li>
<li>在 SDT 中找到用户进程<strong>指定类型且空闲的设备</strong>分配给进程，同时在<strong>逻辑设备表</strong>（LUT）中<strong>新增</strong>一个表项</li>
<li>根据设备对应的<strong>设备控制表</strong>（DCT）找到相应的<strong>控制器控制表</strong>（COCT），若控制器<strong>忙碌</strong>则将进程 PCB <strong>挂到控制器等待队列</strong>，<strong>不忙碌</strong>则将控制器<strong>分配给进程</strong></li>
<li>根据 COCT 找到<strong>通道控制表</strong>（CHCT），若通道<strong>忙碌</strong>则将进程 PCB 挂到<strong>通道等待队列</strong>，<strong>不忙碌</strong>则将通道<strong>分配给进程</strong></li>
</ol>
<ul>
<li>注意建立<strong>逻辑设备表</strong>（LUT），逻辑名<strong>映射</strong>到物理设备名，则用户编程只需提供逻辑设备名</li>
<li><strong>仅当第一次使用逻辑名查找设备时才会查询系统控制表</strong>，后续直接查询逻辑设备表（LUT）即可</li>
<li>逻辑设备表的设置问题
<ul>
<li>整个系统一张 LUT：<strong>逻辑设备名不允许重复</strong>，适用单用户</li>
<li>每个用户一张 LUT：<strong>不同用户设备名可重复</strong>，适用多用户</li>
</ul>
</li>
</ul>
<h3 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/07/02/m6yOIbPGYfBUJjV.png" alt="设别的分配与回收06小结" /></p>
<h2 id="缓冲区管理"><a class="markdownIt-Anchor" href="#缓冲区管理"></a> 缓冲区管理</h2>
<h3 id="概念-2"><a class="markdownIt-Anchor" href="#概念-2"></a> 概念</h3>
<ul>
<li>是一个存储区域，可用专门的<strong>硬件寄存器</strong>，也可用<strong>内存</strong>组成<br />
硬件成本高、容量小，适用速度要求高的场合，如联想寄存器</li>
<li><strong>作用</strong>
<ul>
<li>缓和 CPU 和 I/O 设备之间<strong>速度不匹配</strong>的矛盾</li>
<li>减少对 CPU 的<strong>中断频率</strong>（缓冲区存满读空才需要中断）</li>
<li>解决数据<strong>粒度不匹配</strong>的问题（如输出进程每次生成一块而 I/O 只能输出一个字符）</li>
<li>提高 CPU 与 I/O 设备之间的<strong>并行性</strong></li>
</ul>
</li>
<li>写满才能读，读空才能写；CPU快速存入后执行其他操作，I/O 设备再缓慢读出，输入过程类似</li>
</ul>
<h3 id="单缓冲"><a class="markdownIt-Anchor" href="#单缓冲"></a> 单缓冲</h3>
<ul>
<li>
<p>主存中为进程仅分配<strong>一个</strong>缓冲区，未说明默认大小为<strong>一个块</strong></p>
<p><img src="https://i.loli.net/2020/07/02/GckNdjzBMHvhywq.png" alt="image-20200606231931890" /></p>
<blockquote>
<p>常考题型：计算处理一块数据块平均需要多久？</p>
</blockquote>
</li>
<li>
<p>技巧：假设一个<strong>初始状态</strong>（单缓冲一般初始工作区满、缓存区空），分析下次到达该状态所需时间，注意 CPU 和 I/O 设备可<strong>并行</strong></p>
</li>
<li>
<p>结论：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">处</mi><mi mathvariant="normal">理</mi><mi mathvariant="normal">单</mi><mi mathvariant="normal">块</mi><mi mathvariant="normal">平</mi><mi mathvariant="normal">均</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mtext> </mtext><mi>t</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>T</mi><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">)</mo><mo>+</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">处理单块平均时间\ t = max(T,C)+M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord cjk_fallback">处</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">块</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">均</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace"> </span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span></p>
</li>
</ul>
<h3 id="双缓冲"><a class="markdownIt-Anchor" href="#双缓冲"></a> 双缓冲</h3>
<ul>
<li>
<p>主存中为进程分配<strong>两个</strong>缓冲区</p>
<p><img src="https://i.loli.net/2020/07/02/Sq8Es5CFnc1iZzg.png" alt="image-20200606233524918" /></p>
</li>
<li>
<p><strong>初始条件</strong>设为工作区空，缓冲区一满一空</p>
</li>
<li>
<p><strong>结论</strong>：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">处</mi><mi mathvariant="normal">理</mi><mi mathvariant="normal">单</mi><mi mathvariant="normal">块</mi><mi mathvariant="normal">平</mi><mi mathvariant="normal">均</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi><mtext> </mtext><mi>t</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>T</mi><mo separator="true">,</mo><mi>C</mi><mo>+</mo><mi>M</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">处理单块平均时间\ t=max(T, C+M)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord cjk_fallback">处</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">块</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">均</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mspace"> </span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>若两个相互通信的机器配置双缓冲区，则同一时刻可实现双向通信<br />
管道其实就是缓冲区，实现数据双向时必须设置两个管道</p>
</li>
</ul>
<h3 id="典型例题"><a class="markdownIt-Anchor" href="#典型例题"></a> 典型例题</h3>
<blockquote>
<p>某文件占10个磁盘块，现要把该文件磁盘块逐个读入主存缓冲区，并送用户区进行分析。假设一个缓冲区与一个磁盘块大小相同，把一个磁盘块读入缓冲区的时间为100毫秒，将缓冲区的数据传送到用户区的时间是50毫秒，CPU对一块数据进行分析的时间为80毫秒。在单缓冲区和双缓冲区结构下，读入并分析该文件的时间分别是多少毫秒。</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>100</mn><mo>+</mo><mn>50</mn><mo stretchy="false">)</mo><mo>×</mo><mn>10</mn><mo>+</mo><mn>80</mn><mo>=</mo><mn>1580</mn></mrow><annotation encoding="application/x-tex">t_1 = (100+50) \times 10 + 80 = 1580</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mord">8</span><span class="mord">0</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mn>2</mn></msub><mo>=</mo><mn>100</mn><mo>+</mo><mo stretchy="false">(</mo><mn>50</mn><mo>+</mo><mn>80</mn><mo stretchy="false">)</mo><mo>×</mo><mn>10</mn><mo>=</mo><mn>1400</mn></mrow><annotation encoding="application/x-tex">t_2 = 100 + (50+80) \times 10 = 1400</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">8</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">4</span><span class="mord">0</span><span class="mord">0</span></span></span></span></p>
</blockquote>
<ul>
<li>解题可画图分析<br />
<img src="https://i.loli.net/2020/07/02/2nLpGRfxWdkCDH4.jpg" alt="image-20200607002136951" /></li>
<li>公式记忆<br />
<strong>单缓冲区</strong>：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>=</mo><mo stretchy="false">(</mo><mi>T</mi><mo>+</mo><mi>M</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>n</mi><mo>+</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">t = (T+M) \cdot n + C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span><br />
<strong>双缓冲区</strong>：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>T</mi><mo separator="true">,</mo><mi>M</mi><mo>+</mo><mi>C</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>n</mi><mo>+</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>T</mi><mo separator="true">,</mo><mi>M</mi><mo>+</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t = max(T, M+C) \cdot n + min (T, M+C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span></li>
</ul>
<h3 id="循环缓冲"><a class="markdownIt-Anchor" href="#循环缓冲"></a> 循环缓冲</h3>
<ul>
<li>多个大小相等的<strong>缓冲区</strong>连接为<strong>循环链表</strong></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span></span></span></span> 指针：指向下一个可以冲入数据的空缓冲区<br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>o</mi><mi>u</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">out</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">t</span></span></span></span> 指针：指向下一个可以取出数据的满缓冲区</li>
<li><img src="https://i.loli.net/2020/07/02/eialfK2Q9jp4bI7.jpg" alt="image-20200607003527116" /></li>
</ul>
<h3 id="缓冲池"><a class="markdownIt-Anchor" href="#缓冲池"></a> 缓冲池</h3>
<ul>
<li>
<p>由系统<strong>共用</strong>缓冲区组成</p>
</li>
<li>
<p>按使用情况划分为<strong>空缓冲区队列</strong>、<strong>输入队列</strong>（装满输入数据）、<strong>输出队列</strong>（装满输出数据）</p>
</li>
<li>
<p>按实际功能划分为<strong>收容输入</strong>（hin）、<strong>提取输入</strong>（sin）、<strong>收容输出</strong>（hout）、<strong>提取输出</strong>（sout）<br />
<img src="https://i.loli.net/2020/07/02/M8IuxrWHYLAjZnF.png" alt="image-20200607004822659" /></p>
</li>
<li>
<p>使用流程</p>
<ol>
<li>
<p>输入进程请求输出数据</p>
<p>取空缓冲区队列队首作为 hin 冲入数据，再挂到输入队列队尾</p>
</li>
<li>
<p>计算进程想取得输入数据</p>
<p>取输入队列队首作为 sin 取出数据，再挂到空缓冲区队列队尾</p>
</li>
<li>
<p>计算进程将数据冲入缓冲区</p>
<p>取空缓冲区队列队首作为 hout 冲入数据，再挂到输出队列队尾</p>
</li>
<li>
<p>输出进程请求输出数据</p>
<p>取输出队列队首作为 sout 取出数据，再挂到空缓冲区队列队尾</p>
</li>
</ol>
</li>
</ul>
<h3 id="小结-2"><a class="markdownIt-Anchor" href="#小结-2"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/07/02/jsLQwJm3BqWypYX.png" alt="缓冲区管理07小结" /></p>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>OS-20-磁盘</title>
    <url>/2020/07/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%BA%8C%E5%8D%81%E6%AC%A1%E8%AF%BE%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E7%A3%81%E7%9B%98%E7%BB%93%E6%9E%84">磁盘结构</a>
<ul>
<li><a href="#%E5%9F%BA%E6%9C%AC%E5%B1%9E%E6%80%A7">基本属性</a></li>
<li><a href="#%E7%89%A9%E7%90%86%E7%BB%93%E6%9E%84">物理结构</a></li>
<li><a href="#%E7%A3%81%E7%9B%98%E5%88%86%E7%B1%BB">磁盘分类</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93">小结</a></li>
</ul>
</li>
<li><a href="#%E7%A3%81%E7%9B%98%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95">磁盘调度算法</a>
<ul>
<li><a href="#%E8%AF%BB%E5%86%99%E6%93%8D%E4%BD%9C%E6%97%B6%E9%97%B4">读写操作时间</a></li>
<li><a href="#%E5%85%88%E6%9D%A5%E5%85%88%E6%9C%8D%E5%8A%A1%E7%AE%97%E6%B3%95fcfs">先来先服务算法（FCFS）</a></li>
<li><a href="#%E6%9C%80%E7%9F%AD%E5%AF%BB%E6%89%BE%E6%97%B6%E9%97%B4%E4%BC%98%E5%85%88sstf">最短寻找时间优先（SSTF）</a></li>
<li><a href="#%E6%89%AB%E6%8F%8F%E7%AE%97%E6%B3%95scan">扫描算法（SCAN）</a></li>
<li><a href="#look-%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95">LOOK 调度算法</a></li>
<li><a href="#%E5%BE%AA%E7%8E%AF%E6%89%AB%E6%8F%8F%E7%AE%97%E6%B3%95c-scan">循环扫描算法（C-SCAN）</a></li>
<li><a href="#c-look-%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95">C-LOOK 调度算法</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93-2">小结</a></li>
</ul>
</li>
<li><a href="#%E7%A3%81%E7%9B%98%E5%BB%B6%E8%BF%9F">磁盘延迟</a>
<ul>
<li><a href="#%E4%BA%A4%E6%9B%BF%E7%BC%96%E5%8F%B7">交替编号</a></li>
<li><a href="#%E7%A3%81%E7%9B%98%E5%9C%B0%E5%9D%80%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1">磁盘地址结构设计</a></li>
<li><a href="#%E9%94%99%E4%BD%8D%E5%91%BD%E5%90%8D">错位命名</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93-3">小结</a></li>
</ul>
</li>
<li><a href="#%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86">磁盘管理</a>
<ul>
<li><a href="#%E5%88%9D%E5%A7%8B%E5%8C%96">初始化</a></li>
<li><a href="#%E5%BC%95%E5%AF%BC%E5%9D%97">引导块</a></li>
<li><a href="#%E5%9D%8F%E5%9D%97">坏块</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93-4">小结</a></li>
</ul>
</li>
</ul>
</p>
<h1 id="操作系统第二十次课小结"><a class="markdownIt-Anchor" href="#操作系统第二十次课小结"></a> 操作系统第二十次课小结</h1>
<h2 id="磁盘结构"><a class="markdownIt-Anchor" href="#磁盘结构"></a> 磁盘结构</h2>
<h3 id="基本属性"><a class="markdownIt-Anchor" href="#基本属性"></a> 基本属性</h3>
<ul>
<li>
<p><strong>磁盘</strong>：表面由磁性物质组成，记录二进制数据</p>
</li>
<li>
<p><strong>磁道</strong>：磁盘盘面分多个同心圆，每圈就是一个磁道</p>
</li>
<li>
<p><strong>扇区</strong>：一个磁道划分为多个扇区，每个扇区就是一个磁盘块，<strong>存放的数据相同</strong></p>
</li>
<li>
<p>最内侧磁道的<strong>扇区面积最小</strong>，<strong>数据密度最大</strong></p>
</li>
<li>
<p><strong>读写数据</strong></p>
<ol>
<li>把<strong>磁头移动到</strong>向要读/写的扇区所在的<strong>磁道</strong></li>
<li>转动磁盘，<strong>使目标扇区划过磁头</strong></li>
<li>完成读/写操作</li>
</ol>
</li>
</ul>
<h3 id="物理结构"><a class="markdownIt-Anchor" href="#物理结构"></a> 物理结构</h3>
<ul>
<li>一个盘片可能由正反<strong>两个盘面</strong></li>
<li><strong>每个盘面对应一个磁头</strong></li>
<li>磁头<strong>移动方向</strong>为 沿半径 圆心 ⟷ 圆周</li>
<li>所有磁头连在同一个磁臂上，<strong>共同移动</strong></li>
<li>所有盘面中相对位置相同的磁盘组成<strong>柱面</strong>，故柱面定位磁道</li>
<li>（<strong>柱面号</strong>，<strong>盘面号</strong>，<strong>扇区号</strong>）定位任意一个磁盘块</li>
<li>根据地址读取块过程
<ol>
<li><strong>根据柱面号移动磁臂</strong>，让磁头指向指定柱面</li>
<li><strong>激活指定盘面对应的磁头</strong></li>
<li>磁盘旋转，<strong>指定扇区从磁头下划过</strong>，完成对指定扇区的读/写</li>
</ol>
</li>
</ul>
<h3 id="磁盘分类"><a class="markdownIt-Anchor" href="#磁盘分类"></a> 磁盘分类</h3>
<ul>
<li><strong>活动头磁盘</strong>：<strong>磁头可移动</strong>，磁臂来回伸缩带动磁头定位磁道<br />
<strong>固定头磁盘</strong>：<strong>磁头不可移动</strong>，每个磁道一个磁头</li>
<li><strong>可换</strong>磁盘 ---- <strong>固定</strong>磁盘</li>
</ul>
<h3 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/07/02/rtHucoWAkEpRLg9.jpg" alt="磁盘结构05小结" /></p>
<h2 id="磁盘调度算法"><a class="markdownIt-Anchor" href="#磁盘调度算法"></a> 磁盘调度算法</h2>
<h3 id="读写操作时间"><a class="markdownIt-Anchor" href="#读写操作时间"></a> 读写操作时间</h3>
<ul>
<li><strong>寻找（道）时间</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">T_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ：在读/写数据前，<strong>磁头移动到磁道花费的时间</strong>
<ol>
<li>启动磁头臂需要时间 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span> ；</li>
<li>移动磁头需要时间，假设匀速，每跨一条磁道耗时为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>，总共 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 条，则寻道时间 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>S</mi></msub><mo>=</mo><mi>s</mi><mo>+</mo><mi>n</mi><mo>⋅</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">T_S = s + n\cdot m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span></li>
</ol>
</li>
<li><strong>延迟时间</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">T_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ：<strong>通过旋转磁盘使磁头定位到目标扇区所需时间</strong>
<ul>
<li>设转速为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mtext> </mtext><mi mathvariant="normal">转</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">r\ 转/s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace"> </span><span class="mord cjk_fallback">转</span><span class="mord">/</span><span class="mord mathdefault">s</span></span></span></span>，则平均延迟时间为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>R</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>r</mi></mfrac><mo>⋅</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>r</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">T_R = \frac1r \cdot \frac12 = \frac1{2r}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
</ul>
</li>
<li><strong>传输时间</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">T_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：<strong>从磁盘读出或写入数据所经历的时间</strong>
<ul>
<li>设转速为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mtext> </mtext><mi mathvariant="normal">转</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">r\ 转/s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace"> </span><span class="mord cjk_fallback">转</span><span class="mord">/</span><span class="mord mathdefault">s</span></span></span></span>，此次读写字节数为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>，每个磁道上的字节数为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>，则传输时间 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>t</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>r</mi></mfrac><mo>⋅</mo><mfrac><mi>b</mi><mi>n</mi></mfrac><mo>=</mo><mfrac><mi>b</mi><mrow><mi>r</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">T_t=\frac1r\cdot\frac bn=\frac b{rN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
</ul>
</li>
<li><strong>总平均存取时间</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mi>a</mi></msub><mo>=</mo><msub><mi>T</mi><mi>s</mi></msub><mo>+</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>r</mi></mrow></mfrac><mo>+</mo><mfrac><mi>b</mi><mrow><mi>r</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">T_a=T_s+\frac 1{2r}+\frac b{rN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>
<ul>
<li>延迟时间和传输时间与磁盘转速<strong>线性相关</strong>，且转速是硬件的<strong>固有属性</strong>，因此这两段时间无法被操作系统优化</li>
<li><strong>操作系统的磁盘调度算法直接影响寻道时间</strong></li>
</ul>
</li>
</ul>
<h3 id="先来先服务算法fcfs"><a class="markdownIt-Anchor" href="#先来先服务算法fcfs"></a> 先来先服务算法（FCFS）</h3>
<ul>
<li>根据进程<strong>请求访问磁盘的先后顺序</strong>进行调度</li>
<li>优点：公平；访问磁道<strong>集中</strong>时，性能较好</li>
<li>缺点：访问磁道<strong>分散</strong>时，性能很差，寻道时间长</li>
</ul>
<blockquote>
<p>磁头初始为 100，访问顺序为 55、58、39、18、90、160、150、38、184</p>
<p>根据 FCFS 规则，磁头共移动了 45+3+19+21+72+70+10+112+146=498 个磁道</p>
<p>平均移动 498/9=55.3 个磁道 （<strong>平均寻找长度</strong>）</p>
</blockquote>
<h3 id="最短寻找时间优先sstf"><a class="markdownIt-Anchor" href="#最短寻找时间优先sstf"></a> 最短寻找时间优先（SSTF）</h3>
<ul>
<li>优先处理<strong>与当前磁头位置最近的磁道</strong>，保证每次寻道时间最短，但并不是总的寻道时间最短 （<strong>贪心</strong>）</li>
<li>优点：性能较好，平均寻道时间短</li>
<li>缺点：可能<strong>饥饿</strong></li>
</ul>
<blockquote>
<p>同上例，总共移动了 （100-18）+（184-18）=248 个磁道</p>
<p>平均寻找长度 = 248/9 = 27.5</p>
</blockquote>
<h3 id="扫描算法scan"><a class="markdownIt-Anchor" href="#扫描算法scan"></a> 扫描算法（SCAN）</h3>
<ul>
<li><strong>只有磁头移动到最外侧磁道时才向内移动</strong>，<strong>只有移动到最内侧磁道时向外移动</strong> （<strong>电梯算法</strong>）</li>
<li>优点：性能较好，平均寻道时间较短，<strong>不会饥饿</strong></li>
<li>缺点：读取了当前最边缘的磁道即可转向，<strong>无需移动到最内/外侧</strong>；对各个位置的磁道<strong>响应频率不平均</strong></li>
</ul>
<blockquote>
<p>同上例，且假设正往号数增大的方向移动，号数范围 0~200</p>
<p>共移动了 （200-100）+（200-18）=282 个磁道</p>
<p>平均寻找长度 = 282/9 = 31.3</p>
</blockquote>
<h3 id="look-调度算法"><a class="markdownIt-Anchor" href="#look-调度算法"></a> LOOK 调度算法</h3>
<ul>
<li>改进 SCAN，<strong>在移动方向上没有别的而请求就立即转向</strong></li>
<li>优点：相对于 SCAN，<strong>寻道时间进一步缩短</strong></li>
</ul>
<blockquote>
<p>共移动了 （184-100）+（184-18）=250 个磁道</p>
<p>平均寻找长度 = 250/9 = 27.5</p>
</blockquote>
<h3 id="循环扫描算法c-scan"><a class="markdownIt-Anchor" href="#循环扫描算法c-scan"></a> 循环扫描算法（C-SCAN）</h3>
<ul>
<li>规定<strong>只按特定的一个方向移动</strong>时，才处理请求，<strong>返回时直接快速移动至起始端</strong></li>
<li>优点：相对于 SCAN，对各个位置磁道的<strong>响应频率平均</strong></li>
<li>缺点：<strong>多余移动</strong>；平均寻道时间比 SCAN <strong>更长</strong></li>
</ul>
<blockquote>
<p>共移动了 （200-100）+（200-0）+（90-0）=390 个磁道</p>
<p>平均寻找长度 = 390/9 = 43.3</p>
</blockquote>
<h3 id="c-look-调度算法"><a class="markdownIt-Anchor" href="#c-look-调度算法"></a> C-LOOK 调度算法</h3>
<ul>
<li>同 LOOK</li>
<li>优点：相对于 C-SCAN，<strong>寻道时间进一步缩短</strong></li>
</ul>
<blockquote>
<p>共移动了 （184-100）+（184-18）+（90-18）=322 个磁道</p>
<p>平均寻找长度 = 322/9 = 35.8</p>
</blockquote>
<h3 id="小结-2"><a class="markdownIt-Anchor" href="#小结-2"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/07/02/Ju6RhEFLI3QXZV8.jpg" alt="磁盘调度算法08小结" /></p>
<h2 id="磁盘延迟"><a class="markdownIt-Anchor" href="#磁盘延迟"></a> 磁盘延迟</h2>
<ul>
<li>磁头读入一个扇区后<strong>需要时间处理</strong>，读几个连续扇区时，<strong>扇区相邻导致磁头因处理数据而错过下一扇区</strong>，造成多余开销</li>
</ul>
<h3 id="交替编号"><a class="markdownIt-Anchor" href="#交替编号"></a> 交替编号</h3>
<ul>
<li><strong>让逻辑上相邻的扇区在物理上有一定的间隔</strong></li>
</ul>
<h3 id="磁盘地址结构设计"><a class="markdownIt-Anchor" href="#磁盘地址结构设计"></a> 磁盘地址结构设计</h3>
<ul>
<li>地址结构使用（<strong>柱面号</strong>，<strong>盘面号</strong>，<strong>扇区号</strong>）<strong>是为了处理连续读写时尽量少移动磁头</strong>，减少物理移动耗时</li>
<li>按连续的二进制数读写，<strong>越高位变化次数越少</strong>，故柱面号在前，<strong>保证连续时磁道变化次数更少</strong></li>
</ul>
<blockquote>
<p>同样读（000，000，000）~（000，011，111）</p>
<p>若采用（盘面号，<strong>柱面号</strong>，扇区号）需移动磁头 <strong>4</strong> 次</p>
<p>而采用（<strong>柱面号</strong>，盘面号，扇区号）需移动磁头 <strong>0</strong> 次</p>
</blockquote>
<h3 id="错位命名"><a class="markdownIt-Anchor" href="#错位命名"></a> 错位命名</h3>
<ul>
<li><strong>上下两个相邻盘面的编号错开</strong>，读完上盘面最后一位后，读下盘面的首位时<strong>跳过磁头处理时间</strong></li>
</ul>
<h3 id="小结-3"><a class="markdownIt-Anchor" href="#小结-3"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/07/02/u2STFY5PHEB8crW.jpg" alt="磁盘延迟05小结" /></p>
<h2 id="磁盘管理"><a class="markdownIt-Anchor" href="#磁盘管理"></a> 磁盘管理</h2>
<h3 id="初始化"><a class="markdownIt-Anchor" href="#初始化"></a> 初始化</h3>
<ol>
<li>
<p><strong>低级格式化</strong>（物理格式化），将磁盘各磁道<strong>划分为扇区</strong></p>
<ul>
<li>一个扇区分为<strong>头</strong>、<strong>数据区域</strong>、<strong>尾</strong>三部分</li>
<li>头尾存放管理扇区的各种数据结构</li>
</ul>
</li>
<li>
<p>将磁盘分区，<strong>各分区由若干柱面组成</strong></p>
 <img src="https://i.loli.net/2020/07/02/D76T9nEJXUeSk1s.png" alt="image-20200525183918830" style="zoom:50%;" />
</li>
<li>
<p><strong>逻辑格式化</strong>，创建文件系统，包括创建文件系统根目录、初始化存储空间管理所用的数据结构（位示图、空闲分区表等）</p>
</li>
</ol>
<h3 id="引导块"><a class="markdownIt-Anchor" href="#引导块"></a> 引导块</h3>
<ul>
<li><strong>初始化程序</strong>（自举程序）：完成计算机开机时的一系列初始化工作</li>
<li><strong>ROM</strong>：只读存储器，存放初始化程序，出厂时写入，集成在主板，<strong>不可再修改</strong></li>
<li>为便于自举程序的修改，ROM 中只存入<strong>小部分</strong>，<strong>完整的</strong>自举程序存放在磁盘的<strong>启动块</strong>（<strong>即引导块</strong>），启动块位于<strong>磁盘固定位置</strong></li>
<li>拥有启动分区的磁盘成为<strong>启动磁盘</strong>或<strong>系统磁盘</strong></li>
<li>开机运行<strong>自举装入</strong>程序，找到<strong>引导块</strong>，将<strong>完整的自举程序</strong>读入内存，完成初始化</li>
</ul>
<h3 id="坏块"><a class="markdownIt-Anchor" href="#坏块"></a> 坏块</h3>
<ul>
<li><strong>已损坏或无法使用的扇区</strong>，属于硬件故障，操作系统无法修复，标记后不再使用</li>
<li>对于简单的磁盘，在逻辑格式化时对磁盘进行检查，在 <strong>FAT</strong> 标明坏块位置 （<strong>该方式坏块对操作系统可见</strong>）</li>
<li>对于复杂磁盘，磁盘控制器维护一个<strong>坏块链表</strong>，物理格式化时就进行坏块链的初始化</li>
<li><strong>扇区备用</strong>：保留部分备用扇区用于替换坏块，<strong>该方式坏块对操作系统不可见</strong></li>
</ul>
<h3 id="小结-4"><a class="markdownIt-Anchor" href="#小结-4"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/07/02/MqCmzEc2GRTOIgH.jpg" alt="磁盘管理04小结" /></p>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>OS-21-I/O设备与控制</title>
    <url>/2020/07/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E6%AC%A1%E8%AF%BE%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#io-%E8%AE%BE%E5%A4%87">I/O 设备</a></li>
<li><a href="#io-%E6%8E%A7%E5%88%B6%E5%99%A8">I/O 控制器</a>
<ul>
<li><a href="#%E5%8A%9F%E8%83%BD">功能</a></li>
<li><a href="#%E7%BB%84%E6%88%90">组成</a></li>
<li><a href="#%E5%86%85%E5%AD%98%E6%98%A0%E5%83%8F%E4%B8%8E%E5%AF%84%E5%AD%98%E5%99%A8%E7%8B%AC%E7%AB%8B%E7%BC%96%E5%9D%80">内存映像与寄存器独立编址</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93">小结</a></li>
</ul>
</li>
<li><a href="#io-%E6%8E%A7%E5%88%B6%E6%96%B9%E5%BC%8F">I/O 控制方式</a>
<ul>
<li><a href="#%E7%A8%8B%E5%BA%8F%E7%9B%B4%E6%8E%A5%E6%8E%A7%E5%88%B6">程序直接控制</a></li>
<li><a href="#%E4%B8%AD%E6%96%AD%E9%A9%B1%E5%8A%A8%E6%96%B9%E5%BC%8F">中断驱动方式</a></li>
<li><a href="#dma-%E6%96%B9%E5%BC%8F">DMA 方式</a></li>
<li><a href="#%E9%80%9A%E9%81%93%E6%8E%A7%E5%88%B6%E6%96%B9%E5%BC%8F">通道控制方式</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93-2">小结</a></li>
</ul>
</li>
</ul>
</p>
<h1 id="操作系统第二十一次课小结"><a class="markdownIt-Anchor" href="#操作系统第二十一次课小结"></a> 操作系统第二十一次课小结</h1>
<h2 id="io-设备"><a class="markdownIt-Anchor" href="#io-设备"></a> I/O 设备</h2>
<p><img src="https://i.loli.net/2020/07/02/9PKR6MQb1iyejBA.jpg" alt="IO设备" /></p>
<h2 id="io-控制器"><a class="markdownIt-Anchor" href="#io-控制器"></a> I/O 控制器</h2>
<h3 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能</h3>
<ul>
<li>又称<strong>设备控制器</strong>，属于<strong>电子部件</strong>（印刷电路板），CPU 控制 I/O 控制器，I/O 控制器控制设备的机械部件</li>
<li><strong>接受和识别 CPU 发出的命令</strong>：如 read/write 命令，控制器中由相应的<strong>控制寄存器</strong>来存放命令和参数</li>
<li><strong>向 CPU 报告设备的状态</strong>：由<strong>状态寄存器</strong>记录 I/O 设备当前状态（1 忙碌，0 空闲，或相反）</li>
<li><strong>数据交换</strong>：输入或输出由<strong>数据寄存器</strong>暂存数据后传送到 CPU 或设备</li>
<li><strong>地址识别</strong>：通过 CPU 提供的地址<strong>区分和查找指定的各个寄存器</strong></li>
</ul>
<h3 id="组成"><a class="markdownIt-Anchor" href="#组成"></a> 组成</h3>
<p><img src="https://i.loli.net/2020/07/02/Ht8mOJr34e6ENvb.png" alt="image-20200529185630970" /></p>
<ul>
<li><strong>CPU 与控制器的接口</strong>
<ul>
<li>实现 CPU 与控制器之间的通信</li>
<li>CPU <strong>通过控制线发出命令</strong>，<strong>通过地址线指明要操作的设备</strong>，<strong>通过数据线存取数据</strong>到 I/O 控制器</li>
</ul>
</li>
<li><strong>I/O 逻辑</strong>
<ul>
<li>负责<strong>接收和识别</strong>CPU的各种<strong>命令</strong>（如地址译码）</li>
<li>负责<strong>对设备发出命令</strong></li>
</ul>
</li>
<li><strong>控制器与设备的接口</strong>
<ul>
<li>实现控制器与设备的<strong>通信</strong></li>
<li>此接口也有<strong>控制寄存器</strong>（控制器向设备发信）、<strong>状态寄存器</strong>（设备反馈空闲/忙碌状态）、<strong>数据寄存器</strong>（需要输入输出的数据）</li>
</ul>
</li>
<li>一个 I/O 控制器可对应<strong>多个</strong>设备</li>
<li>数据/状态/控制<strong>寄存器可能有多个</strong>，<strong>每组对应一个具体设备</strong>，且都需有相应的<strong>地址</strong>以方便 CPU 操作</li>
</ul>
<h3 id="内存映像与寄存器独立编址"><a class="markdownIt-Anchor" href="#内存映像与寄存器独立编址"></a> 内存映像与寄存器独立编址</h3>
<ul>
<li><strong>内存映像 I/O</strong>：寄存器地址占用内存地址的部分空间，即<strong>寄存器与内存地址统一编址</strong><br />
优点：<strong>简化指令</strong>，可用内存操作的指令操作控制器</li>
<li><strong>寄存器独立编址</strong>：采用 I/O 专用地址<br />
缺点：<strong>需要专门的指令，操作时不仅要指明寄存器，还有控制器编号</strong></li>
</ul>
<h3 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/07/02/t4NiuaEnWwbDYVL.png" alt="IO控制器04小结" /></p>
<h2 id="io-控制方式"><a class="markdownIt-Anchor" href="#io-控制方式"></a> I/O 控制方式</h2>
<h3 id="程序直接控制"><a class="markdownIt-Anchor" href="#程序直接控制"></a> 程序直接控制</h3>
<ul>
<li>
<p><strong>流程</strong></p>
<ol>
<li>CPU <strong>向控制器发出读指令</strong>，于是设备<strong>运行</strong>，将状态寄存器置为 1 （<strong>忙碌</strong>）</li>
<li><strong>轮询检查控制器的状态</strong>，循环判断直到<strong>设备运行完毕</strong>将状态寄存器置 0 （<strong>空闲</strong>）</li>
<li>CPU 轮询期间，<strong>输入设备</strong>准备好数据后将数据<strong>传给控制器</strong>，并<strong>报告自身状态</strong></li>
<li>控制器将输入的数据<strong>放到数据寄存器</strong>中，并置状态为 0 （<strong>空闲</strong>）</li>
<li>则设备<strong>已就绪</strong>，将<strong>数据寄存器</strong>的内容读入 <strong>CPU</strong> 的寄存器，再从 CPU 放入<strong>内存</strong>中</li>
<li>若还需继续读入数据，则 CPU <strong>再次发出读指令</strong></li>
</ol>
</li>
<li>
<p><strong>要点</strong></p>
<ul>
<li>
<img src="https://i.loli.net/2020/07/02/Ul65gp7IPMqBycY.png" alt="image-20200529193904579" style="zoom: 50%;" />
</li>
<li>CPU <strong>干预频率</strong>
<ul>
<li><strong>很频繁</strong>，I/O 操作开始之前、完成之后都需要 CPU 介入</li>
<li>等待 I/O 完成的过程需要 CPU <strong>不断轮询检查</strong></li>
</ul>
</li>
<li>数据传送<strong>单位</strong>：每次读/写<strong>一个字</strong></li>
<li>数据<strong>流向</strong>
<ul>
<li>读操作（数据输入）：I/O 设备 → CPU → 内存</li>
<li>写操作（数据输出）：内存 → CPU → I/O 设备</li>
</ul>
</li>
<li><strong>优点</strong>：<strong>实现简单</strong>，在读/写操作后加入循环检查的指令即可<br />
<strong>缺点</strong>：CPU 和 I/O 设备<strong>只能串行工作</strong>，CPU 一直轮询，长期处于<strong>忙等</strong>，CPU <strong>利用率低</strong></li>
</ul>
</li>
</ul>
<h3 id="中断驱动方式"><a class="markdownIt-Anchor" href="#中断驱动方式"></a> 中断驱动方式</h3>
<ul>
<li><strong>流程</strong>
<ol>
<li>引入<strong>中断机制</strong>，将<strong>等待 I/O</strong> 的进程<strong>阻塞</strong>而进行别的进程</li>
<li>待完成 I/O 操作后，向 CPU <strong>发出中断信号</strong></li>
<li>CPU 接收到中断信号后，保存当前进程，<strong>转去执行中断处理程序</strong></li>
<li>处理中断过程中，CPU 从 I/O 控制器<strong>读一个字</strong>的数据传送到 CPU <strong>寄存器</strong>，<strong>再写入主存</strong></li>
<li>CPU 恢复等待 I/O 的进程（或<strong>其它进程</strong>）的运行环境，<strong>继续执行</strong></li>
</ol>
</li>
<li><strong>注意事项</strong>
<ul>
<li>CPU <strong>会在每个指令周期的末尾检查中断</strong></li>
<li>中断处理过程需要保存、恢复进程运行环境，<strong>有一定时间开销</strong>，中断频率<strong>过高</strong>会<strong>降低系统性能</strong></li>
</ul>
</li>
<li><strong>要点</strong>
<ul>
<li><img src="https://i.loli.net/2020/07/02/Y8PVKetMOn175UH.png" alt="image-20200530001840586" /></li>
<li>CPU <strong>干预频率</strong>
<ul>
<li>每次 I/O 操作<strong>开始之前</strong>、<strong>完成之后</strong>都需要 CPU 介入</li>
<li>等待 I/O 完成的过程中 CPU <strong>可以切换到别的进程执行</strong></li>
</ul>
</li>
<li>数据传送<strong>单位</strong>：每次读/写<strong>一个字</strong></li>
<li>数据<strong>流向</strong>
<ul>
<li>读操作（数据输入）：I/O 设备 → CPU → 内存</li>
<li>写操作（数据输出）：内存 → CPU → I/O 设备</li>
</ul>
</li>
<li>优点：CPU 不再不停轮询，由 I/O <strong>控制器通过中断信号主动报告完成情况</strong>，CPU 和 I/O 设备可<strong>并行工作</strong>，CPU <strong>利用率提升</strong><br />
缺点：<strong>每个字</strong>的传输都要经过 CPU，<strong>频繁的中断处理会消耗较多的 CPU 时间</strong></li>
</ul>
</li>
</ul>
<h3 id="dma-方式"><a class="markdownIt-Anchor" href="#dma-方式"></a> DMA 方式</h3>
<ul>
<li><strong>直接存储器存取</strong>，主要用于<strong>块</strong>设备</li>
<li><strong>DMA 控制器</strong>
<ul>
<li>DR（<strong>数据寄存器</strong>）：<strong>暂存</strong>从设备到内存（或相反）的数据</li>
<li>MAR（<strong>内存地址寄存器</strong>）：输入时，存放最终<strong>内存存放位置</strong>；输出时，存放待输出数据<strong>在内存的存放位置</strong></li>
<li>DC（<strong>数据计数器</strong>）：表示<strong>剩余</strong>要读/写的<strong>字节数</strong></li>
<li>CR（<strong>命令/状态寄存器</strong>）：用于 CPU 发来的 <strong>I/O 命令</strong>，<strong>或设备的状态信息</strong></li>
<li>DMA <strong>内部也是按字读写</strong>，并非整块直接操作</li>
<li><img src="https://i.loli.net/2020/07/02/x7yaqEn2PHjr4Mf.jpg" alt="image-20200530004544018" /></li>
</ul>
</li>
<li><strong>流程</strong>
<ol>
<li>CPU 指明此次<strong>进行的操作</strong>（如读/写）、读（写）的<strong>数据量</strong>、<strong>存放在内存的位置</strong>、数据<strong>在外部设备</strong>（如磁盘）上<strong>的地址</strong></li>
<li>DMA 控制器根据 CPU 提出的要求完成数据 I/O 工作，<strong>整块数据</strong>的传输完成后才向 CPU 发出<strong>中断信号</strong></li>
</ol>
</li>
<li><strong>要点</strong>
<ul>
<li><img src="https://i.loli.net/2020/07/02/GfcovEZtmSpDjR1.png" alt="image-20200530005428553" /></li>
<li>CPU <strong>干预频率</strong>
<ul>
<li>仅在传送一个或多个数据块的<strong>开始和结束</strong>时才需要干预</li>
</ul>
</li>
<li>数据传送<strong>单位</strong>
<ul>
<li>每次读/写<strong>一个或多个块</strong>，但 <strong>DMA 内部读写依旧按字</strong></li>
<li><strong>每次读写</strong>的只能是<strong>连续</strong>的<strong>多个块</strong>，且装入内存后也是<strong>连续</strong>的<br />
<strong>若不连续</strong>，则需<strong>多次</strong>发送 I/O 指令</li>
</ul>
</li>
<li>数据<strong>流向</strong>
<ul>
<li><strong>不再经过 CPU</strong></li>
<li>读操作（数据输入）：I/O 设备 → 内存</li>
<li>写操作（数据输出）：内存 → I/O 设备</li>
</ul>
</li>
<li>优点：数据传输以<strong>块</strong>为单位，CPU <strong>介入频率进一步降低</strong>；数据传输<strong>直接写入内存</strong>；CPU 和 I/O 设备的<strong>并行性提升</strong><br />
缺点：CPU <strong>每发送一条指令只能读写连续的数据块</strong>，<strong>不连续块</strong>需多条指令，<strong>进行多次中断处理才能完成</strong></li>
</ul>
</li>
</ul>
<h3 id="通道控制方式"><a class="markdownIt-Anchor" href="#通道控制方式"></a> 通道控制方式</h3>
<ul>
<li>
<p><strong>通道</strong>：<strong>硬件</strong>，识别并执行一系列<strong>通道指令</strong></p>
</li>
<li>
<p><strong>流程</strong></p>
<p><img src="https://i.loli.net/2020/07/02/6rDmlegBk8EIoST.png" alt="image-20200530093156087" /></p>
<ol>
<li>CPU <strong>向通道发送指令</strong>，指明<strong>通道程序的内存位置</strong>、要操作的 <strong>I/O 设备</strong>，而后切换到其他进程</li>
<li><strong>通道执行内存中的通道程序</strong>，其中指明了读/写的<strong>数据量</strong>、<strong>数据存放地址</strong></li>
<li><strong>通道执行完规定任务后</strong>，向 CPU <strong>发出中断信号</strong>，由其处理中断</li>
</ol>
</li>
<li>
<p><strong>要点</strong></p>
<ul>
<li><strong>通道可执行的指令很单一</strong>，存放于主机<strong>内存</strong>中，与 CPU <strong>共享内存</strong></li>
<li><img src="https://i.loli.net/2020/07/02/JAOVWPpk5YLfu23.png" alt="image-20200530011602785" /></li>
<li>CPU <strong>干预频率</strong>
<ul>
<li><strong>极低</strong>，<strong>通道自主执行相应通道程序</strong>，只在完成一组数据块的读/写后才发出<strong>中断信号</strong>，请求 CPU 干预</li>
</ul>
</li>
<li>数据传送<strong>单位</strong>：每次读/写<strong>一组数据块</strong></li>
<li>数据<strong>流向</strong>
<ul>
<li><strong>在通道的控制下进行</strong></li>
<li>读操作（数据输入）：I/O 设备 → 内存</li>
<li>写操作（数据输出）：内存 → I/O 设备</li>
</ul>
</li>
<li>优点：<strong>CPU、通道、I/O 设备可并行工作，资源利用率高</strong><br />
缺点：实现复杂，需专门的通道硬件支持</li>
</ul>
</li>
</ul>
<h3 id="小结-2"><a class="markdownIt-Anchor" href="#小结-2"></a> 小结</h3>
<table>
<thead>
<tr>
<th style="text-align:center">方式</th>
<th style="text-align:center">一次读/写过程</th>
<th style="text-align:center">干预频率</th>
<th style="text-align:center">传输单位</th>
<th style="text-align:center">数据流向</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">程序直接控制</td>
<td style="text-align:center">CPU 发出 I/O 指令后需<strong>不断轮询</strong></td>
<td style="text-align:center">极高</td>
<td style="text-align:center">字</td>
<td style="text-align:center">设备 → CPU → 内存<br />内存 → CPU → 设备</td>
</tr>
<tr>
<td style="text-align:center">中断驱动方式</td>
<td style="text-align:center">CPU 发出 I/O 命令后可做其他事<br /> I/O 完成后 I/O 控制器发出<strong>中断信号</strong></td>
<td style="text-align:center">高</td>
<td style="text-align:center">字</td>
<td style="text-align:center">同上</td>
</tr>
<tr>
<td style="text-align:center">DMA 方式</td>
<td style="text-align:center">CPU 发出 I/O 命令后可做其他事<br /> I/O 完成后 DMA 控制器发出<strong>中断信号</strong></td>
<td style="text-align:center">中</td>
<td style="text-align:center">块</td>
<td style="text-align:center">设备 → 内存<br />内存 → 设备</td>
</tr>
<tr>
<td style="text-align:center">通道控制方式</td>
<td style="text-align:center">CPU 发出 I/O 命令后可做其他事<br />通道执行通道程序以完成 I/O<br /> I/O 完成后<strong>通道</strong>发出<strong>中断信号</strong></td>
<td style="text-align:center">低</td>
<td style="text-align:center">一组块</td>
<td style="text-align:center">同上</td>
</tr>
</tbody>
</table>
<ul>
<li>每阶段的优点都是解决上一阶段的最大缺点</li>
<li>整体过程<strong>尽量减少 CPU 对 I/O 过程的干预</strong>，以便处理其它事务</li>
</ul>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>OS-9-信号量机制</title>
    <url>/2020/07/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%B9%9D%E6%AC%A1%E8%AF%BE%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<h1 id="操作系统第九次课小结"><a class="markdownIt-Anchor" href="#操作系统第九次课小结"></a> 操作系统第九次课小结</h1>
<hr />
<p><ul class="markdownIt-TOC">
<li><a href="#1-%E4%BF%A1%E5%8F%B7%E9%87%8F%E6%9C%BA%E5%88%B6">1. 信号量机制</a>
<ul>
<li><a href="#11-%E5%8E%9F%E6%96%B9%E6%B3%95%E7%9A%84%E4%B8%8D%E8%B6%B3">1.1 原方法的不足</a></li>
<li><a href="#12-%E6%A6%82%E5%BF%B5">1.2 概念</a></li>
<li><a href="#13-%E6%95%B4%E5%9E%8B%E4%BF%A1%E5%8F%B7%E9%87%8F">1.3  整型信号量</a></li>
<li><a href="#15-%E6%80%BB%E7%BB%93">1.5 总结</a></li>
</ul>
</li>
<li><a href="#2-%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5-%E4%BA%92%E6%96%A5-%E5%89%8D%E9%A9%B1%E7%9A%84%E5%AE%9E%E7%8E%B0">2. 进程同步、互斥、前驱的实现</a>
<ul>
<li><a href="#21-%E4%BA%92%E6%96%A5">2.1 互斥</a></li>
<li><a href="#22-%E5%90%8C%E6%AD%A5">2.2 同步</a></li>
<li><a href="#23-%E5%89%8D%E9%A9%B1">2.3 前驱</a></li>
<li><a href="#24-%E6%80%BB%E7%BB%93">2.4 总结</a></li>
</ul>
</li>
</ul>
</p>
<hr />
<h2 id="1-信号量机制"><a class="markdownIt-Anchor" href="#1-信号量机制"></a> 1. 信号量机制</h2>
<hr />
<h3 id="11-原方法的不足"><a class="markdownIt-Anchor" href="#11-原方法的不足"></a> 1.1 原方法的不足</h3>
<ul>
<li>标志法中，<strong>进入区的检查和上锁操作无法一气呵成</strong></li>
<li>导致<strong>先检查法</strong>两个进程可能<strong>同时进入临界区</strong>，<strong>后检查法</strong>可能<strong>都不能进入临界区</strong></li>
<li>所有的解决方案<strong>都无法实现让权等待</strong></li>
</ul>
<h3 id="12-概念"><a class="markdownIt-Anchor" href="#12-概念"></a> 1.2 概念</h3>
<ul>
<li>信号量：一个变量（可以是<strong>整数</strong>，也可以是<strong>记录型变量</strong>），用于表示系统中的某种<strong>资源的数量</strong></li>
<li>一对原语：<strong>wait(S)<strong>和</strong>signal(S)</strong>,S是传入的信号量参数</li>
<li>wait、signal也称<strong>P、V操作 → P(S)、V(S)</strong></li>
</ul>
<h3 id="13-整型信号量"><a class="markdownIt-Anchor" href="#13-整型信号量"></a> 1.3  整型信号量</h3>
<ul>
<li>
<p>与普通整型变量的区别：对信号量的<strong>操作只有三种，初始化、P操作、V操作</strong></p>
</li>
<li>
<pre class="highlight"><code class="c">  <span class="keyword">int</span> S = <span class="number">1</span>; <span class="comment">// 信号量 表示当前可用资源数量</span>
  <span class="function"><span class="keyword">void</span> <span class="title">wait</span><span class="params">(<span class="keyword">int</span> S)</span> </span>{ <span class="comment">// wait 原语 相当于进入区</span>
      <span class="keyword">while</span> (S &lt;= <span class="number">0</span>) ; <span class="comment">// 当可用资源还有剩余（大于零）是退出循环等待</span>
      S--; <span class="comment">// 使用资源 则剩余资源-1</span>
  }
  <span class="function"><span class="keyword">void</span> <span class="title">signal</span><span class="params">(<span class="keyword">int</span> S)</span> </span>{ <span class="comment">// signal 原语 相当于退出区</span>
      S++; <span class="comment">// 使用完资源后 释放资源 剩余资源+1</span>
  }
  <span class="comment">// 进程 P:</span>
  <span class="comment">// ···</span>
  wait(S) <span class="comment">// 进入区</span>
  <span class="comment">// 代码块 临界区</span>
  signal(S) <span class="comment">// 退出区</span>
  <span class="comment">// ···</span>
  &lt;!--￼<span class="number">0</span>--&gt;

</code></pre>
</li>
<li>
<p>wait : <strong>先扣除剩余数–&gt;再判断资源剩余数–&gt;不足就放入等待队列</strong> （被扣除后的剩余数=0才表示资源正好分配完)</p>
</li>
<li>
<p>signal: <strong>先回收资源–&gt;再判断等待队列个数–&gt;有等待者就唤醒</strong> （abs(value) == 等待数）</p>
</li>
<li>
<p>Eg : <img src="https://i.loli.net/2020/03/27/1PxCdfVrIWaGRE5.jpg" alt="Example" /></p>
</li>
<li>
<p>要点：</p>
<ul>
<li>P(S)、V(S)用于实现系统资源的<strong>申请</strong>和<strong>释放</strong></li>
<li>S.value 的<strong>初值</strong>表示<strong>资源数目</strong></li>
<li>一次<strong>P操作</strong>意味着<strong>请求</strong>一个单位的该类资源</li>
<li>一次<strong>V操作</strong>意味着<strong>释放</strong>一个单位的该类资源</li>
<li><strong>block 原语进行自我堵塞（运行态–&gt;阻塞态）</strong>，主动放弃了处理机进入等待队列，遵循<strong>让权等待</strong></li>
<li><strong>wakeup 原语唤醒等待队列中的第一个进程（阻塞态–&gt;就绪态）</strong></li>
</ul>
</li>
</ul>
<h3 id="15-总结"><a class="markdownIt-Anchor" href="#15-总结"></a> 1.5 总结</h3>
<p><img src="https://i.loli.net/2020/03/27/MzWtgVNHSjGyLfa.jpg" alt="信号量机制总结" /></p>
<hr />
<h2 id="2-进程同步-互斥-前驱的实现"><a class="markdownIt-Anchor" href="#2-进程同步-互斥-前驱的实现"></a> 2. 进程同步、互斥、前驱的实现</h2>
<hr />
<h3 id="21-互斥"><a class="markdownIt-Anchor" href="#21-互斥"></a> 2.1 互斥</h3>
<ul>
<li>
<p>步骤：</p>
<ul>
<li>分析<strong>划定临界区</strong>范围</li>
<li><strong>设置互斥信号量mutex，初始值为 1</strong></li>
<li>在临界区之<strong>前</strong>执行<strong>P(mutex)</strong></li>
<li>在临界区之<strong>后</strong>执行<strong>V(mutex)</strong></li>
</ul>
</li>
<li>
<p>注意事项：</p>
<ul>
<li>
<p><strong>不同临界资源要设置不同的互斥信号量</strong></p>
<p><img src="https://i.loli.net/2020/03/27/eBDLYlz1Vy3Tpxf.png" alt="" /></p>
</li>
<li>
<p><strong>P、V操作成对存在</strong>，没有P不保证互斥，没有V资源不能释放、进程不能唤醒</p>
</li>
</ul>
</li>
<li>
<p>实现模板：</p>
  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line">semaphore mutex = <span class="number">1</span>; <span class="comment">// 初始化信号量</span></span><br><span class="line"><span class="function">class <span class="title">Process</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ···</span></span><br><span class="line">    P(mutex); <span class="comment">// 使用临界资源前 P操作加锁</span></span><br><span class="line">    <span class="comment">// 临界代码段···</span></span><br><span class="line">    V(mutex); <span class="comment">// 使用临界资源后 V操作解锁</span></span><br><span class="line">    <span class="comment">// ···</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Process</span> P1;</span><br><span class="line"><span class="built_in">Process</span> P2;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="22-同步"><a class="markdownIt-Anchor" href="#22-同步"></a> 2.2 同步</h3>
<ul>
<li>
<p>步骤：</p>
<ul>
<li>明确<strong>一前一后的两个操作</strong>是什么</li>
<li><strong>设置同步信号量S，初始值为0</strong></li>
<li><strong>在前操作之后执行V(S)</strong></li>
<li><strong>在后操作之前执行P(S)</strong></li>
</ul>
</li>
<li>
<p>过程：</p>
<p><img src="https://i.loli.net/2020/03/27/f8T1L2nUIOSWhad.png" alt="过程" /></p>
</li>
</ul>
<h3 id="23-前驱"><a class="markdownIt-Anchor" href="#23-前驱"></a> 2.3 前驱</h3>
<ul>
<li>
<p><strong>每一对前驱关系都是一个进程同步问题（需要保证一前一后的操作）</strong></p>
</li>
<li>
<p>步骤：</p>
<ul>
<li><strong>为每一对前驱关系各设置一个同步变量</strong></li>
<li><strong>在前操作之后对相应变量执行V操作</strong></li>
<li><strong>在后操作之前对相应变量执行P操作</strong></li>
</ul>
</li>
<li>
<p>过程：<br />
<img src="https://i.loli.net/2020/03/27/UejfP9diwq7bFsR.png" alt="伪代码" /></p>
</li>
<li>
<p>图示：</p>
<p><img src="https://i.loli.net/2020/03/27/vn2MWIlLHJrg7Cc.png" alt="" /></p>
</li>
<li>
<p>效果类似拓扑排序</p>
</li>
</ul>
<h3 id="24-总结"><a class="markdownIt-Anchor" href="#24-总结"></a> 2.4 总结</h3>
<p><img src="https://i.loli.net/2020/03/27/8zMtWAKfPDVuYg6.jpg" alt="实现总结" /></p>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>OS-11-管程与死锁</title>
    <url>/2020/07/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%8D%81%E4%B8%80%E6%AC%A1%E8%AF%BE%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E7%AE%A1%E7%A8%8B">管程</a>
<ul>
<li><a href="#%E6%A6%82%E5%BF%B5">概念</a></li>
<li><a href="#%E4%BC%AA%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0">伪代码实现</a></li>
<li><a href="#%E8%A6%81%E7%82%B9">要点</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93">小结</a></li>
</ul>
</li>
<li><a href="#%E6%AD%BB%E9%94%81">死锁</a>
<ul>
<li><a href="#%E6%A6%82%E5%BF%B5-2">概念</a></li>
<li><a href="#%E5%BF%85%E8%A6%81%E6%9D%A1%E4%BB%B6">必要条件</a></li>
<li><a href="#%E5%8F%91%E7%94%9F%E6%97%B6%E6%9C%BA">发生时机</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93-2">小结</a></li>
</ul>
</li>
</ul>
</p>
<h1 id="第十一次课小结"><a class="markdownIt-Anchor" href="#第十一次课小结"></a> 第十一次课小结</h1>
<hr />
<h2 id="管程"><a class="markdownIt-Anchor" href="#管程"></a> 管程</h2>
<h3 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h3>
<ol>
<li>组成：
<ul>
<li>管程私有的<strong>共享数据结构</strong></li>
<li>操作共享数据的<strong>一组函数</strong></li>
<li>对共享数据设置<strong>初始值</strong>的语句</li>
<li>管程有一个名字</li>
</ul>
</li>
<li>基本特征：
<ul>
<li>管程<strong>私有</strong>的数据只限于管程内部访问</li>
<li>一个进程仅能通过调用管程提供的函数实现共享数据访问（<strong>封装</strong>）</li>
<li><strong>每次仅允许一个进程在管程内执行某个内部程序</strong>（<strong>等待与唤醒机制</strong>）</li>
</ul>
</li>
</ol>
<h3 id="伪代码实现"><a class="markdownIt-Anchor" href="#伪代码实现"></a> 伪代码实现</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">monitor ProducerConsumer</span><br><span class="line">    <span class="comment">// 定义条件变量（没赋值暂不视为信号量） 用于控制insert、remove的同步关系</span></span><br><span class="line">    condition full, empty;  </span><br><span class="line">	<span class="keyword">int</span> count = <span class="number">0</span>;  <span class="comment">// 缓冲区中的产品数量</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(Item item)</span> </span>&#123;  <span class="comment">// 把产品放入缓冲区</span></span><br><span class="line">        <span class="comment">// 先判断 如果已满 则进入阻塞等待 此处视为full.wait()更好理解</span></span><br><span class="line">        <span class="keyword">if</span> (count == N) wait(full);  </span><br><span class="line">        count++;  <span class="comment">// 若未等待 则缓冲区产品数+1</span></span><br><span class="line">        insert_item(item);  <span class="comment">// 添加操作 </span></span><br><span class="line">        <span class="comment">// 如果缓冲区已经有产品了 就唤醒消费者 empty.notify()</span></span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">1</span>) signal(empty); </span><br><span class="line">        <span class="comment">// 为什么设置为1  因为消费者是在count==0时被阻塞 (下文)</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">	<span class="function">Item <span class="title">remove</span><span class="params">()</span> </span>&#123;  <span class="comment">// 从缓冲区中取出一个产品</span></span><br><span class="line">        <span class="comment">// 缓冲区为空时 阻塞  empty.wait()</span></span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">0</span>) wait(empty);  </span><br><span class="line">        count--;  <span class="comment">// 缓冲区产品数-1</span></span><br><span class="line">        <span class="comment">// 缓冲区不满时 唤醒生产者添加产品 full.notify()</span></span><br><span class="line">        <span class="keyword">if</span> (count == N<span class="number">-1</span>) signal(full);  <span class="comment">// 移除产品并返回</span></span><br><span class="line">        <span class="keyword">return</span> remove_item();  </span><br><span class="line">    &#125;</span><br><span class="line"><span class="built_in">end</span> monitor;</span><br><span class="line"><span class="comment">// 代入Java的等待唤醒机制去理解 更容易些</span></span><br><span class="line"><span class="comment">// 生产者 遇满等待 遇1唤醒消费者</span></span><br><span class="line"><span class="comment">// 消费者 遇空等待 遇不满唤醒生产者</span></span><br><span class="line"><span class="comment">// 管程只允许一个进程进入 所以先天实现互斥</span></span><br><span class="line"><span class="comment">// 多余的生产者挂载到 full等待队列  由 signal(full)唤醒</span></span><br><span class="line"><span class="comment">// 多余的消费者挂载到 empty等待队列 由 signal(empty)唤醒</span></span><br><span class="line"><span class="comment">// 使用者不必关心互斥 按需设定同步操作即可</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Producer () &#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        item = produce();  <span class="comment">// 生产</span></span><br><span class="line">        ProducerConsumer.insert(item);  <span class="comment">// 放入  封装</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">Consumer () &#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        item = ProducerConsumer.<span class="built_in">remove</span>();  <span class="comment">// 获取  封装</span></span><br><span class="line">        consume(item);  <span class="comment">// 消费</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="要点"><a class="markdownIt-Anchor" href="#要点"></a> 要点</h3>
<ol>
<li>管程中要有<strong>共享数据、操作函数</strong></li>
<li><strong>每次只开放一个函数，并且只允许一个进程</strong>，这种互斥由编译器自行实现</li>
<li>先天互斥，通过<strong>条件变量和等待/唤醒</strong>解决同步</li>
<li>操作封装</li>
</ol>
<h3 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h3>
<img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200408161640.png" style="zoom:100%;" />
<hr />
<h2 id="死锁"><a class="markdownIt-Anchor" href="#死锁"></a> 死锁</h2>
<h3 id="概念-2"><a class="markdownIt-Anchor" href="#概念-2"></a> 概念</h3>
<ol>
<li>
<p><strong>死锁：各进程互相等待对方手里的资源，导致各进程都堵塞，无法向前推进</strong></p>
</li>
<li>
<p>饥饿：由于长期的得不到所需资源，某进程无法向前推进</p>
</li>
<li>
<p>死循环：某进程执行过程始终跳不出某循环</p>
</li>
<li>
<p><strong>共同点：都是无法向前推进的现象</strong> （程序设计所必须的死循环除外）</p>
</li>
<li>
<p>区别：</p>
<table>
<thead>
<tr>
<th></th>
<th style="text-align:center">区别</th>
</tr>
</thead>
<tbody>
<tr>
<td>死锁</td>
<td style="text-align:center"><strong>至少两个</strong>进程参与才能构成死锁，发生时必定处于<strong>阻塞态</strong></td>
</tr>
<tr>
<td>饥饿</td>
<td style="text-align:center"><strong>可能只有一个</strong>进程，发生时可能处于<strong>阻塞态</strong>（如缺少IO资源），也可能<strong>就绪态</strong>（如缺少CPU）</td>
</tr>
<tr>
<td>死循环</td>
<td style="text-align:center"><strong>可能只有一个进程</strong>，发生时必为<strong>运行态</strong>，是<strong>被管理者的问题</strong></td>
</tr>
</tbody>
</table>
</li>
</ol>
<h3 id="必要条件"><a class="markdownIt-Anchor" href="#必要条件"></a> 必要条件</h3>
<ol>
<li><strong>互斥</strong>条件：必须有对互斥使用的资源的<strong>争抢</strong></li>
<li><strong>不剥夺</strong>条件：<strong>资源只能主动释放</strong>，不能被其他进程强行剥夺</li>
<li><strong>请求和保持</strong>条件：已持有某些资源，同时争抢其他资源</li>
<li><strong>循环等待</strong>条件：存在一种进程<strong>资源的循环等待链</strong>，上一进程占有的资源被下一进程请求</li>
<li><strong>死锁必定存在循环等待，但循环等待未必死锁</strong></li>
</ol>
<h3 id="发生时机"><a class="markdownIt-Anchor" href="#发生时机"></a> 发生时机</h3>
<ol>
<li><strong>对不可剥夺资源的争抢</strong>（如竞争I/O设备，但不包括CPU的竞争）</li>
<li><strong>进程推进顺序非法</strong>，请求和释放资源的顺序不当</li>
<li><strong>信号量的使用不当</strong>，（如生产者-消费者问题，同步与临界区互斥的P、V操作顺序调换）</li>
<li>总而言之，<strong>对不可剥夺资源的不合理分配</strong>可能导致死锁</li>
</ol>
<h3 id="小结-2"><a class="markdownIt-Anchor" href="#小结-2"></a> 小结</h3>
<img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200408164652.jpg" style="zoom:100%;" />]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>OS-22-I/O软件</title>
    <url>/2020/07/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E6%AC%A1%E8%AF%BE%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#io-%E8%BD%AF%E4%BB%B6%E5%B1%82%E6%AC%A1">I/O 软件层次</a>
<ul>
<li><a href="#%E7%94%A8%E6%88%B7%E5%B1%82%E8%BD%AF%E4%BB%B6">用户层软件</a></li>
<li><a href="#%E8%AE%BE%E5%A4%87%E7%8B%AC%E7%AB%8B%E6%80%A7%E8%BD%AF%E4%BB%B6">设备独立性软件</a></li>
<li><a href="#%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F">设备驱动程序</a></li>
<li><a href="#%E4%B8%AD%E6%96%AD%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F">中断处理程序</a></li>
<li><a href="#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">注意事项</a></li>
</ul>
</li>
<li><a href="#io-%E6%A0%B8%E5%BF%83%E5%AD%90%E7%B3%BB%E7%BB%9F">I/O 核心子系统</a>
<ul>
<li><a href="#io-%E8%B0%83%E5%BA%A6">I/O 调度</a></li>
<li><a href="#%E8%AE%BE%E5%A4%87%E4%BF%9D%E6%8A%A4">设备保护</a></li>
<li><a href="#%E5%81%87%E8%84%B1%E6%9C%BA%E6%8A%80%E6%9C%AF">假脱机技术</a>
<ul>
<li><a href="#%E8%84%B1%E6%9C%BA%E6%8A%80%E6%9C%AF">脱机技术</a></li>
<li><a href="#%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E4%BA%95">输入/输出井</a></li>
<li><a href="#%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E8%BF%9B%E7%A8%8B">输入/输出进程</a></li>
<li><a href="#%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E7%BC%93%E5%86%B2%E5%8C%BA">输入/输出缓冲区</a></li>
<li><a href="#%E5%85%B1%E4%BA%AB%E6%89%93%E5%8D%B0%E6%9C%BA">共享打印机</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93">小结</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</p>
<h1 id="操作系统第二十二次课小结"><a class="markdownIt-Anchor" href="#操作系统第二十二次课小结"></a> 操作系统第二十二次课小结</h1>
<h2 id="io-软件层次"><a class="markdownIt-Anchor" href="#io-软件层次"></a> I/O 软件层次</h2>
<ul>
<li>越上层越接近用户，越下层越接近硬件</li>
<li>每层<strong>利用其下层提供的服务</strong>实现某些功能，屏蔽实现的具体细节，<strong>向高层提供服务</strong>（封装）</li>
<li>I/O <strong>核心子系统</strong>：设备独立性软件、设备驱动程序、中断处理程序，属于操作系统<strong>内核</strong>部分</li>
</ul>
<h3 id="用户层软件"><a class="markdownIt-Anchor" href="#用户层软件"></a> 用户层软件</h3>
<ul>
<li>
<p><strong>向上实现了与用户交互的接口</strong>，用户使用相关<strong>库函数</strong>对设备进行操作<br />
<strong>向下</strong>将<strong>用户请求翻译</strong>为格式化的 I/O 请求，通过<strong>系统调用</strong>请求操作系统内核的服务</p>
<blockquote>
<p>Eg: 用户使用函数 <code>printf(&quot;hello, world!&quot;)</code> 会被翻译为等价的 <code>write</code> 系统调用</p>
</blockquote>
</li>
<li>
<p>Windows API：Win 系统向外提供的一系列系统调用格式<strong>过于严格</strong>，因此封装为更便利的<strong>库函数接口</strong>供用户使用</p>
</li>
</ul>
<h3 id="设备独立性软件"><a class="markdownIt-Anchor" href="#设备独立性软件"></a> 设备独立性软件</h3>
<ul>
<li>
<p>又称<strong>设备无关性软件</strong>，实现<strong>大部分</strong>与硬件特性<strong>无关</strong>的功能</p>
</li>
<li>
<p>实现的功能：</p>
<ol>
<li><strong>向上提供统一的系统调用接口</strong>，如 read/write 系统调用</li>
<li>设备的<strong>保护</strong>，视设备为特殊<strong>文件</strong>，不同用户对其的<strong>访问权限不同</strong></li>
<li><strong>差错处理</strong>，对设备的一些错误继续处理</li>
<li>设备的<strong>分配与回收</strong></li>
<li><strong>数据缓冲区管理</strong>，通过缓冲技术屏蔽设备间数据交换单位大小和输出速度的差距</li>
<li>建立逻辑名到物理设备名的<strong>映射关系</strong>，<strong>根据设备类型选择</strong>调用响应的驱动程序<br />
用户或用户层软件发出 I/O 操作相关系统调用时，需<strong>指明</strong>此次要操作的 I/O <strong>逻辑设备名</strong><br />
需要通过<strong>逻辑设备表</strong>（LUT）确定逻辑名对应的<strong>物理设备</strong>，并找到设备对应的<strong>设备驱动程序</strong></li>
</ol>
</li>
<li>
<p><strong>逻辑设备表</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">逻辑设备名</th>
<th style="text-align:center">物理设备名</th>
<th style="text-align:center">驱动程序入口</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">/dev/打印机1</td>
<td style="text-align:center">3</td>
<td style="text-align:center">1024</td>
</tr>
<tr>
<td style="text-align:center">/dev/打印机2</td>
<td style="text-align:center">5</td>
<td style="text-align:center">2048</td>
</tr>
<tr>
<td style="text-align:center">···</td>
<td style="text-align:center">···</td>
<td style="text-align:center">···</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>I/O 设备视为一种<strong>特殊文件</strong>，且不同类型的设备需要<strong>不同的驱动程序</strong>，采用<strong>逻辑设备表</strong>（LUT）</p>
<ol>
<li>整个系统<strong>只需一张</strong> LUT，仅适合<strong>单用户</strong>操作系统</li>
<li><strong>为每个用户设置一张</strong> LUT，各用户使用的逻辑设备名可重复，适用于<strong>多用户</strong>，系统在用户登录时为其建立一个<strong>用户管理进程</strong>，LUT 存放于其 <strong>PCB</strong> 中</li>
</ol>
</li>
</ul>
<h3 id="设备驱动程序"><a class="markdownIt-Anchor" href="#设备驱动程序"></a> 设备驱动程序</h3>
<ul>
<li>不同设备内部<strong>硬件特性不同</strong>，由厂家提供与设备相对应的<strong>驱动程序</strong>，CPU<strong>执行驱动程序的指令序列</strong>，来完成<strong>设置设备寄存器</strong>、<strong>检查设备状态</strong>等工作</li>
<li>主要负责<strong>对硬件设备的具体控制</strong>，将上层命令转化为<strong>特定设备能处理</strong>的一系列操作</li>
<li><strong>驱动程序入口地址</strong>存放于<strong>逻辑设备表</strong>，随用户登录<strong>常驻内存</strong>；<strong>驱动程序</strong>一般以一个<strong>独立进程</strong>的方式存在，</li>
<li>厂家根据设备的硬件特性设计并提供相应的驱动程序</li>
</ul>
<h3 id="中断处理程序"><a class="markdownIt-Anchor" href="#中断处理程序"></a> 中断处理程序</h3>
<ul>
<li>
<p>I/O 任务完成时，I/O 控制器会发送一个<strong>中断信号</strong>，系统根据<strong>中断信号类型</strong>找到相应的<strong>中断处理程序</strong>并执行</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">op1&#x3D;&gt;operation: 从控制器读出设备状态</span><br><span class="line">op2&#x3D;&gt;operation: 从设备中读入一个字的数据</span><br><span class="line">				并经由CPU放到内存缓冲区中</span><br><span class="line">				(此处说明中断程序也与硬件交流)</span><br><span class="line">op3&#x3D;&gt;operation: 根据异常原因做出相应处理</span><br><span class="line">cond&#x3D;&gt;condition: I&#x2F;O正常结束</span><br><span class="line">op1-&gt;cond</span><br><span class="line">cond(yes)-&gt;op2</span><br><span class="line">cond(no)-&gt;op3</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h3>
<ul>
<li>理解并记住 I/O 软件<strong>各层次之间的顺序</strong>，判断某个处理应该是<strong>在哪个层次完成</strong>的（常考设备独立性软件、设备驱动程序）</li>
<li>直接<strong>涉及到硬件具体细节</strong>、且<strong>与中断无关</strong>的操作必由<strong>设备驱动层</strong>完成；<strong>没有涉及硬件</strong>、对<strong>各种设备都要进行</strong>的管理工作都是在<strong>设备独立性软件</strong>完成的</li>
</ul>
<h2 id="io-核心子系统"><a class="markdownIt-Anchor" href="#io-核心子系统"></a> I/O 核心子系统</h2>
<ul>
<li>包含设备独立性软件、设备驱动程序、中断处理程序，属于操作系统<strong>内核</strong>部分</li>
<li>重点理解 I/O 调度、设备保护、假脱机技术、设备的分配与回收、缓冲区管理，均位于设备独立性软件层次中</li>
</ul>
<h3 id="io-调度"><a class="markdownIt-Anchor" href="#io-调度"></a> I/O 调度</h3>
<ul>
<li>用某种<strong>算法确定</strong>一个好的<strong>顺序</strong>来处理各个 I/O 请求</li>
<li>打印机等也可以使用 FIFO、优先级算法、短作业优先等来确定调度顺序</li>
</ul>
<h3 id="设备保护"><a class="markdownIt-Anchor" href="#设备保护"></a> 设备保护</h3>
<ul>
<li>实现<strong>文件保护功能</strong>，不同的用户对各个文件有不同的访问权限（r/w/rw）</li>
<li>UNIX 中，设备视为一种文件，有相应的 FCB，进行用户访问权限控制</li>
</ul>
<h3 id="假脱机技术"><a class="markdownIt-Anchor" href="#假脱机技术"></a> 假脱机技术</h3>
<ul>
<li>又称<strong>SPOOLing</strong>技术，用软件模拟脱机</li>
</ul>
<h4 id="脱机技术"><a class="markdownIt-Anchor" href="#脱机技术"></a> 脱机技术</h4>
<ul>
<li>
<p><strong>脱机</strong>：脱离主机的控制进行的输入输出操作</p>
</li>
<li>
<p>批处理阶段引入的，用磁带完成，缓解 CPU 与慢速 I/O 设备的<strong>速度矛盾</strong>，CPU 忙碌时也可以提前将数据<strong>输入</strong>到磁带；慢速<strong>输出</strong>设备忙碌时也可以将数据输出到磁带</p>
</li>
<li>
<p><strong>外围控制机</strong>：控制慢速 I/O 设备和磁带之间的数据传递</p>
</li>
<li>
<p><strong>流程</strong></p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">op1&#x3D;&gt;operation: 慢速 I 设备</span><br><span class="line">op2&#x3D;&gt;operation: 外围控制机（输入）</span><br><span class="line">op3&#x3D;&gt;operation: 磁带（输入）</span><br><span class="line">op4&#x3D;&gt;operation: CPU</span><br><span class="line">op5&#x3D;&gt;operation: 磁带（输出）</span><br><span class="line">op6&#x3D;&gt;operation: 外围控制机（输出）</span><br><span class="line">op7&#x3D;&gt;operation: 慢速 O 设备</span><br><span class="line">op1(right)-&gt;op2(right)-&gt;op3-&gt;op4-&gt;op5</span><br><span class="line">op5(right)-&gt;op6(right)-&gt;op7</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="输入输出井"><a class="markdownIt-Anchor" href="#输入输出井"></a> 输入/输出井</h4>
<ul>
<li>模拟脱机输入/输出时的<strong>磁带</strong>，收容 I/O 设备输入 或 输出到设备 的数据</li>
<li><strong>磁盘</strong>开辟出的两个存储区域</li>
</ul>
<h4 id="输入输出进程"><a class="markdownIt-Anchor" href="#输入输出进程"></a> 输入/输出进程</h4>
<ul>
<li>模拟<strong>外围控制机</strong></li>
<li>可见，假脱机技术的实现需要<strong>多道进程</strong>参与支持</li>
</ul>
<h4 id="输入输出缓冲区"><a class="markdownIt-Anchor" href="#输入输出缓冲区"></a> 输入/输出缓冲区</h4>
<ul>
<li>设在<strong>内存</strong>中的缓冲区</li>
<li>输入进程控制下，输入缓冲区<strong>暂存</strong>从设备输入的数据，再转存到输入井<br />
输出进程控制下，输出缓冲区暂存从输出井送来的数据，再送到输出设备</li>
</ul>
<p><img src="https://i.loli.net/2020/07/02/vrHNeAIGSXpwK8d.png" alt="image-20200605102834615" /></p>
<h4 id="共享打印机"><a class="markdownIt-Anchor" href="#共享打印机"></a> 共享打印机</h4>
<ul>
<li>
<p><strong>独占式</strong>设备：只允许各进程<strong>串行</strong>使用，一段时间内<strong>只满足一个进程</strong>的请求<br />
<strong>共享</strong>设备：允许多个进程<strong>并发</strong>使用，<strong>同时满足多个进程</strong>的使用请求</p>
</li>
<li>
<p>打印机是独占式设备。进程A使用时，进程B的请求必然阻塞。使用假脱机技术可改造为共享设备</p>
<ol>
<li>系统<strong>接收多个</strong>打印请求，但并不直接分配</li>
<li><strong>假脱机管理进程</strong>在<strong>磁盘输出井</strong>中为进程申请一个<strong>空闲缓冲区</strong>，存放入要打印的数据</li>
<li>管理进程为用户进程<strong>建立申请表</strong>，<strong>记录打印请求</strong>（<strong>数据存放位置等</strong>），挂到<strong>假脱机文件队列</strong>末尾</li>
<li>当打印机空闲时，<strong>输出进程</strong>从队头<strong>取出</strong>一个申请表，按要求将所需<strong>数据从输出井中传送到输出缓冲区</strong>，<strong>再输出到打印机</strong>进行打印</li>
<li>依次完成队列中全部任务</li>
</ol>
<p><img src="https://i.loli.net/2020/07/02/1cLxY6Qmjs38Z9O.png" alt="image-20200605102751826" /></p>
</li>
<li>
<p>由此假脱机技术把一台物理设备<strong>虚拟</strong>成逻辑上的多台设备，独占→ 共享</p>
</li>
</ul>
<h4 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h4>
<p><img src="https://i.loli.net/2020/07/02/wHtaS9RNvJ4G13m.jpg" alt="假脱机技术06小结" /></p>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>OS-17-请求分页 页面置换与分配</title>
    <url>/2020/07/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%8D%81%E4%B8%83%E6%AC%A1%E8%AF%BE%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E8%AF%B7%E6%B1%82%E5%88%86%E9%A1%B5">请求分页</a>
<ul>
<li><a href="#%E9%A1%B5%E8%A1%A8">页表</a></li>
<li><a href="#%E7%BC%BA%E9%A1%B5%E4%B8%AD%E6%96%AD">缺页中断</a></li>
<li><a href="#%E5%9C%B0%E5%9D%80%E5%8F%98%E6%8D%A2%E8%BF%87%E7%A8%8B">地址变换过程</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93">小结</a></li>
</ul>
</li>
<li><a href="#%E7%BD%AE%E6%8D%A2%E7%AE%97%E6%B3%95">置换算法</a>
<ul>
<li><a href="#%E6%9C%80%E4%BD%B3%E7%BD%AE%E6%8D%A2">最佳置换</a></li>
<li><a href="#%E5%85%88%E8%BF%9B%E5%85%88%E5%87%BAfifo">先进先出（FIFO）</a></li>
<li><a href="#%E6%9C%80%E8%BF%91%E6%9C%80%E4%B9%85%E6%9C%AA%E4%BD%BF%E7%94%A8lru">最近最久未使用（LRU）</a></li>
<li><a href="#%E6%9C%80%E8%BF%91%E6%9C%AA%E7%94%A8nru">最近未用（NRU）</a></li>
<li><a href="#%E6%94%B9%E8%BF%9Bclock">改进CLOCK</a></li>
<li><a href="#%E5%90%84%E7%AE%97%E6%B3%95%E5%AF%B9%E6%AF%94">各算法对比</a></li>
</ul>
</li>
<li><a href="#%E9%A1%B5%E9%9D%A2%E5%88%86%E9%85%8D%E7%AD%96%E7%95%A5">页面分配策略</a>
<ul>
<li><a href="#%E6%A6%82%E5%BF%B5">概念</a></li>
<li><a href="#%E5%88%86%E9%85%8D%E7%BD%AE%E6%8D%A2%E7%AD%96%E7%95%A5">分配置换策略</a></li>
<li><a href="#%E8%B0%83%E9%A1%B5%E7%AD%96%E7%95%A5">调页策略</a></li>
<li><a href="#%E6%8A%96%E5%8A%A8%E9%A2%A0%E7%B0%B8">抖动颠簸</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93-2">小结</a></li>
</ul>
</li>
</ul>
</p>
<h1 id="操作系统第十七次课小结"><a class="markdownIt-Anchor" href="#操作系统第十七次课小结"></a> 操作系统第十七次课小结</h1>
<h2 id="请求分页"><a class="markdownIt-Anchor" href="#请求分页"></a> 请求分页</h2>
<h3 id="页表"><a class="markdownIt-Anchor" href="#页表"></a> 页表</h3>
<ul>
<li>
<p>与普通分页的主要区别</p>
<ul>
<li><strong>请求调页功能</strong></li>
<li><strong>页面置换功能</strong></li>
</ul>
</li>
<li>
<p>结构</p>
<table>
<thead>
<tr>
<th style="text-align:center">页号（隐含）</th>
<th style="text-align:center">内存块号</th>
<th style="text-align:center">状态位</th>
<th style="text-align:center">访问字段</th>
<th style="text-align:center">修改位</th>
<th style="text-align:center">外存地址</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">无</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">x</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">b</td>
<td style="text-align:center">1</td>
<td style="text-align:center">10</td>
<td style="text-align:center">0</td>
<td style="text-align:center">y</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">c</td>
<td style="text-align:center">1</td>
<td style="text-align:center">8</td>
<td style="text-align:center">1</td>
<td style="text-align:center">z</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>状态位</strong>：是否已调入内存</li>
<li><strong>访问字段</strong>：记录最近被访问次数或上次访问时间，配合<strong>置换算法</strong></li>
<li><strong>修改位</strong>：页面调入后是否被修改过</li>
<li><strong>外存地址</strong>：页面在外存中的存放位置</li>
</ul>
</li>
</ul>
<h3 id="缺页中断"><a class="markdownIt-Anchor" href="#缺页中断"></a> 缺页中断</h3>
<ul>
<li>
<p>需求页面不在内存时，产生<strong>缺页中断</strong>，中断程序介入，进程<strong>阻塞</strong>，<strong>从外存调页到内存</strong>，完成后唤醒原进程，放入<strong>就绪</strong>队列</p>
</li>
<li>
<p>若内存中<strong>有空闲块</strong>，则分配一个给进程，将所缺页面装入该块，并修改页表中的相应页表项<br />
若内存中<strong>没有</strong>空闲块，则<strong>由页面置换算法选择一个页面淘汰</strong>，若该页面在内存期间<strong>被修改过</strong>，则将其<strong>写回外存</strong>，未修改则<strong>直接覆盖</strong></p>
</li>
<li>
<p><strong>缺页中断</strong>是因为当前指令访问的页面未调入内存而产生的，属于<strong>内中断</strong></p>
</li>
<li>
<p>一条指令在执行期间，<strong>可能产生多次缺页中断</strong></p>
<blockquote>
<p>如： copy A to B，将逻辑地址A中的数据复制到逻辑地址B，而A、B属于不同页面，当都未调入内存时，产生两次缺页中断</p>
</blockquote>
</li>
<li>
<p>缺页中断属于内中断中的<strong>故障</strong> “由错误条件引起，可能被故障处理程序修复”</p>
</li>
</ul>
<h3 id="地址变换过程"><a class="markdownIt-Anchor" href="#地址变换过程"></a> 地址变换过程</h3>
<ul>
<li>具有<strong>快表</strong>机构的请求分页系统中，若访问逻辑地址发生<strong>缺页</strong>，则地址变换步骤为：
<ol>
<li>查快表（未命中）</li>
<li>查慢表（发现未调入内存，缺页中断）</li>
<li>调页（调入页会加入<strong>快、慢表</strong>）</li>
<li><strong>查快表</strong>（命中）</li>
<li>访问目标内存单元</li>
</ol>
</li>
</ul>
<img src="https://i.loli.net/2020/07/02/RePjfO3d28Jam6F.png" style="zoom: 52%;" />
<ul>
<li>只有执行过<strong>写指令</strong>的页面才需要修改<strong>修改位</strong>，且<strong>只需修改快表</strong>，当快表项被替换删除时才写回内存，<strong>以减少访存次数</strong></li>
<li><strong>缺页中断</strong>需要<strong>保留</strong>CPU现场，调页完成后在恢复</li>
<li>当内存块已满时，需要采用<strong>页面置换算法</strong>换出一个页面</li>
<li>换入/换出页面需要慢速I/O操作支持，<strong>过频繁则开销大</strong></li>
<li><strong>页面调入内存后</strong>，先修改慢表，同时将页表项复制到快表中，<strong>即快慢表都修改</strong>，<strong>而后查快表</strong></li>
</ul>
<h3 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/07/02/8ZaMotEpzjbQlhG.png" alt="image-20200510151638932" /></p>
<h2 id="置换算法"><a class="markdownIt-Anchor" href="#置换算法"></a> 置换算法</h2>
<h3 id="最佳置换"><a class="markdownIt-Anchor" href="#最佳置换"></a> 最佳置换</h3>
<p>每次选择淘汰的页面将是<strong>以后永不使用或最长时间不再被访问</strong>的页面，以保证<strong>最低缺页率</strong></p>
<blockquote>
<p>例：假设系统未某进程分配3个内存块，页面引用串为：7，0，1，2，0，3，0，4，2，3</p>
<p>过程如下表所示，缺页中断发生了<strong>6</strong>次，页面置换发生了<strong>4</strong>次</p>
<p>故缺页率为 <strong>60%</strong></p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">访问页面</th>
<th style="text-align:center">7</th>
<th style="text-align:center">0</th>
<th style="text-align:center">1</th>
<th style="text-align:center">2</th>
<th style="text-align:center">0</th>
<th style="text-align:center">3</th>
<th style="text-align:center">0</th>
<th style="text-align:center">4</th>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>内存块1</strong></td>
<td style="text-align:center"><strong>7</strong></td>
<td style="text-align:center">7</td>
<td style="text-align:center">7</td>
<td style="text-align:center"><strong>2</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center">2</td>
<td style="text-align:center"></td>
<td style="text-align:center">2</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><strong>内存块2</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>0</strong></td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center"></td>
<td style="text-align:center">0</td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>4</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><strong>内存块3</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>1</strong></td>
<td style="text-align:center">1</td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>3</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center">3</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><strong>是否缺页</strong></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<ul>
<li>块满置换时向后寻找，已有页号中，<strong>最后一个出现的</strong>或<strong>上次访问最早且后续不再出现的</strong>将被淘汰</li>
<li>操作系统无法预判页面访问序列，向后寻找实际上是<strong>无法实现</strong>的</li>
<li>最佳置换算法仅作为比对其它算法性能的<strong>一个基准</strong></li>
</ul>
<h3 id="先进先出fifo"><a class="markdownIt-Anchor" href="#先进先出fifo"></a> 先进先出（FIFO）</h3>
<ul>
<li>每次选择<strong>最早进入内存的页面</strong>淘汰</li>
<li>根据调入顺序排成队列，每次换出队头元素即可，<strong>队列最大长度取决于进程得到的总内存块数</strong></li>
</ul>
<blockquote>
<p>例：假设系统为进程分配三个内存块，</p>
<p>页面引用串为 3，2，1，0，3，2，4，3，2，1，0，4</p>
<p>访问情况如下表所示，</p>
<p>共访问12次，其中缺页9次，页面置换7次，故缺页率为 75%</p>
<p>若将内存块数改为4，可算得缺页次数为10，<strong>不减反增</strong></p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">访问页面</th>
<th style="text-align:center">3</th>
<th style="text-align:center">2</th>
<th style="text-align:center">1</th>
<th style="text-align:center">0</th>
<th style="text-align:center">3</th>
<th style="text-align:center">2</th>
<th style="text-align:center">4</th>
<th style="text-align:center">3</th>
<th style="text-align:center">2</th>
<th style="text-align:center">1</th>
<th style="text-align:center">0</th>
<th style="text-align:center">4</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>内存块1</strong></td>
<td style="text-align:center"><strong>3</strong></td>
<td style="text-align:center">3</td>
<td style="text-align:center">3</td>
<td style="text-align:center"><strong>0</strong></td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center"><strong>4</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center">4</td>
<td style="text-align:center">4</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><strong>内存块2</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>2</strong></td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center"><strong>3</strong></td>
<td style="text-align:center">3</td>
<td style="text-align:center">3</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>1</strong></td>
<td style="text-align:center">1</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><strong>内存块3</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>1</strong></td>
<td style="text-align:center">1</td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>2</strong></td>
<td style="text-align:center">2</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center">2</td>
<td style="text-align:center"><strong>0</strong></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><strong>是否缺页</strong></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<ul>
<li><strong>Belady 异常</strong>：当为进程分配的物理块数增大时，缺页次数不减反增的异常现象</li>
<li><strong>只有FIFO算法</strong>会产生Belady异常，虽然该算法<strong>实现简单</strong>，但与实际规律不合，先进入的页面可能经常被访问，<strong>算法性能差</strong></li>
</ul>
<h3 id="最近最久未使用lru"><a class="markdownIt-Anchor" href="#最近最久未使用lru"></a> 最近最久未使用（LRU）</h3>
<ul>
<li>每次淘汰<strong>最近最久未使用</strong>的页面</li>
<li>用页面的页表项中的<strong>访问字段</strong>记录该页面<strong>自上次被访问以来经历的时间</strong>，淘汰是选择<strong>现有页面中时间最长</strong>的</li>
<li>实际做题，<strong>逆向扫描当前内存块中的页面</strong>，<strong>最后一个出现的就是要淘汰的页面</strong></li>
</ul>
<blockquote>
<p>3 个内存块，页面引用串为1，8，1，7，8，2，7，2，1，8，3，8</p>
<p>如表所示，缺页 7 次</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">访问页面</th>
<th style="text-align:center">1</th>
<th style="text-align:center">8</th>
<th style="text-align:center">1</th>
<th style="text-align:center">7</th>
<th style="text-align:center">8</th>
<th style="text-align:center">2</th>
<th style="text-align:center">7</th>
<th style="text-align:center">2</th>
<th style="text-align:center">1</th>
<th style="text-align:center">8</th>
<th style="text-align:center">3</th>
<th style="text-align:center">8</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>内存块1</strong></td>
<td style="text-align:center"><strong>1</strong></td>
<td style="text-align:center">1</td>
<td style="text-align:center"></td>
<td style="text-align:center">1</td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>2</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center"><strong>3</strong></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><strong>内存块2</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>8</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center">8</td>
<td style="text-align:center"></td>
<td style="text-align:center">8</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>1</strong></td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><strong>内存块3</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>7</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center">7</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center">7</td>
<td style="text-align:center"><strong>8</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center"><strong>是否缺页</strong></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"><strong>T</strong></td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<ul>
<li><strong>性能好，但需要硬件支持，实现困难，开销大</strong></li>
</ul>
<h3 id="最近未用nru"><a class="markdownIt-Anchor" href="#最近未用nru"></a> 最近未用（NRU）</h3>
<ul>
<li>为每个页面设置<strong>访问位</strong>（0/1即可），将内存中的页面<strong>连接成循环队列</strong>，当某页被访问，置访问位为 <strong>1</strong><br />
淘汰时检查访问位，为 <strong>0</strong> 换出；为 1 则<strong>置0</strong>，但不换出，而扫描下一位<br />
若一轮均为1，则扫描第二轮，一轮已被<strong>置0</strong>，故必要解</li>
<li>页面换入时<strong>初始访问位为1</strong>，<strong>缺页</strong>时指针才开始<strong>移动扫描</strong>，换掉某页后<strong>移向下一位</strong><br />
<strong>页面被访问则置访问位为</strong> 1，但不是通过指针修改，<strong>指针不动</strong>，<strong>从表索引修改即可</strong></li>
</ul>
<blockquote>
<p>分配 5 个内存块，页面引用串为 1，3，4，2，5，6，3，4，7</p>
</blockquote>
<img src="https://i.loli.net/2020/07/02/wAMJqnEVXb8gCur.png" alt="image-20200510231429920" style="zoom:50%;" />
<img src="https://i.loli.net/2020/07/02/XgmFe3PiobRchOQ.png" alt="image-20200510231450974" style="zoom:50%;" />
<img src="https://i.loli.net/2020/07/02/xUBZL1gWEnb5KD6.png" alt="image-20200510231518980" style="zoom:50%;" />
<h3 id="改进clock"><a class="markdownIt-Anchor" href="#改进clock"></a> 改进CLOCK</h3>
<ul>
<li>只有被淘汰的页面同时<strong>被修改过</strong>，才需要<strong>写回外存</strong>，<strong>否则直接覆盖</strong><br />
<strong>因此条件相同的情况下</strong>，<strong>应当优先淘汰为修改过的页面</strong></li>
<li>改进CLOCK采用（<strong>访问位</strong>，<strong>修改位</strong>）表示页面状态</li>
<li><strong>算法规则</strong>
<ol>
<li>从当前位置开始扫描第一个（0，0），<strong>不修改任何标志位</strong> （第一优先级：<strong>未访问且未修改</strong>）</li>
<li>第一轮失败，重新扫描第一个（0，1），<strong>并将每个页面访问位置为</strong>0 （第二优先级：<strong>未访问已修改</strong>）</li>
<li>第二轮失败，重新扫描第一个（0，0），<strong>不修改任何标志位</strong> （第三优先级：<strong>访问但未修改</strong>）</li>
<li>第三轮失败，重新扫描第一个（0，1） （第四优先级：<strong>访问且已修改</strong>）</li>
</ol>
</li>
<li>扫描（0，0）时，不论访问位结果，<strong>不做任何修改</strong></li>
<li>未访问但已修改，<strong>是由于上次置换时访问位被置</strong>0</li>
<li>前三轮结束必有符合第四轮条件的页面被选中</li>
</ul>
<h3 id="各算法对比"><a class="markdownIt-Anchor" href="#各算法对比"></a> 各算法对比</h3>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">算法规则</th>
<th style="text-align:center">优缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">OPT（最佳）</td>
<td style="text-align:center">优先淘汰<strong>最长时间内不被访问</strong>的页面</td>
<td style="text-align:center">缺页率小，性能好，但<strong>无法实现</strong></td>
</tr>
<tr>
<td style="text-align:center">FIFO</td>
<td style="text-align:center">优先淘汰<strong>最先进入</strong>的页面</td>
<td style="text-align:center">实现简单，但性能差，<strong>Belady异常</strong></td>
</tr>
<tr>
<td style="text-align:center">LRU（最近最久）</td>
<td style="text-align:center">优先淘汰<strong>最久没访问</strong>的页面</td>
<td style="text-align:center">性能好，但需硬件支持，开销大</td>
</tr>
<tr>
<td style="text-align:center">CLOCK（NRU）</td>
<td style="text-align:center">扫描各页面，淘汰访问位为0的<br />并将扫描过的访问位置0</td>
<td style="text-align:center">实现简单，开销小，但不考虑是否被修改</td>
</tr>
<tr>
<td style="text-align:center">改进CLOCK</td>
<td style="text-align:center">扫描（0，0）→（0，1）→（0，0）→（0，1）<br />其中第二轮访问位置0</td>
<td style="text-align:center">开销小，性能优</td>
</tr>
</tbody>
</table>
<h2 id="页面分配策略"><a class="markdownIt-Anchor" href="#页面分配策略"></a> 页面分配策略</h2>
<h3 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h3>
<ul>
<li>
<p><strong>驻留集</strong>：请求分页管理分配给进程的<strong>内存块集合</strong>，一般小于进程总大小<br />
过大则其他进程并发度降低，资源利用率降低<br />
过小则缺页频繁，调页开销大，进程推进缓慢</p>
</li>
<li>
<p><strong>固定分配</strong>：为进程分配的<strong>内存块数目一定</strong>，<strong>即驻留集大小不变</strong></p>
</li>
<li>
<p><strong>可变分配</strong>：<strong>预先分配一定数目</strong>的内存块，后续根据需要<strong>增减</strong>，<strong>即驻留集大小可变</strong></p>
</li>
<li>
<p><strong>局部置换</strong>：发生缺页时<strong>只能选择自身</strong>的内存块置换</p>
</li>
<li>
<p><strong>全局置换</strong>：可置换<strong>操作系统保留</strong>的空闲内存块，也可置换<strong>其他进程持有</strong>的</p>
</li>
<li>
<p>全局置换意味着持有的内存块数必定可变，所以不可能是固定分配</p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">局部置换</th>
<th style="text-align:center">全局置换</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>固定分配</strong></td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center"><strong>可变分配</strong></td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
</tr>
</tbody>
</table>
</li>
</ul>
<h3 id="分配置换策略"><a class="markdownIt-Anchor" href="#分配置换策略"></a> 分配置换策略</h3>
<ul>
<li>
<p><strong>固定分配局部置换</strong></p>
<ul>
<li>总内存块一定，置换只能在自身空间</li>
<li>难以确定驻留集最优大小，可根据进程大小、优先级、用户指定等划分</li>
</ul>
</li>
<li>
<p><strong>可变分配局部置换</strong></p>
<ul>
<li>预分配一定，置换只能在自身空间</li>
<li>频繁缺页则增加驻留集，缺页率过低则减少驻留集</li>
</ul>
</li>
<li>
<p><strong>可变分配全局置换</strong></p>
<ul>
<li>
<p>预分配有一定，<strong>系统维护一个空闲内存块队列</strong>，缺页时从中取出并分配；若用完则选择<strong>未锁定</strong>的页面换出并分配</p>
</li>
<li>
<p><strong>只要某进程缺页</strong>，<strong>即可获得新的内存块</strong></p>
</li>
<li>
<p>空闲内存块队列用完，消耗其他页面，<strong>被选中的进程内存块减少</strong>，<strong>缺页率增加</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">可变分配置换方式</th>
<th style="text-align:center">细节</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">全局置换</td>
<td style="text-align:center">只要缺页就分配新内存块</td>
</tr>
<tr>
<td style="text-align:center">局部置换</td>
<td style="text-align:center">根据<strong>缺页的频率</strong>动态增减</td>
</tr>
</tbody>
</table>
</li>
</ul>
</li>
</ul>
<h3 id="调页策略"><a class="markdownIt-Anchor" href="#调页策略"></a> 调页策略</h3>
<ul>
<li><strong>预调页策略</strong>：一次调入<strong>相邻的若干页面</strong><br />
主要用于<strong>进程的首次调入</strong>，是<strong>运行前调入</strong>，应由程序员预先指定</li>
<li><strong>请求调页策略</strong>：进程<strong>运行期间</strong>发生缺页才调入<br />
每次只调入一页，I/O开销较大，是<strong>运行时调入</strong></li>
<li>空间层面
<ul>
<li>对换区充足
<ul>
<li>页面调入调出在<strong>内存</strong>和<strong>外存对换区</strong>进行，速度快</li>
<li>进程运行前，需将相关数据从<strong>文件区复制到对换区</strong></li>
</ul>
</li>
<li>对换区不足
<ul>
<li><strong>不会被修改</strong>的数据<strong>从文件区调入</strong>内存，换出时不必写回，下次再从文件区调入</li>
<li><strong>可能被修改的换出时写入对换区</strong>，下次需要从对换区调入</li>
</ul>
</li>
<li>UNIX方式
<ul>
<li><strong>未使用过的页面从文件区调入</strong>，<strong>换出写入对换区</strong></li>
<li>再次需要时从对换区调入</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="抖动颠簸"><a class="markdownIt-Anchor" href="#抖动颠簸"></a> 抖动颠簸</h3>
<ul>
<li>
<p>定义：刚换出（入）的页面很快有换入（出）的<strong>频繁页面调度行为</strong></p>
</li>
<li>
<p>原因：进程频繁访问的页面数高于驻留集，<strong>即驻留集过小</strong></p>
</li>
<li>
<p>解决</p>
<ul>
<li>
<p><strong>工作集</strong>：在某段时间间隔里，进程实际访问页面的集合</p>
</li>
<li>
<p>操作系统根据“<strong>窗口尺寸</strong>”划定工作集，但工作集大小<strong>可能小于</strong>窗口尺寸</p>
<p><img src="https://i.loli.net/2020/07/02/Ht9dsLxuT8bqZcK.png" alt="image-20200511004910437" /></p>
</li>
<li>
<p>一般来说，<strong>驻留集不能小于工作集</strong>，否则换页频繁，效率降低</p>
</li>
</ul>
</li>
</ul>
<h3 id="小结-2"><a class="markdownIt-Anchor" href="#小结-2"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/07/02/TFfdnoOj8cq9gyB.png" alt="image-20200511005245010" /></p>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>OS-8-实现临界区同步访问</title>
    <url>/2020/07/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%85%AB%E6%AC%A1%E8%AF%BE%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<h1 id="操作系统第八次课小结"><a class="markdownIt-Anchor" href="#操作系统第八次课小结"></a> 操作系统第八次课小结</h1>
<hr />
<p><ul class="markdownIt-TOC">
<li><a href="#%E5%8D%95%E6%A0%87%E5%BF%97%E6%B3%95">单标志法</a>
<ul>
<li><a href="#%E7%AE%97%E6%B3%95%E6%80%9D%E6%83%B3">算法思想</a></li>
<li><a href="#%E7%AE%97%E6%B3%95%E7%BC%BA%E9%99%B7">算法缺陷</a></li>
</ul>
</li>
<li><a href="#%E5%8F%8C%E6%A0%87%E5%BF%97%E5%85%88%E6%A3%80%E6%9F%A5%E6%B3%95">双标志先检查法</a>
<ul>
<li><a href="#%E7%AE%97%E6%B3%95%E6%80%9D%E6%83%B3-2">算法思想</a></li>
<li><a href="#%E7%AE%97%E6%B3%95%E7%BC%BA%E9%99%B7-2">算法缺陷</a></li>
</ul>
</li>
<li><a href="#peterson%E7%AE%97%E6%B3%95">Peterson算法</a>
<ul>
<li><a href="#%E7%AE%97%E6%B3%95%E6%80%9D%E6%83%B3-3">算法思想</a></li>
</ul>
</li>
<li><a href="#swap%E6%8C%87%E4%BB%A4">Swap指令</a></li>
<li><a href="#%E7%A1%AC%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93">硬件实现方法总结</a></li>
</ul>
</p>
<hr />
<h2 id="单标志法"><a class="markdownIt-Anchor" href="#单标志法"></a> 单标志法</h2>
<h3 id="算法思想"><a class="markdownIt-Anchor" href="#算法思想"></a> 算法思想</h3>
<ol>
<li>
<p>两个进程在<strong>会把使用临界区</strong>的权限转交给另一个进程，也就是说<strong>每个进程进入临界区的权限只能被另一个进程赋予</strong></p>
</li>
<li></li>
</ol>
<pre><code>- 开始时初值为0， 只允许P0进入临界区
- P1判断到turn不为1进入循环等待
- 直到P0处理完，将turn设置为1后退出
- P1才从循环中退出，进入临界区
- P1运行结束，修改turn值为0

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> <span class="built_in">turn</span> = <span class="number">0</span>; <span class="comment">//turn表示当前允许进入临界区的进程号</span></span><br><span class="line"><span class="comment">//P0 进程：</span></span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">turn</span> != <span class="number">0</span>); <span class="comment">// 进入区 </span></span><br><span class="line">critical section; <span class="comment">// 临界区</span></span><br><span class="line"><span class="built_in">turn</span> = <span class="number">1</span>; <span class="comment">// 退出区</span></span><br><span class="line">remainer section; <span class="comment">// 剩余区</span></span><br><span class="line"><span class="comment">//P1 进程：</span></span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">turn</span> != <span class="number">1</span>); <span class="comment">// 进入区 </span></span><br><span class="line">critical section; <span class="comment">// 临界区</span></span><br><span class="line"><span class="built_in">turn</span> = <span class="number">0</span>; <span class="comment">// 退出区</span></span><br><span class="line">remainer section; <span class="comment">// 剩余区</span></span><br></pre></td></tr></table></figure>
</code></pre>
<ol start="3">
<li><strong>实现同一时刻最多只允许一个进程访问临界区</strong></li>
</ol>
<h3 id="算法缺陷"><a class="markdownIt-Anchor" href="#算法缺陷"></a> 算法缺陷</h3>
<ul>
<li>只能允许P0 →P1→P0 →P1→P0 → … 的轮流访问。如初始时，没有P0的运行时，P1始终处于等待状态。<strong>违背了“空闲让进”原则</strong></li>
</ul>
<hr />
<h2 id="双标志先检查法"><a class="markdownIt-Anchor" href="#双标志先检查法"></a> 双标志先检查法</h2>
<h3 id="算法思想-2"><a class="markdownIt-Anchor" href="#算法思想-2"></a> 算法思想</h3>
<ol>
<li>
<p>设计一个布尔型数组<code>flag[]</code>，数组中各个元素用来<strong>标记各进程想进入临界区的意愿</strong></p>
</li>
<li>
<pre class="highlight"><code class="c"> <span class="keyword">bool</span> flag[<span class="number">2</span>];
 flag[<span class="number">0</span>] = flag[<span class="number">1</span>] = <span class="literal">false</span>; <span class="comment">// 初始时都没有进入临界区的意愿</span>
 <span class="comment">// P0 进程</span>
 <span class="keyword">while</span>(flag[<span class="number">1</span>]); <span class="comment">// ①</span>
 flag[<span class="number">0</span>] = <span class="literal">true</span>; <span class="comment">// ②</span>
 critical section; <span class="comment">// ③</span>
 flag[<span class="number">0</span>] = <span class="literal">false</span>; <span class="comment">// ④</span>
 remainder section;
 <span class="comment">// P1 进程</span>
 <span class="keyword">while</span>(flag[<span class="number">0</span>]); <span class="comment">// ⑤ 若此时P0想进入临界区，P1就一直等待</span>
 flag[<span class="number">1</span>] = <span class="literal">true</span>; <span class="comment">// ⑥ P1进入临界区前修改意愿flag为true</span>
 critical section; <span class="comment">// ⑦ 访问临界区</span>
 flag[<span class="number">1</span>] = <span class="literal">false</span>; <span class="comment">// ⑧ 访问完修改flag为false</span>
 remainder section;
 &lt;!--￼<span class="number">1</span>--&gt;

</code></pre>
</li>
</ol>
<h3 id="算法缺陷-2"><a class="markdownIt-Anchor" href="#算法缺陷-2"></a> 算法缺陷</h3>
<ul>
<li>按照①⑤②⑥的顺序执行，P0和P1都<strong>无法</strong>访问临界区。<strong>违反了“空闲让进”和“有限等待”原则</strong></li>
<li>各进程会因长期得不到访问权限而产生<strong>饥饿</strong>现象</li>
</ul>
<hr />
<h2 id="peterson算法"><a class="markdownIt-Anchor" href="#peterson算法"></a> Peterson算法</h2>
<h3 id="算法思想-3"><a class="markdownIt-Anchor" href="#算法思想-3"></a> 算法思想</h3>
<ol>
<li>
<p>孔融让梨，双方<strong>都主动让出</strong>使用权，由最后一个让出主动权的下一位线程使用临界区。</p>
</li>
<li>
<pre class="highlight"><code class="c"> <span class="keyword">bool</span> flag[<span class="number">2</span>]; <span class="comment">// 表示进入临界区意愿的数组 初始为false</span>
 <span class="keyword">int</span> <span class="built_in">turn</span> = <span class="number">0</span>; <span class="comment">// 表示优先让哪个进程进入临界区</span>
 <span class="comment">// P0进程：</span>
 flag[<span class="number">0</span>] = <span class="literal">true</span>;
 <span class="built_in">turn</span> = <span class="number">1</span>;
 <span class="keyword">while</span>(flag[<span class="number">1</span>] &amp;&amp; <span class="built_in">turn</span>==<span class="number">1</span>);
 critical section;
 flag[<span class="number">0</span>] = <span class="literal">false</span>;
 remainder section;
 <span class="comment">// P1进程：</span>
 flag[<span class="number">1</span>] = <span class="literal">true</span>; <span class="comment">// 表示自己想进入临界区</span>
 <span class="built_in">turn</span> = <span class="number">0</span>; <span class="comment">// 主动权先让给对方</span>
 <span class="comment">// 对方无意愿或自己有主动权时退出循环</span>
 <span class="keyword">while</span>(flag[<span class="number">0</span>] &amp;&amp; <span class="built_in">turn</span>==<span class="number">0</span>); 
 critical section;
 flag[<span class="number">1</span>] = <span class="literal">false</span>; <span class="comment">// 访问结束后 修改意愿flag为false</span>
 remainder section;
 
 &lt;!--￼<span class="number">2</span>--&gt;

</code></pre>
</li>
</ol>
<ul>
<li>
<p>把“上锁”和“检查”用硬件的方式合为一个原子操作</p>
</li>
<li>
<p>优点：实现简单；<strong>适用于多处理机环境</strong></p>
</li>
<li>
<p>缺点：不满足<strong>让权等待</strong>，等待中的<strong>进程占用CPU并循环执行TSL</strong>指令，从而导致<strong>忙等</strong></p>
</li>
</ul>
<hr />
<h2 id="swap指令"><a class="markdownIt-Anchor" href="#swap指令"></a> Swap指令</h2>
<ul>
<li>
<p>也称Exchange指令或XCHG指令，用<strong>硬件</strong>实现，执行过程<strong>不可中断</strong></p>
</li>
<li>
<pre class="highlight"><code class="c">  <span class="comment">// Swap 的作用是交换两个变量的值</span>
  <span class="function"><span class="keyword">void</span> <span class="title">Swap</span> <span class="params">(<span class="keyword">bool</span> *a, <span class="keyword">bool</span> *b)</span> </span>{
      <span class="comment">// a &lt;---&gt; b</span>
  }
  
  <span class="comment">// 以下是Swap指令实现的算法逻辑</span>
  <span class="comment">// lock 表示当前临界区是否被锁</span>
  <span class="keyword">bool</span> old = <span class="literal">true</span>;
  <span class="keyword">while</span> (old == <span class="literal">true</span>)
      Swap(&amp;lock, old); <span class="comment">// 未锁则old交换为false 退出循环</span>
  <span class="comment">// 临界区代码块</span>
  lock = <span class="literal">false</span>; <span class="comment">// 解锁 退出</span>
  <span class="comment">// 剩余区代码块</span>
</code></pre>
</li>
<li>
<p>优点：实现简单；<strong>适用于多处理机环境</strong></p>
</li>
<li>
<p>缺点：不满足<strong>让权等待</strong>，等待中的<strong>进程占用CPU并循环执行Swap</strong>指令，从而导致<strong>忙等</strong></p>
</li>
</ul>
<hr />
<h2 id="硬件实现方法总结"><a class="markdownIt-Anchor" href="#硬件实现方法总结"></a> 硬件实现方法总结</h2>
<p><img src="https://i.loli.net/2020/03/25/uve4rXWAUiyfjaS.jpg" alt="硬件实现方法总结" /></p>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>OS-12-死锁的预防、检测与解除</title>
    <url>/2020/07/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%8D%81%E4%BA%8C%E6%AC%A1%E8%AF%BE%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E9%A2%84%E9%98%B2%E6%AD%BB%E9%94%81">预防死锁</a>
<ul>
<li><a href="#%E7%A0%B4%E5%9D%8F%E4%BA%92%E6%96%A5%E6%9D%A1%E4%BB%B6">破坏互斥条件</a></li>
<li><a href="#%E7%A0%B4%E5%9D%8F%E4%B8%8D%E5%89%A5%E5%A4%BA%E6%9D%A1%E4%BB%B6">破坏不剥夺条件</a></li>
<li><a href="#%E7%A0%B4%E5%9D%8F%E8%AF%B7%E6%B1%82%E5%92%8C%E4%BF%9D%E6%8C%81%E6%9D%A1%E4%BB%B6">破坏请求和保持条件</a></li>
<li><a href="#%E7%A0%B4%E5%9D%8F%E5%BE%AA%E7%8E%AF%E7%AD%89%E5%BE%85%E6%9D%A1%E4%BB%B6">破坏循环等待条件</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93">小结</a></li>
</ul>
</li>
<li><a href="#%E9%81%BF%E5%85%8D%E6%AD%BB%E9%94%81">避免死锁</a>
<ul>
<li><a href="#%E5%AE%89%E5%85%A8%E5%BA%8F%E5%88%97">安全序列</a></li>
<li><a href="#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84">数据结构</a></li>
<li><a href="#%E9%93%B6%E8%A1%8C%E5%AE%B6%E7%AE%97%E6%B3%95%E6%AD%A5%E9%AA%A4">银行家算法步骤</a></li>
<li><a href="#%E5%AE%89%E5%85%A8%E6%80%A7%E7%AE%97%E6%B3%95">安全性算法</a></li>
</ul>
</li>
<li><a href="#%E6%A3%80%E6%B5%8B%E5%92%8C%E8%A7%A3%E9%99%A4%E6%AD%BB%E9%94%81">检测和解除死锁</a>
<ul>
<li><a href="#%E6%A3%80%E6%B5%8B">检测</a></li>
<li><a href="#%E8%A7%A3%E9%99%A4">解除</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93-2">小结</a></li>
</ul>
</li>
</ul>
</p>
<h1 id="操作系统第十二次课小结"><a class="markdownIt-Anchor" href="#操作系统第十二次课小结"></a> 操作系统第十二次课小结</h1>
<hr />
<h2 id="预防死锁"><a class="markdownIt-Anchor" href="#预防死锁"></a> 预防死锁</h2>
<h3 id="破坏互斥条件"><a class="markdownIt-Anchor" href="#破坏互斥条件"></a> 破坏互斥条件</h3>
<ol>
<li>
<p><strong>互斥条件</strong>：只有对必须互斥使用的资源<strong>抢夺</strong>才会导致死锁（<strong>抢资源</strong>）</p>
</li>
<li>
<p><strong>解决思路</strong>：把互斥使用的资源改造为<strong>允许共享使用</strong>，如 SPOOLing 技术</p>
</li>
<li>
<p><strong>缺点</strong>：<strong>可行性不高</strong>，很多时候需要保留互斥性而无法改造</p>
</li>
<li>
<p>图示：</p>
 <img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200410210639.png" style="zoom:50%;" />
</li>
</ol>
<h3 id="破坏不剥夺条件"><a class="markdownIt-Anchor" href="#破坏不剥夺条件"></a> 破坏不剥夺条件</h3>
<ol>
<li><strong>不剥夺条件</strong>：进程未使用完之前，持有的资源只能主动释放，不被强行剥夺（<strong>已有的不被抢</strong>）</li>
<li><strong>解决思路</strong>
<ul>
<li>方案一：当进程请求资源<strong>得不到满足</strong>时，<strong>立即释放</strong>已占有的资源，后续再重新申请</li>
<li>方案二：当请求的资源被占有时，由<strong>操作系统协助</strong>，<strong>强行剥夺</strong>。一般考虑进程优先级</li>
</ul>
</li>
<li><strong>缺点</strong>：
<ul>
<li><strong>实现复杂</strong></li>
<li>释放资源会造成前一阶段<strong>工作失效</strong>，适用于<strong>易保存恢复状态的资源</strong>，如CPU</li>
<li>反复申请释放资源<strong>增加系统开销，降低吞吐量</strong></li>
<li>方案一<strong>可能导致饥饿</strong></li>
</ul>
</li>
</ol>
<h3 id="破坏请求和保持条件"><a class="markdownIt-Anchor" href="#破坏请求和保持条件"></a> 破坏请求和保持条件</h3>
<ol>
<li>
<p><strong>请求和保持条件</strong>：占有部分资源不放的同时，提出新的资源请求（<strong>已有的不放弃</strong>，<strong>同时抢没有的</strong>）</p>
</li>
<li>
<p><strong>解决思路</strong>：采用<strong>静态分配方法</strong>，一次性申请<strong>全部</strong>所需资源，不满足不运行，满足则占有到进程结束</p>
</li>
<li>
<p><strong>缺点</strong>：</p>
<ul>
<li>部分资源使用时间短，但同样占有到结束，<strong>资源利用率极低</strong></li>
<li>当一个进程申请资源种类越多，同时满足难度越大，<strong>可能导致饥饿</strong></li>
</ul>
</li>
<li>
<p>图示：</p>
 <img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200410213909.png" style="zoom:50%;" />
</li>
</ol>
<h3 id="破坏循环等待条件"><a class="markdownIt-Anchor" href="#破坏循环等待条件"></a> 破坏循环等待条件</h3>
<ol>
<li>
<p><strong>循环等待条件</strong>：存在一种进程资源的<strong>循环等待链</strong>，链中各进程占有的资源同时被下一进程请求</p>
</li>
<li>
<p><strong>解决思路</strong>：采用<strong>顺序资源分配法</strong>，先给资源编号，规定各进程必须按照编号递增顺序请求资源，<strong>同类资源一次性申请完</strong>，即<strong>占有大编号资源的进程不能逆向请求小编号资源</strong>，故不循环</p>
</li>
<li>
<p><strong>缺点</strong>：</p>
<ul>
<li><strong>不便增加新设备</strong>，可能要重新编号</li>
<li>资源使用顺序与编号顺序可能不一致，<strong>导致资源浪费</strong></li>
<li>必须按照规定次序申请资源，用户<strong>编程复杂</strong></li>
</ul>
</li>
<li>
<p>示例：</p>
<blockquote>
<p>进程 PA 使用资源顺序为 R1、R2</p>
<p>进程 PB 使用资源顺序为 R2、R1</p>
<p>动态分配可能造成死锁，PA请求PB的R2、PB请求PA的R1</p>
<p>顺序分配则PA、PB的申请次序均为 R1、R2</p>
<p>破坏了循环链，避免了死锁</p>
</blockquote>
</li>
</ol>
<h3 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h3>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200410220706.jpg" alt="" /></p>
<hr />
<h2 id="避免死锁"><a class="markdownIt-Anchor" href="#避免死锁"></a> 避免死锁</h2>
<h3 id="安全序列"><a class="markdownIt-Anchor" href="#安全序列"></a> 安全序列</h3>
<ol>
<li><strong>安全序列</strong>：按照<strong>某种次序</strong>分配资源使得各进程都能顺利完成，<strong>不唯一</strong></li>
<li><strong>安全状态</strong>：<strong>存在</strong>至少一个安全序列的系统状态，反之不存在安全序列的系统就进入<strong>不安全状态</strong></li>
<li><strong>安全状态必定不死锁，不安全状态未必死锁，但死锁一定发生在不安全状态</strong></li>
<li>不安全状态不继续请求资源，待部分资源用完归还，也可能<strong>重新返回安全状态</strong></li>
<li><strong>银行家算法</strong>核心思想：<strong>资源分配前预先判断分配结果是否导致系统进入不安全状态</strong></li>
</ol>
<h3 id="数据结构"><a class="markdownIt-Anchor" href="#数据结构"></a> 数据结构</h3>
<ol>
<li>
<p><strong>可用资源</strong>矩阵Available，<code>shape = [1, m], 其中m为可用资源种类数</code></p>
</li>
<li>
<p><strong>各进程对资源的最大需求数</strong>矩阵Max，<code>shape = [n, m], 其中n为进程数</code></p>
</li>
<li>
<p><strong>各进程已分配资源数</strong>矩阵Allocation</p>
</li>
<li>
<p><strong>各进程还需资源数</strong>矩阵Need = Max - Allocation</p>
</li>
<li>
<p><strong>某进程本次申请资源数</strong>矩阵Request，<code>shape = [1, m]</code></p>
</li>
<li>
<p>示例</p>
 <img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200410223751.png" style="zoom:50%;" />
</li>
</ol>
<h3 id="银行家算法步骤"><a class="markdownIt-Anchor" href="#银行家算法步骤"></a> 银行家算法步骤</h3>
<ol>
<li>检查本次需求是否超过已声明的最大需求数 <code>if (Request &lt;= Max[i]) // i为对应线程编号</code></li>
<li>检查剩余可用资源是否满足本次请求 <code>if (Available &gt;= Request)</code></li>
<li>尝试分配，更改数据结构对应值 <code>Need[i] -= Request; Available -= Request</code></li>
<li>用<strong>安全性算法</strong>检查当前结果是否会导致系统进入不安全状态</li>
<li>系统安全则执行分配，不安全则回滚数据、拒绝分配</li>
</ol>
<h3 id="安全性算法"><a class="markdownIt-Anchor" href="#安全性算法"></a> 安全性算法</h3>
<ol>
<li>检查当前可用资源是否满足某个线程的剩余需求 <code>if (Available &gt;= Need[i])</code></li>
<li>满足则将该线程加入安全序列，并把该线程持有的资源全部回收<br />
<code>queue.push_back(i); Available += Allocation[i]</code></li>
<li>尝试下一线程 <code>i++</code>，重复上述过程，看最终能否让所有进程都加入安全队列</li>
<li>类似<code>DFS</code>求解</li>
</ol>
<hr />
<h2 id="检测和解除死锁"><a class="markdownIt-Anchor" href="#检测和解除死锁"></a> 检测和解除死锁</h2>
<h3 id="检测"><a class="markdownIt-Anchor" href="#检测"></a> 检测</h3>
<ol>
<li><strong>必要准备</strong>：
<ul>
<li>某种<strong>数据结构</strong>保存资源的请求分配信息（图）</li>
<li>一种<strong>算法</strong>利用上述信息检测是否死锁</li>
<li>
<img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200410230755.png" style="zoom:50%;" />
</li>
<li>
<img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200410230844.png" style="zoom:50%;" />
</li>
<li>图<strong>可完全简化</strong>，即最终能<strong>消除所有边</strong>，则一定<strong>没有死锁</strong>，相当于找到一个安全序列</li>
<li>反之不能完全消除则必发生死锁，<strong>最终连着边的进程就是处于死锁的进程</strong></li>
</ul>
</li>
<li><strong>检测算法</strong>：
<ul>
<li>在资源分配图中找出<strong>既不阻塞也不孤立</strong>的进程<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>（有请求边且能获得资源）</li>
<li><strong>消去其所有</strong>请求边和分配边，使之成为孤立的点（<strong>消去的点释放资源可能使其他进程不在阻塞</strong>）</li>
<li>重复上步直到无边可消</li>
</ul>
</li>
<li><strong>死锁定理</strong>：若某时刻系统资源分配图<strong>不可完全简化</strong>，则此时系统<strong>死锁</strong></li>
</ol>
<h3 id="解除"><a class="markdownIt-Anchor" href="#解除"></a> 解除</h3>
<ol>
<li><strong>资源剥夺法</strong>：
<ul>
<li><strong>挂起</strong>（暂时放到外存）某些<strong>死锁</strong>进程，将占有的资源分配给其他死锁进程。</li>
<li><strong>注意防止进程挂起过长而饥饿</strong></li>
</ul>
</li>
<li><strong>撤销进程法</strong>：
<ul>
<li>强制撤销部分甚至全部死锁进程，回收再分配其资源</li>
<li>实现<strong>简单</strong>，<strong>代价可能巨大</strong>，有些进程可能接近尾声却被撤销</li>
</ul>
</li>
<li><strong>进程回退法</strong>：
<ul>
<li>让一个或多个进程回退到足以避免死锁的地步</li>
<li><strong>要记录进程历史信息，设置还原点</strong></li>
</ul>
</li>
<li><strong>解决原则</strong>:
<ul>
<li>进程优先级</li>
<li>已执行时间</li>
<li>剩余执行时间</li>
<li>已使用资源</li>
<li>交互式 or 批处理式</li>
</ul>
</li>
</ol>
<h3 id="小结-2"><a class="markdownIt-Anchor" href="#小结-2"></a> 小结</h3>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200410233700.jpg" alt="" /></p>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>OS-13-内存</title>
    <url>/2020/07/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%8D%81%E4%B8%89%E6%AC%A1%E8%AF%BE%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E5%86%85%E5%AD%98">内存</a></li>
<li><a href="#%E9%93%BE%E6%8E%A5%E4%B8%8E%E8%A3%85%E5%85%A5">链接与装入</a></li>
<li><a href="#%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E5%85%B3%E6%B3%A8%E7%82%B9">内存管理关注点</a>
<ul>
<li><a href="#%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E7%9A%84%E5%88%86%E9%85%8D%E5%92%8C%E5%9B%9E%E6%94%B6">内存空间的分配和回收</a></li>
<li><a href="#%E7%A9%BA%E9%97%B4%E6%89%A9%E5%85%85">空间扩充</a></li>
<li><a href="#%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2">地址转换</a></li>
<li><a href="#%E5%86%85%E5%AD%98%E4%BF%9D%E6%8A%A4">内存保护</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93">小结</a></li>
</ul>
</li>
<li><a href="#%E8%A6%86%E7%9B%96%E4%B8%8E%E4%BA%A4%E6%8D%A2">覆盖与交换</a>
<ul>
<li><a href="#%E8%A6%86%E7%9B%96%E6%8A%80%E6%9C%AF">覆盖技术</a></li>
<li><a href="#%E4%BA%A4%E6%8D%A2%E6%8A%80%E6%9C%AF">交换技术</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93-2">小结</a></li>
</ul>
</li>
</ul>
</p>
<h1 id="操作系统第十三次课小结"><a class="markdownIt-Anchor" href="#操作系统第十三次课小结"></a> 操作系统第十三次课小结</h1>
<h2 id="内存"><a class="markdownIt-Anchor" href="#内存"></a> 内存</h2>
<ol>
<li>
<p><strong>作用</strong>：用于存放数据的硬件，程序执行前<strong>先放入内存中才能</strong>被CPU处理</p>
</li>
<li>
<p><strong>编址方式</strong></p>
<ul>
<li>按<strong>字节</strong>编址，每个存储单元大小为<strong>1个字节</strong>，即8个二进制位</li>
<li>按<strong>字</strong>编址，每个存储单元大小为<strong>1个字</strong>，大小取决于<strong>计算机字长</strong></li>
</ul>
<blockquote>
<p>一台设备有 4GB 内存</p>
<p>指该内存中可以存放 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>4</mn><mo>×</mo><msup><mn>2</mn><mn>30</mn></msup></mrow><annotation encoding="application/x-tex">4 \times 2^{30}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span> 个字节，</p>
<p>若是按字节编址则需要 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>32</mn></msup></mrow><annotation encoding="application/x-tex">2^{32}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span> 个地址来标识，故地址需要 32bit 来表示</p>
</blockquote>
</li>
<li>
<p>代码经编译生成指令才能被CPU识别，生成的指令中一般时使用<strong>逻辑地址</strong>（<strong>相对地址</strong>），因为程序每次运行开辟的空间<strong>位置不一定相同</strong>，固定地址会出错</p>
<blockquote>
<p>例如 编译时确定变量x的相对地址为100，则运行时CPU只需通过<strong>进程起始位置+100</strong>，即可获取到实际存放位置，而进程起始位置是会变化的</p>
</blockquote>
</li>
</ol>
<h2 id="链接与装入"><a class="markdownIt-Anchor" href="#链接与装入"></a> 链接与装入</h2>
<ol>
<li>
<p><strong>从写程序到程序运行</strong></p>
<ul>
<li>
<p>编辑源代码文件</p>
</li>
<li>
<p><strong>编译</strong>：<strong>编译程序</strong>将用户源代码编译成若干个<strong>目标模块</strong> (把高级语言<strong>翻译为机器语言</strong>)</p>
</li>
<li>
<p><strong>链接</strong>：<strong>链接程序</strong>将一组<strong>目标模块</strong>及其需要的<strong>库函数</strong>链接在于一起，组成<strong>装入模块</strong>，<strong>此时多个模块各自的逻辑地址被组合成一个完整的逻辑地址</strong></p>
</li>
<li>
<p><strong>装入</strong>（装载）：<strong>装入程序</strong>将装入模块装入<strong>内存</strong>运行，<strong>此时完整的逻辑地址被嵌入内存某位置而得到完整的物理地址</strong></p>
<p><img src="https://i.loli.net/2020/04/22/u9CwD5xTnZco4sR.png" alt="" /></p>
</li>
</ul>
</li>
<li>
<p><strong>装入</strong></p>
<ul>
<li>将<strong>装入模块</strong>（可执行文件）<strong>放入内存</strong>，按模块自身的逻辑地址<strong>转化为</strong>内存中的<strong>物理地址</strong>  （其中，物理地址=起始地址+逻辑地址）</li>
<li><strong>绝对装入</strong>
<ul>
<li>在编译时<strong>已知</strong>道程序将放入内存的具体位置，则<strong>编译程序直接生成带有绝对地址的装入模块</strong>，<strong>装入程序按</strong>模块中的<strong>地址</strong>放入<strong>指定位置</strong></li>
<li>程序已知的绝对地址来源可以是<strong>编译或汇编时给出</strong>，也可以是<strong>程序员直接赋予</strong>。</li>
<li>通常情况下都是在<strong>编译或汇编时</strong>转换</li>
<li>只适合<strong>单道程序环境</strong></li>
</ul>
</li>
<li><strong>静态重定位</strong>（可重定位装入）
<ul>
<li>编译链接后的装入模块地址都是<strong>从0开始的逻辑地址</strong></li>
<li>再装入内存时，<strong>按</strong>装入的<strong>内存起始位置地址</strong>进行重定位，将逻辑地址计算转化为物理地址</li>
<li>地址变换是在<strong>装入时一次性完成</strong></li>
<li>装入内存时，<strong>必须一次性分配全部所需空间</strong>，若不足，则无法装入</li>
<li>一旦装入内存，<strong>运行期间不可移动</strong>，空间不可申请扩充</li>
</ul>
</li>
<li><strong>动态重定位</strong>（动态运行时装入）
<ul>
<li>装入模块地址<strong>从0开始的逻辑地址</strong></li>
<li><strong>地址变换推迟到真正要执行时进行</strong>，装入内存后<strong>存储的</strong>地址<strong>仍是逻辑地址</strong></li>
<li>需要一个<strong>重定位寄存器</strong>的支持，存放了装入模块在内存的<strong>起始地址</strong></li>
<li>可将程序分配到不连续的存储区，根据需要<strong>动态申请分配内存</strong></li>
<li><strong>允许程序在内存中发生移动</strong>，及时更改重定位寄存器的值即可</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>链接方式</strong></p>
<ul>
<li>链接过程<strong>合并目标模块</strong>，同时<strong>整合</strong>其各自的<strong>逻辑地址</strong></li>
<li><strong>静态链接</strong>：将目标模块及所需库函数链接成一个<strong>装入模块</strong>（可执行文件），之后<strong>不再分开</strong></li>
<li><strong>装入时动态链接</strong>：目标模块装入内存时，<strong>边装入边链接</strong></li>
<li><strong>运行时动态链接</strong>：在<strong>运行中需要目标模块</strong>时才对其进行链接，<strong>便于更新修改</strong>，实现对目标模块的<strong>共享</strong></li>
</ul>
</li>
<li>
<p>小结</p>
<p><img src="https://i.loli.net/2020/04/22/1dQeyuNJ9BAtILK.jpg" alt="" /></p>
</li>
</ol>
<h2 id="内存管理关注点"><a class="markdownIt-Anchor" href="#内存管理关注点"></a> 内存管理关注点</h2>
<h3 id="内存空间的分配和回收"><a class="markdownIt-Anchor" href="#内存空间的分配和回收"></a> 内存空间的分配和回收</h3>
<ul>
<li>进程应放到内存的哪个位置</li>
<li>操作系统如何记录已分配和仍空闲的空间</li>
<li>进程结束后如何收回空间</li>
</ul>
<h3 id="空间扩充"><a class="markdownIt-Anchor" href="#空间扩充"></a> 空间扩充</h3>
<ul>
<li><strong>虚拟化</strong>，把物理上较小的内存扩展为逻辑上较大的内存</li>
</ul>
<h3 id="地址转换"><a class="markdownIt-Anchor" href="#地址转换"></a> 地址转换</h3>
<ul>
<li>操作系统提供地址转换功能，负责程序的<strong>逻辑地址</strong>和内存的<strong>物理地址</strong>的转换</li>
<li><strong>绝对装入</strong>：单道程序阶段，由<strong>编译器</strong>实现</li>
<li><strong>静态重定位</strong>：<strong>装入时一次性</strong>转换，用于早期多道批处理操作系统</li>
<li><strong>动态重定位</strong>：<strong>运行时转换</strong>，需要设置<strong>重定位寄存器</strong>，用于现代操作系统</li>
</ul>
<h3 id="内存保护"><a class="markdownIt-Anchor" href="#内存保护"></a> 内存保护</h3>
<ul>
<li>保证各进程在各自存储空间内运行，互不干扰</li>
<li>方法一：CPU中设置<strong>上、下限寄存器</strong>，存放进程上下限地址，指令访问时检查是否越界</li>
<li>方法二：采用<strong>重定向寄存器</strong>（<strong>基址寄存器</strong>，存放进程<strong>起始物理</strong>地址）和<strong>界地址寄存器</strong>（<strong>限长寄存器</strong>，存放进程<strong>最大逻辑</strong>地址），指令访问时先判断逻辑地址是否超出<strong>限长</strong>，未超出再进行<strong>重定位</strong>得到实际物理地址</li>
</ul>
<h3 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/04/22/VjxPKWlfvSLiE8F.jpg" alt="" /></p>
<h2 id="覆盖与交换"><a class="markdownIt-Anchor" href="#覆盖与交换"></a> 覆盖与交换</h2>
<h3 id="覆盖技术"><a class="markdownIt-Anchor" href="#覆盖技术"></a> 覆盖技术</h3>
<ul>
<li>
<p>解决<strong>程序大小超过物理内存总和</strong>的问题</p>
</li>
<li>
<p>程序分为<strong>多段</strong>（<strong>模块</strong>），常用段常驻内存，不常用的需要时才调用</p>
</li>
<li>
<p><strong>一个固定区，若干个覆盖区</strong>，固定区调入后不再调出</p>
</li>
<li>
<p>按照程序<strong>逻辑</strong>结构，让<strong>不同时被访问</strong>的程序段<strong>共享</strong>一个<strong>覆盖区</strong></p>
<p><img src="https://i.loli.net/2020/04/22/cFsL2DWSNr5a7qV.png" alt="" /></p>
</li>
<li>
<p><strong>必须由程序员声明覆盖结构</strong>，有操作系统自动完成覆盖</p>
</li>
<li>
<p>缺点是<strong>对用户不透明</strong>，编程负担</p>
</li>
</ul>
<h3 id="交换技术"><a class="markdownIt-Anchor" href="#交换技术"></a> 交换技术</h3>
<ul>
<li>内存空间紧张时，将某些进程暂时<strong>换出</strong>外存（<strong>挂起</strong>），把某些已具备运行条件的进程<strong>调入</strong>内存（<strong>唤醒激活</strong>） （<strong>进程在内存和磁盘间动态调度</strong>）</li>
<li>中级调度（<strong>内存调度</strong>），决定哪个处于挂起状态的进程重新调入内存</li>
<li><strong>磁盘</strong>空间分为<strong>文件区</strong>（存放文件，<strong>离散</strong>分配，追求<strong>利用率</strong>）和<strong>对换区</strong>（存放对换的<strong>进程数据</strong>，<strong>连续</strong>分配，追求<strong>速度</strong>），<strong>对换区的I/O速度比文件区更快</strong></li>
<li>交换在<strong>内存吃紧</strong>（经常缺页）时进行，系统<strong>负荷降低</strong>（缺页率降低）时暂停</li>
<li><strong>优先</strong>换出<strong>阻塞</strong>进程；<strong>优先级较低</strong>的进程；考虑进程在内存的<strong>驻留时间</strong></li>
<li><strong>PCB会常驻内存，不会被换出</strong></li>
</ul>
<h3 id="小结-2"><a class="markdownIt-Anchor" href="#小结-2"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/04/22/E6SCDjckh8WoilF.jpg" alt="" /></p>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>OS-15-分页存储管理</title>
    <url>/2020/07/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%8D%81%E4%BA%94%E6%AC%A1%E8%AF%BE%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E5%88%86%E9%A1%B5%E5%AD%98%E5%82%A8">分页存储</a></li>
<li><a href="#%E5%88%86%E9%A1%B5%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2%E6%9C%BA%E5%88%B6">分页地址转换机制</a></li>
<li><a href="#%E5%BF%AB%E8%A1%A8%E6%9C%BA%E5%88%B6">快表机制</a></li>
<li><a href="#%E5%BF%AB%E6%85%A2%E8%A1%A8%E6%9C%BA%E5%88%B6%E5%AF%B9%E6%AF%94">快慢表机制对比</a></li>
<li><a href="#%E5%A4%9A%E7%BA%A7%E9%A1%B5%E8%A1%A8">多级页表</a></li>
</ul>
</p>
<h1 id="操作系统第十五次课小结"><a class="markdownIt-Anchor" href="#操作系统第十五次课小结"></a> 操作系统第十五次课小结</h1>
<h2 id="分页存储"><a class="markdownIt-Anchor" href="#分页存储"></a> 分页存储</h2>
<ol>
<li>
<p>思想：把内存分成<strong>相等的若干区</strong>，按照分区大小<strong>拆分进程</strong></p>
</li>
<li>
<p>概念：</p>
<ul>
<li>内存划分<strong>页框</strong>，进程拆分为若干<strong>页（面）</strong></li>
<li>每个分区是一个<strong>页框</strong>（内存块、物理块），每个页框一个<strong>页框号</strong>（内存块号 ···）</li>
<li>每个<strong>页面</strong>大小等于页框，有一个<strong>页号</strong></li>
<li>页框号和页号均<strong>从0开始</strong></li>
<li>进程拆分的最后一个页面比页框小，会有剩余，因此，<strong>页框设置过大，可能产生较大的内部碎片</strong></li>
<li>操作系统<strong>以页框为单位</strong>为进程分配内存，进程页面与内存页框<strong>一一对应</strong></li>
<li><strong>页面不必连续存放也不必按顺序</strong></li>
</ul>
</li>
<li>
<p><strong>十进制的地址转换计算</strong></p>
<ul>
<li>计算公式：
<ul>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">页</mi><mi mathvariant="normal">号</mi><mo>=</mo><mo fence="true">⌊</mo><mfrac><mrow><mi mathvariant="normal">逻</mi><mi mathvariant="normal">辑</mi><mi mathvariant="normal">地</mi><mi mathvariant="normal">址</mi></mrow><mrow><mi mathvariant="normal">页</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">长</mi><mi mathvariant="normal">度</mi></mrow></mfrac><mo fence="true">⌋</mo></mrow><annotation encoding="application/x-tex">页号 = \biggl\lfloor \frac{逻辑地址}{页面长度}\biggr\rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">号</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mopen"><span class="delimsizing size3">⌊</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.394em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">页</span><span class="mord cjk_fallback mtight">面</span><span class="mord cjk_fallback mtight">长</span><span class="mord cjk_fallback mtight">度</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">逻</span><span class="mord cjk_fallback mtight">辑</span><span class="mord cjk_fallback mtight">地</span><span class="mord cjk_fallback mtight">址</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="delimsizing size3">⌋</span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">页</mi><mi mathvariant="normal">内</mi><mi mathvariant="normal">偏</mi><mi mathvariant="normal">移</mi><mi mathvariant="normal">量</mi><mo>=</mo><mi mathvariant="normal">逻</mi><mi mathvariant="normal">辑</mi><mi mathvariant="normal">地</mi><mi mathvariant="normal">址</mi><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi mathvariant="normal">页</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">长</mi><mi mathvariant="normal">度</mi></mrow><annotation encoding="application/x-tex">页内偏移量 = 逻辑地址\ mod\ 页面长度</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">偏</span><span class="mord cjk_fallback">移</span><span class="mord cjk_fallback">量</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord cjk_fallback">逻</span><span class="mord cjk_fallback">辑</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">长</span><span class="mord cjk_fallback">度</span></span></span></span></li>
<li>页面在内存中的起始位置由操作系统的某种数据结构记录</li>
<li><strong>页面大小一般为 2 的整数幂</strong></li>
</ul>
</li>
<li>计算步骤：
<ul>
<li>算出逻辑地址对应的<strong>页号</strong></li>
<li>获取对应页面在内存的<strong>起始地址</strong></li>
<li>算出<strong>页内偏移量</strong></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">物</mi><mi mathvariant="normal">理</mi><mi mathvariant="normal">地</mi><mi mathvariant="normal">址</mi><mo>=</mo><mi mathvariant="normal">页</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">始</mi><mi mathvariant="normal">址</mi><mo>+</mo><mi mathvariant="normal">页</mi><mi mathvariant="normal">内</mi><mi mathvariant="normal">偏</mi><mi mathvariant="normal">移</mi><mi mathvariant="normal">量</mi></mrow><annotation encoding="application/x-tex">物理地址 = 页面始址 + 页内偏移量</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">物</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">始</span><span class="mord cjk_fallback">址</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">偏</span><span class="mord cjk_fallback">移</span><span class="mord cjk_fallback">量</span></span></span></span></li>
</ul>
</li>
</ul>
<blockquote>
<p>页面大小为50，1、2 号页起始地址为400、450，逻辑地址为80的内存单元，对应物理地址为：</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">页</mi><mi mathvariant="normal">号</mi><mo>=</mo><mn>80</mn><mi mathvariant="normal">/</mi><mn>50</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">页号 = 80 / 50 = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">号</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">8</span><span class="mord">0</span><span class="mord">/</span><span class="mord">5</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">页</mi><mi mathvariant="normal">内</mi><mi mathvariant="normal">偏</mi><mi mathvariant="normal">移</mi><mi mathvariant="normal">量</mi><mo>=</mo><mn>80</mn></mrow><annotation encoding="application/x-tex">页内偏移量 = 80 % 50 = 30</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">偏</span><span class="mord cjk_fallback">移</span><span class="mord cjk_fallback">量</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">0</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">对</mi><mi mathvariant="normal">应</mi><mi mathvariant="normal">物</mi><mi mathvariant="normal">理</mi><mi mathvariant="normal">地</mi><mi mathvariant="normal">址</mi><mo>=</mo><mn>400</mn><mo>+</mo><mn>30</mn><mo>=</mo><mn>430</mn></mrow><annotation encoding="application/x-tex">对应物理地址 = 400 + 30  = 430</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">应</span><span class="mord cjk_fallback">物</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">3</span><span class="mord">0</span></span></span></span></p>
</blockquote>
</li>
<li>
<p><strong>二进制的地址转换计算</strong></p>
<ul>
<li>
<p>分为两部分，<strong>从右至左，前n位为页号，后m为页内偏移量</strong>，则<strong>页面大小</strong>是 <strong>2<sup>m</sup></strong> 个内存单元，一个<strong>进程最多</strong>允许 <strong>2<sup>n</sup></strong> 个页面</p>
</li>
<li>
<p>假设地址长度32位，页内偏移量12位，则页号20位</p>
<table>
<thead>
<tr>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>31</mn><mtext> </mtext><mo>⋯</mo><mo>⋯</mo><mtext> </mtext><mn>12</mn></mrow><annotation encoding="application/x-tex">31\ \cdots \cdots \ 12</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">1</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord">1</span><span class="mord">2</span></span></span></span></th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>11</mn><mtext> </mtext><mo>⋯</mo><mo>⋯</mo><mtext> </mtext><mn>0</mn></mrow><annotation encoding="application/x-tex">11 \ \cdots \cdots \ 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord">0</span></span></span></span></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">页号 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span></td>
<td style="text-align:center">页内偏移量 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span></span></td>
</tr>
<tr>
<td style="text-align:center">0000000000000000<strong>11</strong>00<br />（第10页）</td>
<td style="text-align:center">00000000<strong>1111</strong><br />（第15个单元）</td>
</tr>
</tbody>
</table>
</li>
</ul>
</li>
<li>
<p>页表</p>
<ul>
<li><strong>记录</strong>每个页面在内存中的<strong>存放位置</strong>，<strong>进程页面与实际存放的内存块的对应关系</strong></li>
<li>一个进程对应一张页表，进程每一页对应一个页表项</li>
<li>每个页表项由<strong>页号</strong>和<strong>块号</strong>组成</li>
<li>页表项<strong>长度相同</strong>，页号是<strong>隐含</strong>的</li>
<li><strong>页号可通过起始地址与页表项长度计算得到</strong>，各页表项按顺序连续存放在内存，若页表起始地址为 X，则 M 号对应项的地址为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>+</mo><mn>3</mn><mi>M</mi></mrow><annotation encoding="application/x-tex">X + 3M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span></li>
</ul>
</li>
<li>
<p>分页小结</p>
<p><img src="https://i.loli.net/2020/05/02/8ybO1IJckz46XPs.png" alt="" /></p>
</li>
</ol>
<h2 id="分页地址转换机制"><a class="markdownIt-Anchor" href="#分页地址转换机制"></a> 分页地址转换机制</h2>
<ol>
<li>
<p><strong>页表寄存器</strong>（PTR）：记录 <strong>页表在内存的起始地址</strong>F 和 <strong>页表长度</strong>M，存放于进程控制块（PCB）中</p>
</li>
<li>
<p>设页面大小为L，逻辑地址A 到 物理地址E 的<strong>变换过程</strong>：</p>
<ul>
<li>计算 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">页</mi><mi mathvariant="normal">号</mi><mi>P</mi><mo>=</mo><mi>A</mi><mi mathvariant="normal">/</mi><mi>L</mi></mrow><annotation encoding="application/x-tex">页号P = A/L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">号</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord">/</span><span class="mord mathdefault">L</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">页</mi><mi mathvariant="normal">内</mi><mi mathvariant="normal">偏</mi><mi mathvariant="normal">移</mi><mi mathvariant="normal">量</mi><mi>M</mi><mo>=</mo><mi>A</mi><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>L</mi></mrow><annotation encoding="application/x-tex">页内偏移量M = A\ mod\ L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">偏</span><span class="mord cjk_fallback">移</span><span class="mord cjk_fallback">量</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">L</span></span></span></span></li>
<li><strong>比较</strong>页号与页表长度，若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>≥</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">P \geq M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>，则<strong>发生越界</strong>，注意 P 从0开始，而 M 最小为1</li>
<li>页号P 对应的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">页</mi><mi mathvariant="normal">表</mi><mi mathvariant="normal">项</mi><mi mathvariant="normal">地</mi><mi mathvariant="normal">址</mi><mo>=</mo><mi mathvariant="normal">页</mi><mi mathvariant="normal">表</mi><mi mathvariant="normal">起</mi><mi mathvariant="normal">始</mi><mi mathvariant="normal">地</mi><mi mathvariant="normal">址</mi><mi>F</mi><mo>+</mo><mi mathvariant="normal">页</mi><mi mathvariant="normal">号</mi><mi>P</mi><mo>×</mo><mi mathvariant="normal">页</mi><mi mathvariant="normal">表</mi><mi mathvariant="normal">项</mi><mi mathvariant="normal">长</mi><mi mathvariant="normal">度</mi></mrow><annotation encoding="application/x-tex">页表项地址 = 页表起始地址F + 页号P \times 页表项长度</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">起</span><span class="mord cjk_fallback">始</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">号</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">长</span><span class="mord cjk_fallback">度</span></span></span></span>，取出 表项内容b 即为<strong>内存块号</strong></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">物</mi><mi mathvariant="normal">理</mi><mi mathvariant="normal">地</mi><mi mathvariant="normal">址</mi><mi>E</mi><mo>=</mo><mi mathvariant="normal">内</mi><mi mathvariant="normal">存</mi><mi mathvariant="normal">块</mi><mi mathvariant="normal">号</mi><mi>b</mi><mo>×</mo><mi mathvariant="normal">页</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">大</mi><mi mathvariant="normal">小</mi><mi>L</mi><mo>+</mo><mi mathvariant="normal">偏</mi><mi mathvariant="normal">移</mi><mi mathvariant="normal">量</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">物理地址E = 内存块号b \times 页面大小L + 偏移量M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">物</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">存</span><span class="mord cjk_fallback">块</span><span class="mord cjk_fallback">号</span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">小</span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">偏</span><span class="mord cjk_fallback">移</span><span class="mord cjk_fallback">量</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span></li>
</ul>
</li>
<li>
<p>例题：</p>
<blockquote>
<p>例:若页面大小L为 1K 字节，页号2对应的内存块号b=8，将逻辑地址A=2500转换为物理地址E。</p>
<p><strong>等价描述</strong>:某系统按字节寻址，逻辑地址结构中，页内偏移量占10位，页号2对应的内存块号b=8，将逻辑地址 A=2500 转换为物理地址E。</p>
<p>偏移量占10位，说明页面大小为 2<sup>10</sup> B = 1 KB</p>
<p>① 计算页号、偏移量</p>
<p>​	<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>=</mo><mn>2500</mn><mi mathvariant="normal">/</mi><mn>1</mn><mi>K</mi><mo>=</mo><mn>2</mn><mi mathvariant="normal">；</mi><mi>W</mi><mo>=</mo><mn>2500</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>1</mn><mi>K</mi><mo>=</mo><mn>452</mn></mrow><annotation encoding="application/x-tex">P = 2500 / 1K = 2；W = 2500\ mod\  1K = 452</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">0</span><span class="mord">0</span><span class="mord">/</span><span class="mord">1</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord cjk_fallback">；</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">0</span><span class="mord">0</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">1</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">5</span><span class="mord">2</span></span></span></span></p>
<p>② 由已知条件知，未越界，内存块号为 8</p>
<p>③ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">物</mi><mi mathvariant="normal">理</mi><mi mathvariant="normal">地</mi><mi mathvariant="normal">址</mi><mi>E</mi><mo>=</mo><mn>8</mn><mo>×</mo><mn>1</mn><mi>K</mi><mo>+</mo><mi>W</mi><mo>=</mo><mn>8</mn><mo>×</mo><mn>1024</mn><mo>+</mo><mn>452</mn><mo>=</mo><mn>8644</mn></mrow><annotation encoding="application/x-tex">物理地址E = 8 \times 1K + W = 8 \times 1024 + 452 = 8644</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">物</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">2</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">5</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">6</span><span class="mord">4</span><span class="mord">4</span></span></span></span></p>
</blockquote>
</li>
<li>
<p>为方便页表存放和查询，会特意<strong>扩大</strong>页表项长度，<strong>使得页面恰好装得下整数个页表项</strong>，以确保<strong>连续存放</strong></p>
</li>
<li>
<p>小结</p>
<p><img src="https://i.loli.net/2020/05/02/ubHpDMfBPmgV4Ce.png" alt="" /></p>
</li>
</ol>
<h2 id="快表机制"><a class="markdownIt-Anchor" href="#快表机制"></a> 快表机制</h2>
<ol>
<li>
<p><strong>时间局部性</strong>：指令或数据可能被多次访问，因为程序存在大量的循环<br />
<strong>空间局部性</strong>：单元被访问，邻近单元易被再次访问，因为很多数据连续存放</p>
</li>
<li>
<p>地址变换机制中，<strong>可能连续多次访问到的都是同一个页表项</strong></p>
</li>
<li>
<p>计算过程;</p>
<ul>
<li>计算页号和偏移量</li>
<li><strong>在快表中查询页号</strong>，若<strong>命中</strong>则<strong>直接使用</strong>对应内存块，将内存块号与偏移量拼接成物理地址，最后访问存储单元</li>
<li>若<strong>未命中</strong>，则<strong>访问内存</strong>中的页表找到对应内存块，<strong>将页号与内存块号存入快表中</strong>，再拼接得到物理地址并访问</li>
<li>若快表命中，则仅需<strong>一次访存</strong>；若未命中，则访问页表和存储单元，共<strong>两次访存</strong></li>
<li>若存入时快表已满，按照一定算法对旧的表项进行替换</li>
</ul>
</li>
<li>
<p>例题</p>
<blockquote>
<p>例：某系统使用基本分页存储管理，并采用了具有快表的地址变换机构。访问一次快表耗时1us，访问一次内存耗时100us。若快表的命中率为90%，那么访问一个逻辑地址的平均耗时是多少？</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">耗</mi><mi mathvariant="normal">时</mi><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>100</mn><mo stretchy="false">)</mo><mo>×</mo><mn>90</mn><mi mathvariant="normal">%</mi><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>100</mn><mo>+</mo><mn>100</mn><mo stretchy="false">)</mo><mo>×</mo><mn>10</mn><mi mathvariant="normal">%</mi><mo>=</mo><mn>111</mn><mi>u</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">耗时 = (1+100) \times 90\% + (1+100+100) \times 10\% = 111 us</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">耗</span><span class="mord cjk_fallback">时</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.08333em;"></span><span class="mord">9</span><span class="mord">0</span><span class="mord">%</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">%</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord mathdefault">u</span><span class="mord mathdefault">s</span></span></span></span></p>
<p>有的系统也支持快慢表同时查询，则结果为</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">耗</mi><mi mathvariant="normal">时</mi><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>100</mn><mo stretchy="false">)</mo><mo>×</mo><mn>90</mn><mi mathvariant="normal">%</mi><mo>+</mo><mo stretchy="false">(</mo><mn>100</mn><mo>+</mo><mn>100</mn><mo stretchy="false">)</mo><mo>×</mo><mn>10</mn><mi mathvariant="normal">%</mi><mo>=</mo><mn>110.9</mn><mi>u</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">耗时 = (1+100) \times 90\% + (100+100)\times 10\% = 110.9 us</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">耗</span><span class="mord cjk_fallback">时</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.08333em;"></span><span class="mord">9</span><span class="mord">0</span><span class="mord">%</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">%</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord mathdefault">u</span><span class="mord mathdefault">s</span></span></span></span></p>
<p>若未使用快表机制</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">耗</mi><mi mathvariant="normal">时</mi><mo>=</mo><mn>100</mn><mo>+</mo><mn>100</mn><mo>=</mo><mn>200</mn><mi>u</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">耗时 = 100 + 100 = 200 us</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">耗</span><span class="mord cjk_fallback">时</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mord mathdefault">u</span><span class="mord mathdefault">s</span></span></span></span></p>
</blockquote>
</li>
<li>
<p>快表计算过程图示</p>
<p><img src="https://i.loli.net/2020/05/02/ZXxtQna9Mm2k74u.png" alt="" /></p>
</li>
</ol>
<h2 id="快慢表机制对比"><a class="markdownIt-Anchor" href="#快慢表机制对比"></a> 快慢表机制对比</h2>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">地址变换过程</th>
<th style="text-align:center">访存次数</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">基本地址</td>
<td style="text-align:center">① 算页号、页内偏移量<br />② 检查页号合法性<br />③ 查页表，找对应内存块号<br />④ 拼接得到物理地址<br />⑤ 访问目标内存单元</td>
<td style="text-align:center"><strong>两次</strong></td>
</tr>
<tr>
<td style="text-align:center">具有快表</td>
<td style="text-align:center">① 算页号、页内偏移量<br />② 检查页号合法性<br />③ <strong>查快表</strong>，命中则⑤，否则进行④<br />④ 查页表找内存块号，<strong>并将页表项复制到快表</strong><br />⑤ 拼接得到物理地址<br />⑥ 访问目标内存单元</td>
<td style="text-align:center"><strong>快表命中则一次</strong><br />未命中需两次</td>
</tr>
</tbody>
</table>
<h2 id="多级页表"><a class="markdownIt-Anchor" href="#多级页表"></a> 多级页表</h2>
<ol>
<li>
<p><strong>页目录表</strong>（外层页表、顶层页表）：将现有页表<strong>分组离散</strong>放入内存块中，为离散分配的页表再建立一张页表。即<strong>拆分低级页表，使用高级连续页表记录低级离散页表</strong></p>
</li>
<li>
<p>两级页表<strong>结构</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>31</mn><mo>⋯</mo><mo>⋯</mo><mn>22</mn></mrow><annotation encoding="application/x-tex">31 \cdots \cdots 22</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">1</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">2</span></span></span></span></th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>21</mn><mo>⋯</mo><mo>⋯</mo><mn>12</mn></mrow><annotation encoding="application/x-tex">21 \cdots \cdots 12</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">2</span></span></span></span></th>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>11</mn><mo>⋯</mo><mo>⋯</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">11 \cdots \cdots 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span></span></span></span></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">一级页号</td>
<td style="text-align:center">二级页号</td>
<td style="text-align:center">页内偏移量</td>
</tr>
</tbody>
</table>
<p><img src="https://i.loli.net/2020/05/02/ASRVfx1XoMuim7U.png" alt="" /></p>
</li>
<li>
<p><strong>使用步骤</strong></p>
<ul>
<li>按照地址结构<strong>拆分</strong>逻辑地址</li>
<li>从PCB中读出页目录表始址，根据一级页号查目录表，找到下级页表存放的内存块</li>
<li>根据二级页号查二级页表，找到最终访问内存块号</li>
<li>结合偏移量获得物理地址</li>
</ul>
</li>
<li>
<p><strong>没有必要整个页表常驻内存</strong>，一段时间内进程可能只需访问某几个特定的页面</p>
<ul>
<li>
<p>虚拟存储技术，在<strong>需要</strong>访问页面时，<strong>才</strong>把页面<strong>调入内存</strong>，增加标志位记录调入状态</p>
</li>
<li>
<p>若访问页面未调入，<strong>则产生缺页中断</strong>（内中断），而后目标页面<strong>从外存调入内存</strong></p>
</li>
<li>
<table>
<thead>
<tr>
<th>一级页号</th>
<th>内存块号</th>
<th>是否已调入</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>3</td>
<td>是</td>
</tr>
<tr>
<td>1</td>
<td>无</td>
<td>否</td>
</tr>
<tr>
<td>······</td>
<td>······</td>
<td>······</td>
</tr>
<tr>
<td>1023</td>
<td>······</td>
<td>······</td>
</tr>
</tbody>
</table>
</li>
</ul>
</li>
<li>
<p><strong>细节</strong></p>
<ul>
<li>两级页表<strong>访存次数</strong>分析
<ul>
<li>第一次：访问内存中的<strong>页目录表</strong></li>
<li>第二次：<strong>二级页表</strong></li>
<li>第三次：<strong>目标内存存储单元</strong></li>
</ul>
</li>
<li>多级页表机制中，<strong>各级页表大小不超过一个页面</strong></li>
</ul>
<blockquote>
<p>某系统按字节编址，采用40位逻辑地址，页面大小为4KB，页表项大小为4B，采用纯页式存储，则需（  ）级页表，页内偏移量为（  ）位？</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∵</mo><mi mathvariant="normal">页</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">大</mi><mi mathvariant="normal">小</mi><mo>=</mo><mn>4</mn><mi>K</mi><mi>B</mi><mo>=</mo><msup><mn>2</mn><mn>12</mn></msup><mi>B</mi></mrow><annotation encoding="application/x-tex">\because 页面大小 = 4 KB = 2^{12} B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">小</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∴</mo><mi mathvariant="normal">偏</mi><mi mathvariant="normal">移</mi><mi mathvariant="normal">量</mi><mi mathvariant="normal">为</mi><mn>12</mn><mi mathvariant="normal">位</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">页</mi><mi mathvariant="normal">号</mi><mo>=</mo><mn>40</mn><mo>−</mo><mn>12</mn><mo>=</mo><mn>28</mn><mi mathvariant="normal">位</mi></mrow><annotation encoding="application/x-tex">\therefore 偏移量为 12  位，页号 = 40 - 12 = 28 位</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord cjk_fallback">偏</span><span class="mord cjk_fallback">移</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">为</span><span class="mord">1</span><span class="mord">2</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">号</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">8</span><span class="mord cjk_fallback">位</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∵</mo><mi mathvariant="normal">页</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">大</mi><mi mathvariant="normal">小</mi><mo>=</mo><msup><mn>2</mn><mn>12</mn></msup><mi>B</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">页</mi><mi mathvariant="normal">表</mi><mi mathvariant="normal">项</mi><mi mathvariant="normal">大</mi><mi mathvariant="normal">小</mi><mo>=</mo><mn>4</mn><mi>B</mi></mrow><annotation encoding="application/x-tex">\because 页面大小 = 2^{12} B，页表项大小 = 4 B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">小</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">小</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∴</mo><mi mathvariant="normal">每</mi><mi mathvariant="normal">个</mi><mi mathvariant="normal">页</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">页</mi><mi mathvariant="normal">表</mi><mi mathvariant="normal">项</mi><mi mathvariant="normal">总</mi><mi mathvariant="normal">数</mi><mo>=</mo><mfrac><mrow><msup><mn>2</mn><mn>12</mn></msup><mi>B</mi></mrow><mrow><mn>4</mn><mi>B</mi></mrow></mfrac><mo>=</mo><msup><mn>2</mn><mn>1</mn></msup><mn>0</mn></mrow><annotation encoding="application/x-tex">\therefore 每个页面页表项总数  = \frac {2^{12} B} {4 B} = 2^10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">总</span><span class="mord cjk_fallback">数</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.36292em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01792em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mord">0</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∴</mo><mi mathvariant="normal">每</mi><mi mathvariant="normal">级</mi><mi mathvariant="normal">页</mi><mi mathvariant="normal">表</mi><mi mathvariant="normal">最</mi><mi mathvariant="normal">多</mi><mi mathvariant="normal">由</mi><mn>10</mn><mi mathvariant="normal">个</mi><mi mathvariant="normal">二</mi><mi mathvariant="normal">进</mi><mi mathvariant="normal">制</mi><mi mathvariant="normal">位</mi><mi mathvariant="normal">来</mi><mi mathvariant="normal">映</mi><mi mathvariant="normal">射</mi></mrow><annotation encoding="application/x-tex">\therefore 每级页表最多由 10 个二进制位来映射</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">级</span><span class="mord cjk_fallback">页</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">最</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">由</span><span class="mord">1</span><span class="mord">0</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">二</span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">制</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">来</span><span class="mord cjk_fallback">映</span><span class="mord cjk_fallback">射</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∵</mo><mn>10</mn><mi>n</mi><mo>+</mo><mn>12</mn><mo>≥</mo><mn>40</mn><mi mathvariant="normal">，</mi><mi mathvariant="normal">解</mi><mi mathvariant="normal">得</mi><mi>n</mi><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">\because 10 n + 12 \geq 40，解得 n = 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">0</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">得</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∴</mo><mi mathvariant="normal">至</mi><mi mathvariant="normal">少</mi><mi mathvariant="normal">分</mi><mi mathvariant="normal">为</mi><mn>3</mn><mi mathvariant="normal">级</mi></mrow><annotation encoding="application/x-tex">\therefore 至少分为 3 级</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord cjk_fallback">至</span><span class="mord cjk_fallback">少</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">为</span><span class="mord">3</span><span class="mord cjk_fallback">级</span></span></span></span></p>
</blockquote>
<ul>
<li>转换过程示例</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">逻辑地址</th>
<th style="text-align:center">页号</th>
<th style="text-align:center">页内偏移量</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>共40位</strong></td>
<td style="text-align:center">28</td>
<td style="text-align:center">12</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center">逻辑地址</th>
<th style="text-align:center">一级页号</th>
<th style="text-align:center">二级页号</th>
<th style="text-align:center">三级页号</th>
<th style="text-align:center">页内偏移量</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>共40位</strong></td>
<td style="text-align:center"><strong>8</strong></td>
<td style="text-align:center">10</td>
<td style="text-align:center">10</td>
<td style="text-align:center">12</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>多级页表机制小结</p>
<p><img src="https://i.loli.net/2020/05/02/mR5n1i6BhfwJ3tM.png" alt="" /></p>
</li>
</ol>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>OS-19-文件空间分配和存储</title>
    <url>/2020/07/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%8D%81%E4%B9%9D%E6%AC%A1%E8%AF%BE%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E6%96%87%E4%BB%B6%E7%89%A9%E7%90%86%E7%BB%93%E6%9E%84">文件物理结构</a>
<ul>
<li><a href="#%E6%A6%82%E5%BF%B5">概念</a></li>
<li><a href="#%E8%BF%9E%E7%BB%AD%E5%88%86%E9%85%8D">连续分配</a></li>
<li><a href="#%E9%93%BE%E6%8E%A5%E5%88%86%E9%85%8D">链接分配</a>
<ul>
<li><a href="#%E9%9A%90%E5%BC%8F%E9%93%BE%E6%8E%A5">隐式链接</a></li>
<li><a href="#%E6%98%BE%E5%BC%8F%E9%93%BE%E6%8E%A5">显式链接</a></li>
</ul>
</li>
<li><a href="#%E7%B4%A2%E5%BC%95%E5%88%86%E9%85%8D">索引分配</a>
<ul>
<li><a href="#%E9%93%BE%E6%8E%A5%E6%96%B9%E6%A1%88">链接方案</a></li>
<li><a href="#%E5%A4%9A%E5%B1%82%E7%B4%A2%E5%BC%95">多层索引</a></li>
<li><a href="#%E6%B7%B7%E5%90%88%E7%B4%A2%E5%BC%95">混合索引</a></li>
<li><a href="#%E9%87%8D%E7%82%B9%E8%A6%81%E6%B1%82">重点要求</a></li>
</ul>
</li>
<li><a href="#%E5%B0%8F%E7%BB%93">小结</a></li>
</ul>
</li>
<li><a href="#%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86">文件存储空间管理</a>
<ul>
<li><a href="#%E6%A6%82%E5%BF%B5-2">概念</a></li>
<li><a href="#%E7%A9%BA%E9%97%B2%E8%A1%A8%E6%B3%95">空闲表法</a></li>
<li><a href="#%E7%A9%BA%E9%97%B2%E7%9B%98%E5%9D%97%E9%93%BE">空闲盘块链</a></li>
<li><a href="#%E7%A9%BA%E9%97%B2%E7%9B%98%E5%8C%BA%E9%93%BE">空闲盘区链</a></li>
<li><a href="#%E4%BD%8D%E7%A4%BA%E5%9B%BE%E6%B3%95">位示图法</a></li>
<li><a href="#%E6%88%90%E7%BB%84%E9%93%BE%E6%8E%A5%E6%B3%95">成组链接法</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93-2">小结</a></li>
</ul>
</li>
</ul>
</p>
<h1 id="操作系统第十九次课小结"><a class="markdownIt-Anchor" href="#操作系统第十九次课小结"></a> 操作系统第十九次课小结</h1>
<h2 id="文件物理结构"><a class="markdownIt-Anchor" href="#文件物理结构"></a> 文件物理结构</h2>
<h3 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h3>
<ul>
<li>
<p><strong>磁盘块</strong>：磁盘中的存储单元拆分成块，<strong>大小与内存块、页面相同</strong></p>
<ul>
<li>内存与磁盘的数据交换（读/写操作、磁盘I/O）都是以<strong>块</strong>为单位</li>
</ul>
</li>
<li>
<p><strong>文件块</strong>：外存管理中，<strong>文件的逻辑地址空间</strong>也被分为若干个<strong>块</strong></p>
<ul>
<li>操作系统<strong>为文件分配存储空间</strong>也是以<strong>块</strong>为单位</li>
<li>逻辑地址按（<strong>逻辑块号</strong>，<strong>块内地址</strong>）的形式表示</li>
<li>用户通过逻辑地址操作文件，<strong>操作系统实现从逻辑地址到物理地址的映射</strong></li>
</ul>
<blockquote>
<p>若块的大小为 1 KB，则 1 MB 大小的文件可被分为 1 K 个块</p>
</blockquote>
</li>
</ul>
<h3 id="连续分配"><a class="markdownIt-Anchor" href="#连续分配"></a> 连续分配</h3>
<ul>
<li>
<p>要求<strong>每个文件在磁盘上占有一组连续的块</strong></p>
</li>
<li>
<p>目录文件（FCB）中记录存放的<strong>起始块号</strong>和<strong>占有长度</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">文件名</th>
<th style="text-align:center">···</th>
<th style="text-align:center">起始块号</th>
<th style="text-align:center">长度</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">A</td>
<td style="text-align:center">···</td>
<td style="text-align:center">4</td>
<td style="text-align:center">3</td>
</tr>
<tr>
<td style="text-align:center">B</td>
<td style="text-align:center">···</td>
<td style="text-align:center">10</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">···</td>
<td style="text-align:center">···</td>
<td style="text-align:center">···</td>
<td style="text-align:center">···</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><strong>转换过程</strong>：（逻辑块号，块内地址）→（物理块号，块内地址），<strong>只</strong>转换块号即可，块内地址不改变</p>
<ol>
<li>用户给出要访问的<strong>逻辑块号</strong></li>
<li>操作系统找到相应 <strong>FCB</strong>，获取文件的<strong>起始地址</strong>和<strong>占有长度</strong></li>
<li>判断逻辑块号<strong>是否合法</strong> （<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">逻</mi><mi mathvariant="normal">辑</mi><mi mathvariant="normal">块</mi><mi mathvariant="normal">号</mi><mo>≥</mo><mi mathvariant="normal">长</mi><mi mathvariant="normal">度</mi></mrow><annotation encoding="application/x-tex">逻辑块号 \ge 长度</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord cjk_fallback">逻</span><span class="mord cjk_fallback">辑</span><span class="mord cjk_fallback">块</span><span class="mord cjk_fallback">号</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">长</span><span class="mord cjk_fallback">度</span></span></span></span> <strong>即不合法</strong>）</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">物</mi><mi mathvariant="normal">理</mi><mi mathvariant="normal">块</mi><mi mathvariant="normal">号</mi><mo>=</mo><mi mathvariant="normal">起</mi><mi mathvariant="normal">始</mi><mi mathvariant="normal">块</mi><mi mathvariant="normal">号</mi><mo>+</mo><mi mathvariant="normal">逻</mi><mi mathvariant="normal">辑</mi><mi mathvariant="normal">块</mi><mi mathvariant="normal">号</mi></mrow><annotation encoding="application/x-tex">物理块号 = 起始块号+逻辑块号</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">物</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">块</span><span class="mord cjk_fallback">号</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">起</span><span class="mord cjk_fallback">始</span><span class="mord cjk_fallback">块</span><span class="mord cjk_fallback">号</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">逻</span><span class="mord cjk_fallback">辑</span><span class="mord cjk_fallback">块</span><span class="mord cjk_fallback">号</span></span></span></span>，得到物理块号将其读入内存</li>
</ol>
</li>
<li>
<p>给出逻辑地址课直接在内存中算出对应的物理块号，因此<strong>连续分配支持顺序访问和直接访问</strong>（随机存取）</p>
</li>
<li>
<p><strong>优点</strong>：执行顺序访问和直接访问；连续分配的文件在<strong>顺序访问时速度最快</strong><br />
<strong>缺点</strong>：<strong>不方便文件拓展</strong>；<strong>存储空间利用率低</strong>，<strong>会产生磁盘碎片</strong></p>
</li>
</ul>
<h3 id="链接分配"><a class="markdownIt-Anchor" href="#链接分配"></a> 链接分配</h3>
<h4 id="隐式链接"><a class="markdownIt-Anchor" href="#隐式链接"></a> 隐式链接</h4>
<ul>
<li>
<p>除文件的<strong>最后一个磁盘块外</strong>，<strong>每个磁盘块中会保存指向下一块的指针</strong>，此内容<strong>用户不可见</strong></p>
</li>
<li>
<p>目录文件中（FCB）记录了<strong>起始块号</strong>和<strong>结束块号</strong>，按需增加文件<strong>长度</strong>字段</p>
<table>
<thead>
<tr>
<th style="text-align:center">文件名</th>
<th style="text-align:center">···</th>
<th style="text-align:center">起始块号</th>
<th style="text-align:center">结束块号</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">A</td>
<td style="text-align:center">···</td>
<td style="text-align:center">4</td>
<td style="text-align:center">8</td>
</tr>
<tr>
<td style="text-align:center">B</td>
<td style="text-align:center">···</td>
<td style="text-align:center">10</td>
<td style="text-align:center">16</td>
</tr>
<tr>
<td style="text-align:center">···</td>
<td style="text-align:center">···</td>
<td style="text-align:center">···</td>
<td style="text-align:center">···</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><strong>转换过程</strong></p>
<ol>
<li>用户给出<strong>逻辑块号</strong> i，操作系统找到相应的目录项（<strong>FCB</strong>）</li>
<li>得出<strong>起始块号</strong>，并将该块读入内存</li>
<li>按遍历链表查找，<strong>从当前块取得下一块的块号</strong>并将其<strong>调入内存</strong></li>
<li>直到当前的物理块是链表的第 <strong>i</strong> 块 （块号 i <strong>从零开始</strong>计数）</li>
<li>期间磁盘I/O需 <strong>i+1</strong> 次 (第 0 块实际上是已调入了 1 次)</li>
</ol>
</li>
<li>
<p><strong>只支持顺序访问</strong>，<strong>不支持随机访问</strong><br />
增删效率高，<strong>查找效率低</strong><br />
指向下一盘块的指针需要少量存储空间</p>
</li>
</ul>
<h4 id="显式链接"><a class="markdownIt-Anchor" href="#显式链接"></a> 显式链接</h4>
<ul>
<li><strong>文件分配表</strong>（FAT）：把用于链接文件各物理块的的指针<strong>显示地存放</strong>在一张表中</li>
<li>FCB 中只需记录文件的<strong>起始块号</strong></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">文件名</th>
<th style="text-align:center">···</th>
<th style="text-align:center">起始块号</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">A</td>
<td style="text-align:center">···</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">B</td>
<td style="text-align:center">···</td>
<td style="text-align:center">10</td>
</tr>
<tr>
<td style="text-align:center">···</td>
<td style="text-align:center">···</td>
<td style="text-align:center">···</td>
</tr>
</tbody>
</table>
<blockquote>
<p>假设新建某文件，存放磁盘块为 2 → 5 → 0 → 1，<strong>末块的下一块标记</strong>应为 -1</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">物理块号</th>
<th style="text-align:center">下一张</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">-1</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">-1</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">23</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>一个磁盘仅设置一张 FAT，开机时一次性读入内存，并常驻</strong></li>
<li>FAT物理上连续存储，表项长度相等，因此<strong>块号可隐含</strong></li>
<li><strong>访问流程</strong>：
<ol>
<li>用户给出要访问的块号 i，操作系统找到该文件对应的 FCB</li>
<li>从 FCB <strong>找到起始块号</strong>，若 i &gt; 0 (<strong>为0则目标块即为起始块</strong>)，查询 FAT 往后找到 i 号逻辑块对应的物理块，<strong>其中逻辑块号转物理块号的过程无需磁盘操作</strong>（均在内存进行）</li>
</ol>
</li>
<li>支持顺序访问，<strong>也支持随机访问</strong>（访问某块无需从磁盘读取前几块，在内存中直接计算推演）</li>
<li><strong>不会产生外部碎片</strong>，<strong>也方便拓展文件</strong></li>
</ul>
<h3 id="索引分配"><a class="markdownIt-Anchor" href="#索引分配"></a> 索引分配</h3>
<ul>
<li>允许文件<strong>离散存放到磁盘块</strong>中，为<strong>每个文件建立一张索引表</strong>，记录文件各<strong>逻辑块对应的物理块号</strong></li>
<li>索引表项一一映射，连续存放，<strong>逻辑块号隐含</strong></li>
<li>索引表存放的磁盘块称为<strong>索引块</strong>，文件数据存放的磁盘称为<strong>数据块</strong></li>
<li>FCB中<strong>只需记录索引块的块号</strong></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">文件名</th>
<th style="text-align:center">······</th>
<th style="text-align:center">索引块</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">A</td>
<td style="text-align:center">···</td>
<td style="text-align:center">7</td>
</tr>
<tr>
<td style="text-align:center">B</td>
<td style="text-align:center">···</td>
<td style="text-align:center">23</td>
</tr>
</tbody>
</table>
<ul>
<li>
<p>显式链接一个磁盘对应一张FAT，（单级）<strong>索引分配一个文件对应一张索引表</strong></p>
</li>
<li>
<p>可用固定的表项长度存放物理块号</p>
<blockquote>
<p>假设磁盘总容量为 1 TB = 2<sup>40</sup> B，磁盘块大小为 1 KB，则共有 2<sup>30</sup> 个磁盘块，则可用 4 B 表示磁盘块号（块号最大值2<sup>30</sup> &lt; 4 B = 2<sup>32</sup>）</p>
</blockquote>
</li>
<li>
<p><strong>访问流程</strong></p>
<ol>
<li>用户给出要访问的块号 i，操作系统找到该文件对应的 FCB</li>
<li>从 FCB 中取得索引表存放位置，<strong>将索引表从外存调入内存</strong></li>
<li>查找索引表中第 i 项对应的物理块号即为文件外存存放地址</li>
</ol>
</li>
<li>
<p><strong>支持随机访问</strong>，<strong>易实现文件拓展</strong>（只需新分配一个空闲块，添加一个索引表项）</p>
</li>
<li>
<p><strong>索引表占用一定存储空间</strong></p>
</li>
</ul>
<blockquote>
<p>若每个磁盘块 1 KB，一个索引项 4 B，则一个磁盘块最多只能存放 256 个索引项，因此当文件过大时，一个索引块无法完整表示</p>
</blockquote>
<h4 id="链接方案"><a class="markdownIt-Anchor" href="#链接方案"></a> 链接方案</h4>
<ul>
<li><strong>多个索引块链接</strong></li>
<li>FCB 只需记录<strong>首个索引块</strong>的存放位置</li>
</ul>
<blockquote>
<p>若设备配置如上述，一文件大小为 256*256 KB = 64 MB，则文件共 256<sup>2</sup> 块，因此需要 256 个索引表链接起来存储</p>
<p>若访问第 256 块，则需遍历前 255 块</p>
</blockquote>
<h4 id="多层索引"><a class="markdownIt-Anchor" href="#多层索引"></a> 多层索引</h4>
<ul>
<li>原理类似于多级页表，<strong>第一层索引块指向第二层索引块</strong>，同理类推，<strong>最后一层指向文件</strong></li>
<li><strong>各层索引表大小不得超过一个磁盘块</strong></li>
<li><strong>根据逻辑块号可算其索引表项位置</strong></li>
<li>采用 <strong>k</strong> 层索引，且顶层索引<strong>未调入内存</strong>，则单次访问需 <strong>k+1</strong> 次读磁盘操作</li>
</ul>
<blockquote>
<p>同上述，采用两层索引，则最大长度为 （一级索引表项数）256 * （二级索引表项数）256 * （单文件大小）1 KB = 64 MB</p>
<p><strong>若访问 1026 号逻辑块，1026/256=4，1026%256=2，</strong></p>
<p>则其记录位于 一级索引表第 4 项对应的二级索引表的第 2 项</p>
<p>共需 3 次磁盘IO</p>
</blockquote>
<h4 id="混合索引"><a class="markdownIt-Anchor" href="#混合索引"></a> 混合索引</h4>
<ul>
<li>
<p><strong>多种索引分配方式的结合</strong>，顶级索引表包含<strong>直接地址索引</strong>（直接指向<strong>数据块</strong>），<strong>一级间接索引</strong>（指向<strong>单层</strong>索引表），<strong>二级间接索引</strong>（指向<strong>两层</strong>索引表）</p>
<table>
<thead>
<tr>
<th style="text-align:center">顶级索引</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">直接地址</td>
</tr>
<tr>
<td style="text-align:center">······（多个直接地址）</td>
</tr>
<tr>
<td style="text-align:center">一级间接</td>
</tr>
<tr>
<td style="text-align:center">二级间接</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><strong>对小文件只需较少的磁盘操作次数</strong></p>
<blockquote>
<p>若顶级索引表未读入内存，直接地址 8 个，一级间接 1 个，区其余为二级间接，则</p>
<p>访问 0~7 号逻辑块：<strong>两次</strong></p>
<p>访问 8~256 号逻辑块：<strong>三次</strong></p>
<p>访问 else ：<strong>四次</strong></p>
</blockquote>
</li>
</ul>
<h4 id="重点要求"><a class="markdownIt-Anchor" href="#重点要求"></a> 重点要求</h4>
<ul>
<li>能根据<strong>多层索引</strong>、<strong>混合索引</strong>的结构计算文件的<strong>最大长度</strong><br />
（<strong>Key</strong>：各级索引表不超过一个块）</li>
<li>能分析访问某个数据块的<strong>读磁盘次数</strong><br />
(<strong>Key</strong>：每级索引表需一次，读文件需一次，<strong>注意顶级索引表是否在内存</strong>)</li>
</ul>
<h3 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h3>
<table>
<thead>
<tr>
<th style="text-align:center">方式</th>
<th style="text-align:center">思想</th>
<th style="text-align:center">目录项内容</th>
<th style="text-align:center">优点</th>
<th style="text-align:center">缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">顺序分配</td>
<td style="text-align:center">为文件分配<strong>连续</strong>的磁盘块</td>
<td style="text-align:center">起始块号、文件长度</td>
<td style="text-align:center">存取快<br />支持随机访问</td>
<td style="text-align:center">会产生碎片<br />不利于文件拓展</td>
</tr>
<tr>
<td style="text-align:center">隐式链接</td>
<td style="text-align:center">除最后一个盘块，其余<strong>存有指向下一块的指针</strong></td>
<td style="text-align:center">起始块号、结束块号</td>
<td style="text-align:center">解决碎片问题，提高外存利用率<br />易实现文件拓展</td>
<td style="text-align:center">只能顺序访问，不能随机访问</td>
</tr>
<tr>
<td style="text-align:center">显式链接</td>
<td style="text-align:center"><strong>各磁盘建立一张文件分配表</strong>（FAT），显示记录盘块先后关系<br />常驻内存</td>
<td style="text-align:center">起始块号</td>
<td style="text-align:center">同上，且通过查内存中的 FAT 实现随机访问</td>
<td style="text-align:center">FAT 需占用一定的存储空间</td>
</tr>
<tr>
<td style="text-align:center">索引分配</td>
<td style="text-align:center"><strong>各文件建立索引表</strong>，若文件过大，采用链接索引、多层索引、混合索引</td>
<td style="text-align:center">记录顶级索引表所在块号</td>
<td style="text-align:center">支持随机访问<br />易实现文件拓展</td>
<td style="text-align:center">索引表占用一定空间<br />读取索引块需磁盘I/O</td>
</tr>
</tbody>
</table>
<h2 id="文件存储空间管理"><a class="markdownIt-Anchor" href="#文件存储空间管理"></a> 文件存储空间管理</h2>
<h3 id="概念-2"><a class="markdownIt-Anchor" href="#概念-2"></a> 概念</h3>
<ul>
<li><strong>存储空间划分</strong>：将物理磁盘划分为若干<strong>文件卷</strong>（逻辑卷、逻辑盘）</li>
<li><strong>存储空间初始化</strong>：各文件卷划分为目录区和文件区
<ul>
<li>目录区存放 FCB、磁盘存储空间管理信息</li>
<li>文件区用于存放文件数据</li>
</ul>
</li>
<li>大文件系统支持多个物理磁盘合并为一个文件卷</li>
</ul>
<h3 id="空闲表法"><a class="markdownIt-Anchor" href="#空闲表法"></a> 空闲表法</h3>
<ul>
<li>
<p>记录的是<strong>连续的空闲块</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">起始块号</th>
<th style="text-align:center">连续块数</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">2</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">13</td>
<td style="text-align:center">8</td>
</tr>
<tr>
<td style="text-align:center">23</td>
<td style="text-align:center">1</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>为一个文件<strong>分配连续的存储空间</strong>，同样可采用<strong>首次适应</strong>、<strong>最佳适应</strong>、<strong>最坏适应</strong>决定分配哪个区间</p>
</li>
<li>
<p>回收磁盘块需分情况讨论<strong>合并问题</strong></p>
<ol>
<li>回收区前后无空闲块</li>
<li>回收区前后均空闲块</li>
<li>回收区前是空闲块</li>
<li>回收区后是空闲块</li>
</ol>
</li>
</ul>
<h3 id="空闲盘块链"><a class="markdownIt-Anchor" href="#空闲盘块链"></a> 空闲盘块链</h3>
<ul>
<li>
<p>操作系统记录<strong>链头</strong>和<strong>链尾指针</strong>，<strong>空闲盘块中存放指向下一空闲块的指针</strong></p>
<p><img src="https://i.loli.net/2020/07/02/yHqQwhvgSNJl1YL.png" alt="image-20200524170855129" /></p>
</li>
<li>
<p><strong>如何分配</strong>：若某文件申请 k 个盘块，则<strong>从链头开始</strong>依次摘下 k 个盘块分配，并<strong>修改空闲链的链头指针</strong></p>
</li>
<li>
<p><strong>如何回收</strong>：回收的盘块依次<strong>挂到链尾</strong>，并<strong>修改空闲链的链尾指针</strong></p>
</li>
<li>
<p><strong>适用于离散分配</strong>的物理结构，为文件分配<strong>多个</strong>盘块时需<strong>重复多次操作</strong></p>
</li>
</ul>
<h3 id="空闲盘区链"><a class="markdownIt-Anchor" href="#空闲盘区链"></a> 空闲盘区链</h3>
<ul>
<li>
<p>操作系统<strong>记录链头</strong>、<strong>链尾指针</strong></p>
</li>
<li>
<p><strong>连续的空闲盘块组成一个空闲盘区</strong>，<strong>各区首个盘块</strong>记录盘区<strong>长度</strong>、指向下一盘区的<strong>指针</strong></p>
<p><img src="https://i.loli.net/2020/07/02/3QwKAH7gJ6SxqLr.png" alt="image-20200524172412194" /></p>
</li>
<li>
<p><strong>如何分配</strong></p>
<ul>
<li>若文件申请 k 个盘块，采用适当的分配选择算法，<strong>从链头开始检索</strong>，<strong>按算法规则找到一个符合大小要求的盘区</strong>，分配给文件</li>
<li><strong>若无合适盘区</strong>，<strong>可将不同盘区同时分配给一个文件</strong>，注意分配后修改相应的链指针、盘区大小等数据</li>
</ul>
</li>
<li>
<p><strong>如何回收</strong></p>
<ul>
<li>若空闲区和某个空闲盘区<strong>相邻</strong>，则需将回收区<strong>合并</strong>到空闲盘区中</li>
<li><strong>若没有和任何空闲区相邻</strong>，<strong>则作为单独分区挂到链尾</strong></li>
</ul>
</li>
<li>
<p>离散分配、连续分配<strong>均适用</strong>，<strong>为单文件分配多盘块时效率更高</strong></p>
</li>
</ul>
<h3 id="位示图法"><a class="markdownIt-Anchor" href="#位示图法"></a> 位示图法</h3>
<ul>
<li>
<p><strong>位示图</strong>：<strong>每个二进制位对应一个盘块</strong>，0/1 表示分配状态，也使用（<strong>字号</strong>，<strong>位号</strong>）一一对应</p>
<p><img src="https://i.loli.net/2020/07/02/hdAroG21UcWfkpq.png" alt="image-20200524180845775" /></p>
<table>
<thead>
<tr>
<th style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mrow></mrow><mrow><mi mathvariant="normal">字</mi><mi mathvariant="normal">号</mi></mrow></msub><msup><mtext> </mtext><mrow><mi mathvariant="normal">位</mi><mi mathvariant="normal">号</mi></mrow></msup></mrow><annotation encoding="application/x-tex">_{字号}\ ^{位号}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.513em;vertical-align:-0.15em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.15em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">字</span><span class="mord cjk_fallback mtight">号</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mspace"> </span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.363em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">位</span><span class="mord cjk_fallback mtight">号</span></span></span></span></span></span></span></span></span></span></span></span></th>
<th style="text-align:center">0</th>
<th style="text-align:center">1</th>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
<th style="text-align:center">4</th>
<th style="text-align:center">5</th>
<th style="text-align:center">6</th>
<th style="text-align:center">7</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>0</strong></td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td style="text-align:center"><strong>1</strong></td>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">1</td>
<td style="text-align:center">0</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>要求能自行推出<strong>盘块号与（字号，位号）相互转换的公式</strong><br />
<strong>注意题干条件</strong>：盘块号、字号、位号是从 <strong>0</strong> 开始还是从 <strong>1</strong> 开始</p>
</li>
<li>
<p>设均从 <strong>0</strong> 开始且字长为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>，则<br />
（字号，位号）=<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">（</mi><mi>i</mi><mi mathvariant="normal">，</mi><mi>j</mi><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">（i，j）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathdefault">i</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord cjk_fallback">）</span></span></span></span><strong>对应的盘块号为</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>=</mo><mi>n</mi><mi>i</mi><mo>+</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">b = ni + j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span><br />
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 号盘块对应的<strong>字号</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>=</mo><mi>b</mi><mi mathvariant="normal">/</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">i=b/n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">n</span></span></span></span>，<strong>位号</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi><mo>=</mo><mi>b</mi><mi mathvariant="normal">%</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">j=b\%n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord mathdefault">b</span><span class="mord">%</span><span class="mord mathdefault">n</span></span></span></span></p>
</li>
<li>
<p><strong>如何分配</strong></p>
<ol>
<li>若文件需要 K 个块，顺序扫描位示图，找到 K 个相邻或不相邻的 “0”</li>
<li>根据其字号、位号算出对应的盘块号，将相应盘块分配给文件</li>
<li>将对应位修改为 “1”</li>
</ol>
</li>
<li>
<p><strong>如何回收</strong></p>
<ol>
<li>根据回收的盘块号计算相应的字号、位号</li>
<li>将位示图中相应位置修改为 “0”</li>
</ol>
</li>
<li>
<p>连续分配、离散分配<strong>均适用</strong></p>
</li>
</ul>
<h3 id="成组链接法"><a class="markdownIt-Anchor" href="#成组链接法"></a> 成组链接法</h3>
<ul>
<li>
<p>为适应<strong>大型文件系统</strong>（空闲表或链表可能过长），UNIX 系统采用<strong>成组链接法</strong>管理空闲块</p>
</li>
<li>
<p><strong>文件卷的目录区</strong>设置一个磁盘块为<strong>超级块</strong>，系统启动时读入内存，并<strong>保证</strong>内存与外存中的超级块<strong>数据一致</strong></p>
</li>
<li>
<p><strong>每层首个磁盘块的首条记录项</strong>记录<strong>本层的空闲盘块总数</strong>，后续所有记录项记录<strong>本层</strong>空闲块的<strong>物理块号</strong>，则后续的第一条（总的第二条）对应的磁盘块是<strong>下层的目录</strong><br />
若没有下层空闲块则总的第二条记录值记为 -1</p>
<p><img src="https://i.loli.net/2020/07/02/NC6h9c1MbirAqGF.png" alt="image-20200524190254805" /></p>
</li>
<li>
<p><strong>如何分配</strong><br />
假设需要 100 个空闲块</p>
<ol>
<li>检查超级块当前分组的块数是否足够</li>
<li>100=100，足够则分配，但是由于300号块存放了下一组的信息，<strong>因此复制300号的目录信息到超级块中</strong></li>
<li><strong>目录转移后分配该组给文件</strong>，<strong>新的目录信息作为当前组</strong></li>
<li>上接第二步，不足则查找下一组</li>
</ol>
</li>
<li>
<p><strong>如何回收</strong><br />
假设每个分组最多 100 个空闲块，此时当前组已满，还要再回收 1 块<br />
<strong>需将超级块中的数据复制到新回收的块中，并修改超级块的内容，让新回收的块成为当前组</strong></p>
</li>
</ul>
<h3 id="小结-2"><a class="markdownIt-Anchor" href="#小结-2"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/07/02/LubJlIaci4hOXUK.jpg" alt="文件存储空间管理07小结" /></p>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>OS-14-内存分配方式与算法</title>
    <url>/2020/07/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%8D%81%E5%9B%9B%E6%AC%A1%E8%AF%BE%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E5%8D%95%E4%B8%80%E8%BF%9E%E7%BB%AD%E5%88%86%E9%85%8D">单一连续分配</a></li>
<li><a href="#%E5%9B%BA%E5%AE%9A%E5%88%86%E5%8C%BA%E5%88%86%E9%85%8D">固定分区分配</a></li>
<li><a href="#%E5%8A%A8%E6%80%81%E5%88%86%E5%8C%BA%E5%88%86%E9%85%8D">动态分区分配</a></li>
<li><a href="#%E7%A2%8E%E7%89%87">碎片</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93">小结</a></li>
<li><a href="#%E9%A6%96%E6%AC%A1%E9%80%82%E5%BA%94%E7%AE%97%E6%B3%95">首次适应算法</a></li>
<li><a href="#%E6%9C%80%E4%BD%B3%E9%80%82%E5%BA%94%E7%AE%97%E6%B3%95">最佳适应算法</a></li>
<li><a href="#%E6%9C%80%E5%9D%8F%E9%80%82%E5%BA%94%E7%AE%97%E6%B3%95">最坏适应算法</a></li>
<li><a href="#%E9%82%BB%E8%BF%91%E9%80%82%E5%BA%94%E7%AE%97%E6%B3%95">邻近适应算法</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93-2">小结</a></li>
</ul>
</p>
<h1 id="操作系统第十四次课小结"><a class="markdownIt-Anchor" href="#操作系统第十四次课小结"></a> 操作系统第十四次课小结</h1>
<h2 id="单一连续分配"><a class="markdownIt-Anchor" href="#单一连续分配"></a> 单一连续分配</h2>
<ol>
<li>分区（<strong>两个</strong>）
<ul>
<li><strong>系统区</strong>：通常位于<strong>低地址</strong>，存放操作系统相关数据</li>
<li><strong>用户区</strong>：<strong>高地址</strong>，用户进程相关数据</li>
</ul>
</li>
<li>内存中<strong>只</strong>能有<strong>一道用户程序</strong>，独占用户区，所以常有一部分内存区<strong>未得到利用</strong></li>
<li>优点：实现简单，<strong>无外部碎片</strong>；可采用覆盖技术扩充内存；不一定需要内存保护</li>
<li>缺点：只适用单用户单任务的操作系统；<strong>有内部碎片</strong>；存储利用率极低</li>
</ol>
<h2 id="固定分区分配"><a class="markdownIt-Anchor" href="#固定分区分配"></a> 固定分区分配</h2>
<ol>
<li>
<p>分区（<strong>多个</strong>）</p>
<ul>
<li>
<p>同样有系统区和用户区</p>
</li>
<li>
<p>用户区划分出<strong>若干分区</strong>，<strong>每个分区之只装入一道作业</strong>，同时运行</p>
</li>
<li>
<p>若干分区<strong>大小相等</strong>：不灵活，适用于一台计算机<strong>控制多个相同对象</strong>的场合</p>
<blockquote>
<p>钢铁厂 n 个相同的炼钢炉，</p>
<p>把内存分为 n 个大小相等的区域，</p>
<p>存放 n 个炼钢炉控制程序</p>
</blockquote>
</li>
<li>
<p>若干分区<strong>大小不等</strong>：灵活，满足<strong>不同大小进程</strong>的需求</p>
<blockquote>
<p>根据系统中运行作业大小的规律来划分，</p>
<p>如 划分多个小分区、适量中分区、少量大分区</p>
</blockquote>
</li>
</ul>
</li>
<li>
<p><strong>分区说明表</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">分区号</th>
<th style="text-align:center">大小（MB）</th>
<th style="text-align:center">起始地址（M）</th>
<th style="text-align:center">状态</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">5</td>
<td style="text-align:center">8</td>
<td style="text-align:center">未分配</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">6</td>
<td style="text-align:center">14</td>
<td style="text-align:center">未分配</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">2</td>
<td style="text-align:center">20</td>
<td style="text-align:center">已分配</td>
</tr>
<tr>
<td style="text-align:center">······</td>
<td style="text-align:center">······</td>
<td style="text-align:center">······</td>
<td style="text-align:center">······</td>
</tr>
</tbody>
</table>
<ul>
<li>装入内存时，操作系统选择一块大小合适的分区分配出去，并修改其状态为 “已分配”</li>
</ul>
</li>
<li>
<p>优点：实现简单，<strong>无外部碎片</strong></p>
</li>
<li>
<p>缺点：</p>
<ul>
<li>程序过大，现有分区无法满足，需要使用<strong>覆盖技术</strong>，但会<strong>降低性能</strong></li>
<li><strong>产生内部碎片</strong>，内存里利用率低</li>
</ul>
</li>
</ol>
<h2 id="动态分区分配"><a class="markdownIt-Anchor" href="#动态分区分配"></a> 动态分区分配</h2>
<ol>
<li>
<p>分区（<strong>初始仅系统区</strong>）</p>
<ul>
<li>用户区<strong>不会预先</strong>划分内存分区</li>
<li>根据装入进程的大小<strong>动态建立</strong>分区，分区大小<strong>正好满足</strong>进程需要</li>
<li>分区的大小和数目都<strong>是按需变化的</strong></li>
</ul>
</li>
<li>
<p>数据结构</p>
<ul>
<li>
<p><strong>空闲分区表</strong>：每个空闲分区对应一个表项，内容包含<strong>区号、分区大小、起始地址</strong>等；各表项顺序不一定按地址递增，<strong>视分配算法而定</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">区号</th>
<th style="text-align:center">分区大小</th>
<th style="text-align:center">起始地址</th>
<th style="text-align:center">···</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">20MB</td>
<td style="text-align:center">8M</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">10MB</td>
<td style="text-align:center">30M</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">3MB</td>
<td style="text-align:center">60M</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
</li>
<li>
<p><strong>空闲分区链</strong>：<strong>双向链表结构</strong>，每个<strong>分区</strong>的起始和末尾分别设置<strong>前向后向指针</strong>，起始部分还可记录<strong>分区大小等信息</strong></p>
</li>
</ul>
</li>
<li>
<p>分配规则</p>
<ul>
<li>
<p>新作业装入时，若有多个分隔开的分区，选择哪一块作为空闲分区被装入，需要按照一定的<strong>动态分区分配算法</strong></p>
<blockquote>
<p>优先使用大分区还是小分区，或者使地址低位的还是高位的？</p>
</blockquote>
</li>
</ul>
</li>
<li>
<p>分区的分配和回收</p>
<blockquote>
<p>假设先第 2 块分区装入一块大小为 m 的进程空间，<br />
3号分区收回一块大小为 n 的进程空间，<br />
如何计算和记录</p>
</blockquote>
<ul>
<li>
<p><strong>使用空闲分区表</strong></p>
<p>| （装入前）分区号 | 分区大小 | 起始地址 |<br />
| :--------------: | :------: | :------: |<br />
|        1         |    20    |    8     |<br />
|        2         |    10    |    32    |<br />
|        3         |    4     |    60    |</p>
<p>| （装入后）分区号 | 分区大小 | 起始地址 |<br />
| :--------------: | :------: | :------: |<br />
|        1         |    20    |    8     |<br />
|        2         |  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>10</mn><mo>−</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">10-m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>  |  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>32</mn><mo>+</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">32+m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>  |<br />
|        3         |  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>4</mn><mo>+</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">4+n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>   |  <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>60</mn><mo>+</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">60+n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>  |</p>
<p>若恰好<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">m=10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span>，则能装满分区，可直接删去二号分区这一表项</p>
<p>若收回的空间是一整块分区，则直接增加一个表项，起始地址是进程分区的归还地址，大小是归还大小，<strong>而后考虑是否相邻合并</strong></p>
</li>
<li>
<p><strong>使用空闲分区链</strong></p>
</li>
<li>
<p>可直接在链表节点的<strong>分区大小变量</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>+</mo><mi>m</mi><mi mathvariant="normal">/</mi><mo>−</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">+m/-n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">+</span><span class="mord mathdefault">m</span><span class="mord">/</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>，更新分区大小</p>
<ul>
<li>同理，若装入空间正好填满空闲分区，<strong>直接移除</strong>该节点即可</li>
</ul>
</li>
<li>
<p>若收回的空间是一整块分区，则直接增加一个结点，大小是归还大小，<strong>而后考虑是否相邻合并</strong></p>
<ul>
<li>链表<strong>节点顺序</strong>即反映分区排列顺序</li>
</ul>
</li>
</ul>
<blockquote>
<p>回收时如何<strong>判断是否相邻合并</strong></p>
</blockquote>
<ul>
<li>
<p>回收时除了<strong>更新</strong>分区的大小记录<strong>变量</strong>，还要考虑新分区回归是否导致与其它<strong>空闲分区相邻</strong></p>
</li>
<li>
<p><strong>判断方式</strong></p>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> 起始地址-归还分区大小 == 上个分区大小+上个分区起始地址  <span class="comment"># 情况一：向上合并</span></span><br></pre></td></tr></table></figure>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> 归还起始地址+归还分区大小 == 下个分区起始地址  <span class="comment"># 情况二：整个分区归还 向下合并</span></span><br></pre></td></tr></table></figure>
  <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> 情况一 &amp;&amp; 情况二  <span class="comment"># 情况三：上下合并</span></span><br><span class="line"><span class="keyword">if</span> !情况三  <span class="comment"># 情况四： 不合并</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<h2 id="碎片"><a class="markdownIt-Anchor" href="#碎片"></a> 碎片</h2>
<ol>
<li><strong>内部碎片</strong>：<strong>已分配</strong>给进程，但部分<strong>没用上</strong></li>
<li><strong>外部碎片</strong>：内存中某些空闲分区由于<strong>太小而无法被分配</strong>出去</li>
<li><strong>紧凑技术</strong>：整合若干分离的<strong>非空闲</strong>分区为<strong>连续排列</strong>，使外部碎片组合成新的整体分区，需要<strong>动态重定位</strong></li>
</ol>
<h2 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h2>
<p><img src="https://i.loli.net/2020/04/24/yHAer1SunDFPJId.jpg" alt="" /></p>
<h2 id="首次适应算法"><a class="markdownIt-Anchor" href="#首次适应算法"></a> 首次适应算法</h2>
<ul>
<li>从<strong>起始地址</strong>（<strong>低地址</strong>）开始查找，使用<strong>第一个</strong>能满足需求的空闲分区</li>
<li>空闲分区以<strong>地址递增</strong>的次序排列，每次分配时<strong>顺序</strong>查找空闲分区表（链），适配<strong>第一个</strong>满足需求的分区，<strong>不论是否最合适</strong>，并扣减分区，注意<strong>满则删除</strong>表项（节点）</li>
</ul>
<h2 id="最佳适应算法"><a class="markdownIt-Anchor" href="#最佳适应算法"></a> 最佳适应算法</h2>
<ul>
<li>通过连续分配方式获得的进程空间必是<strong>连续</strong>，为<strong>保证大进程的空间需求</strong>，<strong>优先使用较小分区</strong></li>
<li>空闲分区按<strong>容量递增</strong>顺序排列，每次分配时<strong>顺序</strong>查找空闲分区表（链），适配<strong>第一个</strong>满足需求的分区</li>
<li>每次分配完要<strong>重排</strong>，防止扣减后的分区不满足递增顺序</li>
<li><strong>缺点</strong>：优先小分区若<strong>不能恰好分配满</strong>，会留下更多<strong>极小</strong>分区<strong>难以利用</strong>，会产生<strong>很多外部碎片</strong>，</li>
<li>适用于<strong>大作业较多</strong>的场景</li>
</ul>
<h2 id="最坏适应算法"><a class="markdownIt-Anchor" href="#最坏适应算法"></a> 最坏适应算法</h2>
<ul>
<li>
<p>为解决上步算法留下过多外部碎片的问题，<strong>优先分配大分区</strong></p>
</li>
<li>
<p>空闲分区按<strong>容量递减</strong>顺序排列，每次分配时<strong>只需比较首个</strong>分区</p>
<p>首项肯定最大，若不满足，则后续更不满足；若满足直接划分相应空间进行分配</p>
</li>
<li>
<p>每次分配完检查<strong>首项是否大于第二项</strong>，是则不做处理，<strong>否则重排</strong></p>
</li>
<li>
<p><strong>缺点</strong>：<strong>大进程不友好</strong>，优先分配大分区使得进程越大越不容易满足</p>
</li>
<li>
<p>适用于<strong>小作业较多</strong>的环境</p>
</li>
</ul>
<h2 id="邻近适应算法"><a class="markdownIt-Anchor" href="#邻近适应算法"></a> 邻近适应算法</h2>
<ul>
<li>首次适应算法每次都从头开始查找分配，导致<strong>前半部过小分区较多</strong>，多次查找<strong>增加开销</strong>，因此考虑<strong>每次查找从上次结束位置开始</strong></li>
<li>空闲分区以<strong>地址递增</strong>的顺序排列（排成<strong>循环链表</strong>），每次从<strong>上次结束位置</strong>开始<strong>查找第一个</strong>能满足需求的空闲分区</li>
<li><strong>缺点</strong>：<strong>高低地址等概率被分配</strong>，可能导致无大分区可用</li>
</ul>
<h2 id="小结-2"><a class="markdownIt-Anchor" href="#小结-2"></a> 小结</h2>
<table>
<thead>
<tr>
<th style="text-align:center">算法</th>
<th style="text-align:center">思想</th>
<th style="text-align:center">分区排列</th>
<th style="text-align:center">优点</th>
<th style="text-align:center">缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">首次适应</td>
<td style="text-align:center"><strong>从头到尾首个适配</strong></td>
<td style="text-align:center">地址递增</td>
<td style="text-align:center">性能最好，<br /><strong>算法开销小</strong>，<br />无需重排</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">最佳适应</td>
<td style="text-align:center"><strong>优先分配小分区</strong>，<br />保留大分区</td>
<td style="text-align:center">容量递增</td>
<td style="text-align:center"><strong>对大进程友好</strong></td>
<td style="text-align:center">产生很多<strong>外部碎片</strong>，<br /><strong>算法开销大</strong>，<br />需要重排</td>
</tr>
<tr>
<td style="text-align:center">最坏适应</td>
<td style="text-align:center"><strong>优先分配大分区</strong>，<br />防止过多小碎片</td>
<td style="text-align:center">容量递减</td>
<td style="text-align:center"><strong>减少过小的外部碎片</strong></td>
<td style="text-align:center"><strong>大进程不友好</strong>，<br /><strong>算法开销大</strong>，<br />需重排</td>
</tr>
<tr>
<td style="text-align:center">邻近适应</td>
<td style="text-align:center"><strong>每次从上次结束位置开始查找首个适配</strong></td>
<td style="text-align:center">地址递增<br /><strong>循环链表</strong></td>
<td style="text-align:center">高低地址等概率分配，<br /><strong>算法开销小</strong></td>
<td style="text-align:center">高地址的大分区也被用完，<strong>大进程不友好</strong></td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>OS-18-文件概述</title>
    <url>/2020/07/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%8D%81%E5%85%AB%E6%AC%A1%E8%AF%BE%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E6%96%87%E4%BB%B6">文件</a>
<ul>
<li><a href="#%E5%B1%9E%E6%80%A7">属性</a></li>
<li><a href="#%E7%BB%84%E7%BB%87">组织</a></li>
<li><a href="#%E5%8A%9F%E8%83%BD">功能</a></li>
<li><a href="#%E5%AD%98%E6%94%BE">存放</a></li>
<li><a href="#%E5%85%B6%E5%AE%83%E7%AE%A1%E7%90%86%E5%8A%9F%E8%83%BD">其它管理功能</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93">小结</a></li>
</ul>
</li>
<li><a href="#%E6%9C%89%E7%BB%93%E6%9E%84%E6%96%87%E4%BB%B6">有结构文件</a>
<ul>
<li><a href="#%E6%A6%82%E5%BF%B5">概念</a></li>
<li><a href="#%E9%A1%BA%E5%BA%8F%E6%96%87%E4%BB%B6">顺序文件</a></li>
<li><a href="#%E7%B4%A2%E5%BC%95%E6%96%87%E4%BB%B6">索引文件</a></li>
<li><a href="#%E7%B4%A2%E5%BC%95%E9%A1%BA%E5%BA%8F%E6%96%87%E4%BB%B6">索引顺序文件</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93-2">小结</a></li>
</ul>
</li>
<li><a href="#%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95">文件目录</a>
<ul>
<li><a href="#%E6%A6%82%E5%BF%B5-2">概念</a></li>
<li><a href="#%E5%8D%95%E7%BA%A7%E7%9B%AE%E5%BD%95">单级目录</a></li>
<li><a href="#%E4%B8%A4%E7%BA%A7%E7%9B%AE%E5%BD%95">两级目录</a></li>
<li><a href="#%E5%A4%9A%E7%BA%A7%E7%9B%AE%E5%BD%95">多级目录</a></li>
<li><a href="#%E6%97%A0%E7%8E%AF%E5%9B%BE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84">无环图目录结构</a></li>
<li><a href="#%E7%B4%A2%E5%BC%95%E7%BB%93%E7%82%B9">索引结点</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93-3">小结</a></li>
</ul>
</li>
</ul>
</p>
<h1 id="操作系统第十八次课小结"><a class="markdownIt-Anchor" href="#操作系统第十八次课小结"></a> 操作系统第十八次课小结</h1>
<h2 id="文件"><a class="markdownIt-Anchor" href="#文件"></a> 文件</h2>
<h3 id="属性"><a class="markdownIt-Anchor" href="#属性"></a> 属性</h3>
<ul>
<li><strong>文件名</strong>：方便用户确认文件，<strong>同一目录下不允许有重名文件</strong></li>
<li><strong>标识符</strong>：一个系统内的个文件标识符<strong>唯一</strong>，对用户无可读性，用于<strong>操作系统内部区分</strong></li>
<li>类型：指明文件类型</li>
<li><strong>位置</strong>：<strong>文件存放路径</strong>（让用户使用）、<strong>在外存中的地址</strong>（操作系统使用，<strong>对用户不可见</strong>）</li>
<li>大小：指明文件的大小</li>
<li><strong>保护信息</strong>：对文件进行保护的访问控制信息</li>
<li>创建时间、上次访问时间、文件所有者信息</li>
</ul>
<h3 id="组织"><a class="markdownIt-Anchor" href="#组织"></a> 组织</h3>
<ul>
<li><strong>无结构文件</strong>：由二进制或字符流组成，又称<strong>流式文件</strong></li>
<li><strong>有结构文件</strong>：由一组相似的记录组成，又称<strong>记录文件</strong>
<ul>
<li><strong>数据项</strong>是文件系统中最基本的<strong>数据单位</strong></li>
<li><strong>记录</strong>是一组相关数据项的<strong>集合</strong></li>
</ul>
</li>
<li><strong>目录</strong>：所谓的文件夹，一种特殊的<strong>有结构文件</strong>（由记录组成）</li>
</ul>
<h3 id="功能"><a class="markdownIt-Anchor" href="#功能"></a> 功能</h3>
<ul>
<li><strong>操作系统向上提供的几个最基本的功能</strong>包括
<ul>
<li>创建文件（create系统调用）</li>
<li>删除文件（delete系统调用）</li>
<li>读文件（read系统调用）</li>
<li>写文件（write系统调用）</li>
<li>打开文件（open系统调用）</li>
<li>关闭文件（close系统调用）</li>
</ul>
</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>o</mi><mi>p</mi><mi>e</mi><mi>n</mi><mo>→</mo><mi>r</mi><mi>e</mi><mi>a</mi><mi>d</mi><mi mathvariant="normal">/</mi><mi>w</mi><mi>r</mi><mi>i</mi><mi>t</mi><mi>e</mi><mo>→</mo><mi>c</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">open \rightarrow read/write \rightarrow close</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span></span></span></span> 顺序固定</li>
</ul>
<h3 id="存放"><a class="markdownIt-Anchor" href="#存放"></a> 存放</h3>
<ul>
<li>外存由若干个存储单元组成，每个存储单元对应一个物理地址</li>
<li>操作系统分配存储空间、外存数据读入内存都<strong>以块为单位</strong>，即使一个文件仅 10 B，依然需要占用 1 KB 的磁盘块</li>
<li>操作系统需要将逻辑地址转换为（<strong>物理块号</strong>，<strong>块内地址</strong>）的形式，<strong>块内地址的位数取决于磁盘块的大小</strong></li>
</ul>
<h3 id="其它管理功能"><a class="markdownIt-Anchor" href="#其它管理功能"></a> 其它管理功能</h3>
<ul>
<li><strong>文件共享</strong>：使多个用户可以共享同一个文件</li>
<li><strong>文件保护</strong>：如何保证不同用户对文件不同的操作权限</li>
</ul>
<h3 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/07/02/DfAg3ab5ns487Zd.jpg" alt="文件管理06小结" /></p>
<h2 id="有结构文件"><a class="markdownIt-Anchor" href="#有结构文件"></a> 有结构文件</h2>
<h3 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h3>
<ul>
<li>
<p><strong>逻辑结构</strong>：在用户看来，文件内部的数据应是如何组织起来的<br />
<strong>物理结构</strong>：在操作系统看来，文件的数据如何存放到外存中的</p>
<blockquote>
<p>逻辑结构线性表可以用不同的物理结构实现，如顺序表，各元素在逻辑和物理上都<strong>相邻</strong>；又如链表，各元素逻辑相邻而物理上<strong>不相邻</strong>。</p>
<p>因此顺序表可以实现<strong>随机访问</strong>，链表则无法实现</p>
</blockquote>
</li>
<li>
<p><strong>结果决定具体实现</strong>，文件操作的具体实现与文件的逻辑结构、物理结构都有关</p>
</li>
</ul>
<h3 id="顺序文件"><a class="markdownIt-Anchor" href="#顺序文件"></a> 顺序文件</h3>
<ul>
<li>文件中的记录<strong>逻辑</strong>上按顺序排列，记录可以是<strong>定长</strong>的或<strong>可变长</strong>的，各记录物理上可以<strong>顺序存储</strong>或<strong>链式存储</strong></li>
<li><strong>顺序存储</strong>：各记录物理上也相邻（类似于顺序表）<br />
<strong>链式存储</strong>：各记录物理上<strong>不一定</strong>相邻 （类似于链表）</li>
<li><strong>串结构</strong>：记录之间的顺序<strong>与关键字无关</strong>（通常按存入时间排序）<br />
<strong>顺序结构</strong>：记录之间的顺序<strong>按关键字顺序排列</strong></li>
</ul>
<p><img src="https://i.loli.net/2020/07/02/Vl7qfLAHYiNFS81.png" alt="image-20200515211644973" /></p>
<ul>
<li><strong>链式存储</strong>及<strong>顺序存储可变长记录</strong>都无法实现随机存取，每次只能从头</li>
<li><strong>顺序储存定长记录</strong>
<ul>
<li><strong>可实现随机存取</strong>，记录长度为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span>，则第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 个记录的位置为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>∗</mo><mi>L</mi></mrow><annotation encoding="application/x-tex">i*L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span></li>
<li>若采用<strong>串结构</strong>，则无法快速找到某关键字对应的记录</li>
<li>若采用<strong>顺序结构</strong>，可以快速找到某关键字对应记录（如折半查找）</li>
</ul>
</li>
<li>顺序文件一般是默认<strong>物理上顺序存储的顺序文件</strong>（类似数组），其特点是<strong>增删慢检索快</strong>（但串结构相对快一些）</li>
</ul>
<h3 id="索引文件"><a class="markdownIt-Anchor" href="#索引文件"></a> 索引文件</h3>
<ul>
<li>
<p><strong>索引表</strong></p>
<ul>
<li><strong>定长记录的顺序文件</strong>，可快速存取</li>
<li>将关键字作为索引号并按顺序排列，则还可支持按关键字<strong>折半查找</strong></li>
<li>增删记录时需要<strong>对索引表</strong>和逻辑文件进行<strong>修改</strong></li>
<li>检索速度较快，<strong>适用于对信息处理及时性要求高的场合</strong></li>
<li>可以用<strong>不同的数据项</strong>建立<strong>多个索引表</strong></li>
</ul>
<p><img src="https://i.loli.net/2020/07/02/LaA5xr23CVbBsTz.png" alt="image-20200515214941835" /></p>
</li>
<li>
<p>弊端：当记录所占空间小于索引表表项时，<strong>一对一的映射导致空间利用率降低</strong></p>
</li>
</ul>
<h3 id="索引顺序文件"><a class="markdownIt-Anchor" href="#索引顺序文件"></a> 索引顺序文件</h3>
<ul>
<li>
<p><strong>一组数据</strong>对应一个索引表项</p>
<p><img src="https://i.loli.net/2020/07/02/lSfrthocdkWOTNP.png" alt="image-20200515220246264" /></p>
</li>
<li>
<p><strong>效率分析</strong></p>
<blockquote>
<p>一个顺序文件有 10000 个记录，根据关键字检索文件，只能从头开始挨个查找，<strong>平均需查找 5000 次</strong></p>
<p>采用<strong>索引顺序文件</strong>结构，把 10000 分为 100 组，则每组 100 个记录，则<strong>先查找索引表</strong>（平均 <strong>50</strong> 次），后查<strong>组内记录</strong>（平均 <strong>50</strong> 次），总次数减少为 50+50=<strong>100</strong> 次</p>
</blockquote>
</li>
<li>
<p><strong>多级索引表</strong></p>
<ul>
<li>当记录过多时，<strong>建立多级索引表</strong>，以提高检索效率</li>
</ul>
<blockquote>
<p>对一个含 10<sup>6</sup> 个记录的文件，先建立低级索引表，每 100 个记录为一组，共 10<sup>4</sup> 个组（即低级索引表有 10<sup>4</sup> 个项），<strong>再将低级索引表分组</strong>，每组 100 个，<strong>为其建立顶级索引表</strong>，故顶级索引表共 100 个项</p>
<p>则 检索一个记录的平均查找次数为 50 + 50 + 50 = <strong>150</strong></p>
</blockquote>
<p><img src="https://i.loli.net/2020/07/02/UhDVNTyzqJZ1F5p.jpg" alt="image-20200515221859365" /></p>
</li>
</ul>
<h3 id="小结-2"><a class="markdownIt-Anchor" href="#小结-2"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/07/02/CL9cqvaJtXnVWBu.jpg" alt="文件管理11小结" /></p>
<h2 id="文件目录"><a class="markdownIt-Anchor" href="#文件目录"></a> 文件目录</h2>
<h3 id="概念-2"><a class="markdownIt-Anchor" href="#概念-2"></a> 概念</h3>
<ul>
<li>
<p>目录本身就是一种<strong>有结构文件</strong>，由若干条记录组成，每条记录对应一个放在该目录下的文件</p>
</li>
<li>
<p><strong>FCB</strong>（文件控制块）：<strong>文件目录项</strong>，包含了文件的<strong>基本信息</strong>（文件名、物理地址、逻辑结构等），<strong>存取控制信息</strong>（读写权限、禁止访问的用户名单等），<strong>使用信息</strong>（文件的建立、修改时间）<br />
<strong>最重要、最基本</strong>的还是<strong>文件名</strong>、<strong>文件存放的物理地址</strong></p>
</li>
<li>
<p>FCB 实现了<strong>文件名和文件之间的映射</strong>，使用户可以按名存取</p>
<table>
<thead>
<tr>
<th style="text-align:center">文件名</th>
<th style="text-align:center">类型</th>
<th style="text-align:center">存取权限</th>
<th style="text-align:center">······</th>
<th style="text-align:center">物理地址</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">2015-08</td>
<td style="text-align:center">目录</td>
<td style="text-align:center">读/写</td>
<td style="text-align:center">···</td>
<td style="text-align:center">外存 25 号块</td>
</tr>
<tr>
<td style="text-align:center">test.jpg</td>
<td style="text-align:center">JPG图片</td>
<td style="text-align:center">读/写</td>
<td style="text-align:center">···</td>
<td style="text-align:center">外存 123 号块</td>
</tr>
<tr>
<td style="text-align:center">···</td>
<td style="text-align:center">···</td>
<td style="text-align:center">···</td>
<td style="text-align:center">···</td>
<td style="text-align:center">···</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>目录操作</p>
<ul>
<li><strong>搜索</strong>：当用户要使用文件时，系统根据文件名搜索目录，找到对应目录项</li>
<li><strong>创建文件</strong>：创建一个新文件时，需在其所属目录中新增一个目录项</li>
<li><strong>删除文件</strong>：删除一个文件时，需在其所属目录中删除相应的目录项</li>
<li><strong>显示目录</strong>：用户可以请求显示目录的内容，如该目录下所有文件及其属性</li>
<li><strong>修改目录</strong>：文件属性被修改（如文件重命名），需更新相应目录项</li>
</ul>
</li>
</ul>
<h3 id="单级目录"><a class="markdownIt-Anchor" href="#单级目录"></a> 单级目录</h3>
<ul>
<li><strong>整个系统中只有一张目录表</strong>，每个文件占一个目录项</li>
<li>实现了<strong>按名存取</strong>，但<strong>不允许文件重名</strong>，<strong>不适用</strong>于多用户操作系统</li>
</ul>
<h3 id="两级目录"><a class="markdownIt-Anchor" href="#两级目录"></a> 两级目录</h3>
<ul>
<li><strong>主文件目录</strong>：记录用户名及相应用户文件目录的存放位置<br />
<strong>用户文件目录</strong>：由该用户的文件 FCB 组成</li>
<li><strong>允许不同用户的文件重名</strong>，也可在目录上<strong>实现访问限制</strong>（检查此时登陆的用户名是否匹配）<br />
依然<strong>缺乏灵活性</strong>，<strong>不能对文件进行分类</strong></li>
</ul>
<h3 id="多级目录"><a class="markdownIt-Anchor" href="#多级目录"></a> 多级目录</h3>
<ul>
<li>又称<strong>树形目录结构</strong>，从<strong>根目录</strong>出发的路径称为<strong>绝对路径</strong>，此外还有<strong>当前目录</strong>、<strong>相对路径</strong>的概念</li>
<li>以绝对路径为例，系统<strong>从外存读入根目录的目录表</strong>；找到下级目标目录，<strong>从外存读入相应目录表</strong>，重复该步骤直到找到最终文件或目录；此过程<strong>每次读入目录表或文件都需要进行一次磁盘I/O操作</strong></li>
<li><strong>方便文件进行分类</strong>，层次结构清晰，有效进行<strong>文件的管理和保护</strong><br />
但<strong>不便于实现文件的共享</strong></li>
</ul>
<h3 id="无环图目录结构"><a class="markdownIt-Anchor" href="#无环图目录结构"></a> 无环图目录结构</h3>
<ul>
<li>在树形目录结构基础上，<strong>增加指向同一节点的有向边</strong>，是整个目录称为一个<strong>有向无环图</strong>，便于<strong>实现用户间文件共享</strong></li>
<li><strong>可以用不同的文件名指向同一文件</strong>，<strong>甚至指向同一目录</strong>（共享目录下所有内容）</li>
<li><strong>为每个共享结点设置一个共享计数器</strong>，记录此时多少个链接在共享该结点<br />
用户提出删除请求时，<strong>仅删除该用户的 FCB</strong>，<strong>而不删除原共享结点</strong><br />
<strong>只有共享计数器减为0时才删除结点</strong></li>
<li>对共享文件的修改，<strong>在其它用户上都能读取到数据变化</strong></li>
</ul>
<h3 id="索引结点"><a class="markdownIt-Anchor" href="#索引结点"></a> 索引结点</h3>
<ul>
<li>
<p><strong>对 FCB 的改进</strong>，<strong>仅保留文件名</strong>，其它目录项信息归为索引结点，由<strong>索引结点指针</strong>指向</p>
</li>
<li>
<p><strong>减少目录占用空间</strong>，以减少磁盘块I/O操作次数，提高文件检索效率</p>
<blockquote>
<p>假设一个 FCB 是 64 B，磁盘块大小为 1 KB，</p>
<p>则每个磁盘仅能存放 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mn>1</mn><mtext> </mtext><mi>K</mi><mi>B</mi></mrow><mrow><mn>64</mn><mtext> </mtext><mi>B</mi></mrow></mfrac><mo>=</mo><mn>16</mn></mrow><annotation encoding="application/x-tex">\frac{1\ KB}{64\ B}= 16</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mord mtight">4</span><span class="mspace mtight"><span class="mtight"> </span></span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mspace mtight"><span class="mtight"> </span></span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span></span></span></span> 个 FCB。</p>
<p>若有一个文件目录共 640 个目录项，则需占用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>640</mn><mn>16</mn></mfrac><mo>=</mo><mn>40</mn></mrow><annotation encoding="application/x-tex">\frac{640}{16}=40</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mord mtight">4</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">0</span></span></span></span> 个盘块，因此按文件名需平均查询 <strong>320</strong> 个目录项，启动磁盘块I/O操作</p>
<p><strong>20</strong> 次</p>
<p>若使用<strong>索引结点机制</strong>，文件名可能仅占 14 B，索引节点指针占 2 B，则每个盘块可存放 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mn>1</mn><mtext> </mtext><mi>K</mi><mi>B</mi></mrow><mrow><mn>14</mn><mtext> </mtext><mi>B</mi><mo>+</mo><mn>2</mn><mtext> </mtext><mi>B</mi></mrow></mfrac><mo>=</mo><mn>64</mn></mrow><annotation encoding="application/x-tex">\frac{1\ KB}{14\ B+2\ B}=64</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.275662em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">4</span><span class="mspace mtight"><span class="mtight"> </span></span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mspace mtight"><span class="mtight"> </span></span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mspace mtight"><span class="mtight"> </span></span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">4</span></span></span></span> 个目录项，共占用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>640</mn><mn>64</mn></mfrac><mo>=</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">\frac{640}{64}=10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mord mtight">4</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span> 个磁盘块。那么按文件名检索平均需查询 <strong>320</strong> 个目录项，但平均只需 <strong>5</strong> 次磁盘块I/O操作</p>
</blockquote>
</li>
<li>
<p><img src="https://i.loli.net/2020/07/02/eKz1Pphgnwfao9I.png" alt="image-20200516002510211" /></p>
</li>
<li>
<p>找到文件名对应目录项才需要将索引结点调入内存，结点中记录了文件的各种信息，包括文件在外存的存放位置，进而可找到对应文件</p>
</li>
<li>
<p><strong>存放在外存</strong>中的索引结点称为<strong>磁盘索引结点</strong>，<strong>调入内存</strong>后称为<strong>内存索引结点</strong>，相比之下<strong>后者需增加一些信息</strong>（如文件是否被修改，此时几个进程在访问等）</p>
</li>
</ul>
<h3 id="小结-3"><a class="markdownIt-Anchor" href="#小结-3"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/07/02/ShE5INb4zOnDKVY.png" alt="文件管理20小结" /></p>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>OS-10-PV操作典型例题</title>
    <url>/2020/07/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%8D%81%E6%AC%A1%E8%AF%BE%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<h1 id="操作系统第十次课小结"><a class="markdownIt-Anchor" href="#操作系统第十次课小结"></a> 操作系统第十次课小结</h1>
<hr />
<h2 id="生产者-消费者问题"><a class="markdownIt-Anchor" href="#生产者-消费者问题"></a> 生产者-消费者问题</h2>
<h3 id="特征"><a class="markdownIt-Anchor" href="#特征"></a> 特征</h3>
<ol>
<li>一组生产者每次生产一个产品放入缓冲区，一组消费者每次从缓冲区取出一个产品</li>
<li>生产者消费者<strong>共享一个初始为空、大小为N的缓冲区</strong></li>
<li><strong>同步关系</strong>：只有没满才能放入，只有没空才能取出；满时生产者等待取走消费，空时消费者等待生产放入</li>
<li><strong>互斥访问</strong>：各进程必须互斥访问<strong>临界资源</strong>缓冲区###</li>
</ol>
<h3 id="分析步骤"><a class="markdownIt-Anchor" href="#分析步骤"></a> 分析步骤</h3>
<ol>
<li>关系分析，找出线程，明确同步互斥</li>
<li>确定P、V操作顺序</li>
<li>设置信号量，根据条件设初值</li>
<li>互斥先P后V，mutex为1；同步先V后P，初值依题意</li>
</ol>
<h3 id="图示"><a class="markdownIt-Anchor" href="#图示"></a> 图示</h3>
<p><img src="https://i.loli.net/2020/04/04/zWv16iwCBEORcyu.jpg" alt="" /></p>
<h3 id="伪代码实现"><a class="markdownIt-Anchor" href="#伪代码实现"></a> 伪代码实现</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置信号量</span></span><br><span class="line">semaphore mutex = <span class="number">1</span>;  <span class="comment">// 实现互斥</span></span><br><span class="line">semaphore empty = N;  <span class="comment">// 实现同步 空缓冲区数量</span></span><br><span class="line">semaphore full = <span class="number">0</span>;  <span class="comment">// 实现同步 非空缓冲区数量</span></span><br><span class="line"><span class="comment">// 空缓冲区为0 生产者不再生产</span></span><br><span class="line"><span class="comment">// 非空缓冲区为0 消费者不再消费</span></span><br><span class="line"><span class="comment">// 重点在于 把缓冲区区分为 空和非空 两个概念</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">producer() &#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 生产一个产品</span></span><br><span class="line">        P(empty);  <span class="comment">// 消耗一个空闲缓冲区  ······· ①</span></span><br><span class="line">        P(mutex);  <span class="comment">// 互斥访问临界区  ······ ②</span></span><br><span class="line">        <span class="comment">// 将产品放入临界区</span></span><br><span class="line">        V(mutex);  <span class="comment">// 临界区解锁</span></span><br><span class="line">        V(full);  <span class="comment">// 增加一个非空缓冲区</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ①②两步不能互换 当空缓冲区为0时 P(mutex)--&gt;P(empty) 会使生产者持有临界区的锁进入阻塞 造成死锁</span></span><br><span class="line"><span class="comment">// 实现互斥的P操作一定要在实现同步的P操作之后</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">consumer() &#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        P(full);  <span class="comment">// 消耗一个非空  ······ ③</span></span><br><span class="line">        p(mutex);  <span class="comment">// 临界区加锁  ······ ④</span></span><br><span class="line">        <span class="comment">//  取出一个产品</span></span><br><span class="line">        V(mutex);  <span class="comment">// 解锁</span></span><br><span class="line">        V(empty);  <span class="comment">// 增加一个空缓冲区</span></span><br><span class="line">        <span class="comment">// 使用产品</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ③④两步互换同样会造成死锁</span></span><br><span class="line"><span class="comment">// 使用产品的代码 尽量不要放在实现互斥的PV中 以提高处理效率</span></span><br></pre></td></tr></table></figure>
<hr />
<h2 id="多生产者-消费者问题"><a class="markdownIt-Anchor" href="#多生产者-消费者问题"></a> 多生产者-消费者问题</h2>
<h3 id="特征-2"><a class="markdownIt-Anchor" href="#特征-2"></a> 特征</h3>
<ol>
<li>多类生产者和特定某类消费者</li>
<li><strong>互斥关系</strong>：对缓冲区（存放产品的临界区）互斥访问</li>
<li><strong>同步关系</strong>：
<ul>
<li>生产者A放入产品a，消费者A才能取出</li>
<li>生产者B放入产品b，消费者B才能取出</li>
<li>只有缓存区不满，生产者A、B才能放入</li>
<li>缓存区不满的事件应由消费者触发</li>
</ul>
</li>
</ol>
<h3 id="图示-2"><a class="markdownIt-Anchor" href="#图示-2"></a> 图示</h3>
<p><img src="https://i.loli.net/2020/04/04/dIuxjslZJ2MztfA.png" alt="" /></p>
<h3 id="伪代码实现-2"><a class="markdownIt-Anchor" href="#伪代码实现-2"></a> 伪代码实现</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">semaphore mutex = <span class="number">1</span>; <span class="comment">// 实现互斥</span></span><br><span class="line">semaphore apple = <span class="number">0</span>, orange = <span class="number">0</span>, plate = <span class="number">1</span>;  <span class="comment">// 实现同步 苹果 橘子 空盘 的数量</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 生产者A 生产apple</span></span><br><span class="line">ProducerA() &#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 准备一个apple</span></span><br><span class="line">        P(plate);  <span class="comment">// 消耗一个plate 没有空的plate 则阻塞</span></span><br><span class="line">        P(mutex);  <span class="comment">// 实现互斥 加锁</span></span><br><span class="line">        <span class="comment">// apple 放出 plate</span></span><br><span class="line">        V(mutex);  <span class="comment">// 解锁</span></span><br><span class="line">        V(apple);  <span class="comment">// 增加一个apple 提醒消费者A可以进行消费</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生产者B 与A相仿 replace("apple", "orange")</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 消费者A 只消费 apple</span></span><br><span class="line">ConsumerA() &#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        P(apple);  <span class="comment">// 消费一个apple 没有则阻塞</span></span><br><span class="line">        P(mutex);  <span class="comment">// 加锁</span></span><br><span class="line">        <span class="comment">// 从 plate 取出 apple </span></span><br><span class="line">        V(mutex);  <span class="comment">// 解锁</span></span><br><span class="line">        V(plate);  <span class="comment">// 已取出 故增加一个plate</span></span><br><span class="line">        <span class="comment">// 消费取出的apple</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 消费者B 与A相仿 replace("apple", "orange")</span></span><br></pre></td></tr></table></figure>
<h3 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h3>
<ol>
<li>缓冲区（如上例的plate）只有一个的时候，<strong>可能不需要</strong>使用互斥变量mutex，但<strong>不绝对</strong>，视实际再行判断</li>
<li>从<strong>事件</strong>的角度看问题，把进程行为抽象为事件
<ul>
<li>进程行为：缓冲区有产品A（B）⟶ 消费者A（B）取出 ⟶ 生产者A（B）放入</li>
<li>事件：
<ul>
<li><strong>缓冲区变空事件 ⟶ 产品放入事件</strong></li>
<li><strong>缓冲区变空 ⟶ 消费者A、B判别产品选择性取出</strong></li>
<li><strong>产品放入 ⟶ 生产者A、B互斥生产</strong></li>
</ul>
</li>
</ul>
</li>
</ol>
<hr />
<h2 id="吸烟者问题"><a class="markdownIt-Anchor" href="#吸烟者问题"></a> 吸烟者问题</h2>
<h3 id="特征-3"><a class="markdownIt-Anchor" href="#特征-3"></a> 特征</h3>
<ol>
<li>一个供应者每次提供两种原料，三个抽烟者事先持有一种原料 ⟶ <strong>本质上是 生产多种原料组合的单生产者-多种消费者问题</strong></li>
<li>供应原料放在桌子，抽烟者原料从桌子获取 ⟶ <strong>互斥访问缓冲区缓冲区桌子</strong></li>
<li>将每次提供的多种原料视为一个组合，问题转化为<strong>生产多种组合的生产者-不同组合需求的消费者</strong></li>
<li>由抽烟者从桌子取走（或者完成抽烟，视题目而定）激活供应者提供原料</li>
</ol>
<h3 id="图示-3"><a class="markdownIt-Anchor" href="#图示-3"></a> 图示</h3>
<p><img src="https://i.loli.net/2020/04/04/Kbh82TBGcLpHmjf.png" alt="" /></p>
<h3 id="伪代码实现-3"><a class="markdownIt-Anchor" href="#伪代码实现-3"></a> 伪代码实现</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">semaphore offer1 = <span class="number">0</span>, offer2 = <span class="number">0</span>, offer3 = <span class="number">0</span>;  <span class="comment">// 共三种组合</span></span><br><span class="line">semaphore finish = <span class="number">0</span>;  <span class="comment">// 抽烟是否完成</span></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;  <span class="comment">// 实现“轮流”  i = (i + 1) % n</span></span><br><span class="line"><span class="comment">// 这里是以抽烟完成来激活下一次供应 所以 以 finish 来作为同步变量 且 finish 的V操作要放在抽烟之后</span></span><br><span class="line"><span class="comment">// 如果选择以取走原料为激活条件 只需在 P(offer) 之后使用 V(finish)</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Privoder() &#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">0</span>) V(offer1);  <span class="comment">// 循环判断当前轮到哪个抽烟者 并提供相应原料 增加相应组合个数</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">1</span>) V(offer2);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">2</span>) V(offer3);</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">3</span>;  <span class="comment">// 轮流机制</span></span><br><span class="line">        P(finish);  <span class="comment">// 阻塞 等待抽烟者结束抽烟操作</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Smoker() &#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        P(offer_n);  <span class="comment">// 消费一个对应组合的原料</span></span><br><span class="line">        <span class="comment">// 抽烟 </span></span><br><span class="line">        V(finish);  <span class="comment">// 抽烟结束 修改同步变量</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="读者-写者问题"><a class="markdownIt-Anchor" href="#读者-写者问题"></a> 读者-写者问题</h2>
<h3 id="特征-4"><a class="markdownIt-Anchor" href="#特征-4"></a> 特征</h3>
<ol>
<li>共享文件只有一个，作为临界区（缓冲区）</li>
<li>读者与读者可以<strong>同时</strong>阅读文件，并发甚至并行</li>
<li>读者与写者必须<strong>互斥</strong>访问文件，否则写者写入的信息会覆盖读者阅读的部分</li>
<li>写者与写者必须<strong>互斥</strong>访问文件，否则写着写入的信息会覆盖另一个写者的写入</li>
<li><strong>分组，部分同步，部分互斥</strong></li>
</ol>
<h3 id="图示-4"><a class="markdownIt-Anchor" href="#图示-4"></a> 图示</h3>
<p><img src="https://i.loli.net/2020/04/04/B54cnb6ieDkAWr1.jpg" alt="" /></p>
<h3 id="伪代码实现-4"><a class="markdownIt-Anchor" href="#伪代码实现-4"></a> 伪代码实现</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">semaphore rw = <span class="number">1</span>;  <span class="comment">// 实现读者写者、写者写者的文件互斥访问</span></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;  <span class="comment">// 统计读者个数</span></span><br><span class="line">semaphore mutex = <span class="number">1</span>;  <span class="comment">// 实现 count 的互斥访问 count要进行判断和增删操作 要避免并发时出错</span></span><br><span class="line">semaphore w = <span class="number">1</span>;  <span class="comment">// 实现“写优先”的操作 防止源源不断的读者导致写者饥饿 在写者到来时争夺下个读者的P(w)</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Writer() &#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        P(w);  <span class="comment">// 写操作优先 消费这个优先权 下个读者就只能等待归还</span></span><br><span class="line">        P(rw);  <span class="comment">// 实现写文件互斥 加锁</span></span><br><span class="line">        <span class="comment">// 写文件</span></span><br><span class="line">        V(rw);  <span class="comment">// 解锁</span></span><br><span class="line">        V(w);  <span class="comment">// 归还优先权</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Reader() &#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        P(w);  <span class="comment">// 判断有无写者在操作 有则等待</span></span><br><span class="line">        P(mutex);  <span class="comment">// 实现count互斥 防止第一第二个读者同时操作了P(rw)</span></span><br><span class="line">        <span class="keyword">if</span>(count == <span class="number">0</span>) P(rw);  <span class="comment">// 如果是第一个读者到来 给文件共享区加锁</span></span><br><span class="line">        count++;  <span class="comment">// 读者数量+1</span></span><br><span class="line">        V(mutex);  <span class="comment">// count操作 解锁</span></span><br><span class="line">        V(w);  <span class="comment">// 归回写者优先权</span></span><br><span class="line">        <span class="comment">// 读文件</span></span><br><span class="line">        P(mutex);  <span class="comment">// count 互斥</span></span><br><span class="line">        count--;  <span class="comment">// 读者数量-1</span></span><br><span class="line">        <span class="keyword">if</span>(count == <span class="number">0</span>) V(rw);  <span class="comment">// 如果是最后一个读者 给文件共享区解锁</span></span><br><span class="line">        V(mutex);  <span class="comment">// count操作 解锁</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="注意事项-2"><a class="markdownIt-Anchor" href="#注意事项-2"></a> 注意事项</h3>
<ol>
<li>设置 <strong>count 计数器</strong>统计读者数量，实现多个同类进程访问</li>
<li><strong>写优先的实现过程是</strong>：
<ul>
<li>当写者到来时，P(w) 申请写优先权</li>
<li>当上一个读者V(w)后，写着获取到写优先权，进入下一步P(rw)，申请进入文件共享区</li>
<li>此时若有其他的读者或写者到来会被阻塞在 P(w) 操作处，所以不会由新增读者进入文件共享区</li>
<li>当所有在读的读者均阅读完毕退出后，count == 0，V(rw)</li>
<li>写者通过 P(rw) 开始写文件，写完后退出</li>
<li>退出时，先归还V(rw)，在归还写优先权V(w)，激活P(w)阻塞的等待队列</li>
</ul>
</li>
</ol>
<hr />
<h2 id="哲学家进餐问题"><a class="markdownIt-Anchor" href="#哲学家进餐问题"></a> 哲学家进餐问题</h2>
<h3 id="特征-5"><a class="markdownIt-Anchor" href="#特征-5"></a> 特征</h3>
<ol>
<li>五个哲学家五个筷子，则相邻两个哲学家必然不能同时凑齐左右筷子</li>
<li>若所有人同时选择同一边的筷子，会出现五人都只持有一只筷子而阻塞的情况，陷入死锁</li>
</ol>
<h3 id="图示-5"><a class="markdownIt-Anchor" href="#图示-5"></a> 图示</h3>
<p><img src="https://i.loli.net/2020/04/04/M2TOGKRgJZpNbm6.png" alt="" /></p>
<h3 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h3>
<ol>
<li>增加限制条件，同时只能由小于五人争抢筷子进餐，保证至少有一人可以凑齐左右筷子</li>
<li>奇数位先争夺左边筷子，偶数位先争夺右边筷子，使得相邻两个争抢同一筷子而有一个直接阻塞</li>
</ol>
<h3 id="伪代码实现-5"><a class="markdownIt-Anchor" href="#伪代码实现-5"></a> 伪代码实现</h3>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">semaphore chopstick[<span class="number">5</span>] = &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;;  <span class="comment">// 互斥变量筷子</span></span><br><span class="line">semaphore mutex = <span class="number">1</span>;  <span class="comment">// 互斥的取筷子</span></span><br><span class="line">Person_i() &#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line">        P(mutex);  <span class="comment">// 互斥 每次只允许一个人尝试取筷子</span></span><br><span class="line">        P(chopstick[i]);  <span class="comment">// 先取左边</span></span><br><span class="line">        P(chopstick[(i + <span class="number">1</span>) % <span class="number">5</span>]);  <span class="comment">// 取右边</span></span><br><span class="line">        V(mutex);  <span class="comment">// 解锁 下一个人取筷子</span></span><br><span class="line">        <span class="comment">// 进餐</span></span><br><span class="line">        V(chopstick[i]);  <span class="comment">// 归还筷子</span></span><br><span class="line">        V(chopstick[(i + <span class="number">1</span>) % <span class="number">5</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>OS-16-分段、段页式内存管理 以及 虚拟内存技术</title>
    <url>/2020/07/02/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%AC%AC%E5%8D%81%E5%85%AD%E6%AC%A1%E8%AF%BE%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E5%88%86%E6%AE%B5">分段</a>
<ul>
<li><a href="#%E6%A6%82%E5%BF%B5">概念</a></li>
<li><a href="#%E5%9C%B0%E5%9D%80%E7%BB%93%E6%9E%84">地址结构</a></li>
<li><a href="#%E6%AE%B5%E8%A1%A8">段表</a></li>
<li><a href="#%E5%9C%B0%E5%9D%80%E5%8F%98%E6%8D%A2%E6%9C%BA%E5%88%B6">地址变换机制</a></li>
<li><a href="#%E5%88%86%E9%A1%B5%E5%88%86%E6%AE%B5%E5%AF%B9%E6%AF%94">分页分段对比</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93">小结</a></li>
</ul>
</li>
<li><a href="#%E6%AE%B5%E9%A1%B5%E5%BC%8F">段页式</a>
<ul>
<li><a href="#%E5%88%86%E6%AE%B5%E5%88%86%E9%A1%B5%E4%BC%98%E7%BC%BA%E7%82%B9%E5%88%86%E6%9E%90">分段分页优缺点分析</a></li>
<li><a href="#%E7%AE%A1%E7%90%86%E6%B5%81%E7%A8%8B">管理流程</a></li>
<li><a href="#%E5%9C%B0%E5%9D%80%E7%BB%93%E6%9E%84-2">地址结构</a></li>
<li><a href="#%E6%AE%B5%E8%A1%A8%E4%B8%8E%E9%A1%B5%E8%A1%A8">段表与页表</a></li>
<li><a href="#%E5%9C%B0%E5%9D%80%E5%8F%98%E6%8D%A2%E6%9C%BA%E5%88%B6-2">地址变换机制</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93-2">小结</a></li>
</ul>
</li>
<li><a href="#%E8%99%9A%E6%8B%9F%E6%8A%80%E6%9C%AF">虚拟技术</a>
<ul>
<li><a href="#%E8%83%8C%E6%99%AF">背景</a></li>
<li><a href="#%E5%AE%9A%E4%B9%89%E5%92%8C%E7%89%B9%E5%BE%81">定义和特征</a></li>
<li><a href="#%E5%AE%9E%E7%8E%B0">实现</a></li>
<li><a href="#%E5%B0%8F%E7%BB%93-3">小结</a></li>
</ul>
</li>
</ul>
</p>
<h1 id="操作系统第十六次课小结"><a class="markdownIt-Anchor" href="#操作系统第十六次课小结"></a> 操作系统第十六次课小结</h1>
<h2 id="分段"><a class="markdownIt-Anchor" href="#分段"></a> 分段</h2>
<h3 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h3>
<ul>
<li>按照程序自身<strong>逻辑</strong>（主函数、子函数、全局变量等），划分若干段，每段从 <strong>0</strong> 开始编址</li>
<li>内存分配规则：以段为单位，<strong>每段</strong>在内存中占<strong>连续</strong>空间，<strong>段之间可不连续</strong></li>
<li><strong>编程方便，可读性高</strong></li>
</ul>
<h3 id="地址结构"><a class="markdownIt-Anchor" href="#地址结构"></a> 地址结构</h3>
<ul>
<li>
<p>分为段号和段内地址偏移量</p>
</li>
<li>
<p>段号位数决定了每个进程最多可分几段<br />
段内地址数决定了每段的最大长度</p>
<table>
<thead>
<tr>
<th style="text-align:center">段号</th>
<th style="text-align:center">段内地址</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">31 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots \cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span></span></span></span> 16</td>
<td style="text-align:center">15 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⋯</mo><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots \cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span></span></span></span> 0</td>
</tr>
</tbody>
</table>
<blockquote>
<p>段号占16位，每个进程最多有 2<sup>16</sup> = 64k 个段</p>
<p>段内地址占16位，每段的最大长度为 2<sup>16</sup> = 64k</p>
</blockquote>
</li>
</ul>
<h3 id="段表"><a class="markdownIt-Anchor" href="#段表"></a> 段表</h3>
<ul>
<li>
<p>记录进程拆分而成的各个段的存放位置</p>
</li>
<li>
<p>每个段对应一个段表项，记录了<strong>起始位置</strong>（基址）和<strong>段长</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">段号（隐含）</th>
<th style="text-align:center">段长</th>
<th style="text-align:center">基址</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">7K</td>
<td style="text-align:center">80K</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">3K</td>
<td style="text-align:center">120K</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">6K</td>
<td style="text-align:center">40K</td>
</tr>
</tbody>
</table>
</li>
<li>
<p>段表项长度<strong>相等</strong>；<strong>段长</strong>的最大位数等于<strong>段内地址</strong>位数，<strong>基址</strong>的最大位数等于<strong>系统内存</strong>位数；段号是隐含的，可推导</p>
<blockquote>
<p>某系统按字节寻址，分段存储管理，逻辑地址为（段号16位，段内地址16位），物理内存大小 4GB。</p>
<p>段内地址16位 ⟶ 最大段长 = 2<sup>16</sup> ⟶ 段长占16位</p>
<p>物理内存4GB ⟶ 地址空间 = 2<sup>32</sup> ⟶ 基址占32位</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∴</mo></mrow><annotation encoding="application/x-tex">\therefore</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∴</span></span></span></span> 段表项占 16 + 32 = 48 位，大小为 6B</p>
<p>若段表存放的起始地址为 M</p>
<p>则 k 号段对应的段表项存放的地址为 M+6K</p>
</blockquote>
</li>
</ul>
<h3 id="地址变换机制"><a class="markdownIt-Anchor" href="#地址变换机制"></a> 地址变换机制</h3>
<ol>
<li>根据逻辑地址得到<strong>段号</strong>S、<strong>段内地址</strong>W</li>
<li><strong>越界检查</strong>，段号S与段表寄存器（<strong>段表始址</strong>F，<strong>段表长度</strong>M）的 M 比较；若 S ≥ M（S从0开始，M最小为1，故S必小于M），则<strong>越界中断</strong>，否则继续执行</li>
<li>查询段表(<strong>段长</strong>C，<strong>基址</strong>b)，<strong>找到对应段表项</strong>，地址为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>+</mo><mi>S</mi><mo>×</mo><mi mathvariant="normal">段</mi><mi mathvariant="normal">表</mi><mi mathvariant="normal">项</mi><mi mathvariant="normal">长</mi><mi mathvariant="normal">度</mi></mrow><annotation encoding="application/x-tex">F+S\times段表项长度</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">段</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">长</span><span class="mord cjk_fallback">度</span></span></span></span></li>
<li><strong>检查段内地址是否超过段长</strong>，若 W ≥ C，则<strong>越界中断</strong>，否则继续执行</li>
<li>计算得到物理地址 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">基</mi><mi mathvariant="normal">址</mi><mi>b</mi><mo>+</mo><mi mathvariant="normal">段</mi><mi mathvariant="normal">内</mi><mi mathvariant="normal">地</mi><mi mathvariant="normal">址</mi><mi>W</mi></mrow><annotation encoding="application/x-tex">基址b+段内地址W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">基</span><span class="mord cjk_fallback">址</span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">段</span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span></span></li>
<li>访问目标内存单元</li>
</ol>
<h3 id="分页分段对比"><a class="markdownIt-Anchor" href="#分页分段对比"></a> 分页分段对比</h3>
<table>
<thead>
<tr>
<th style="text-align:center">分页</th>
<th style="text-align:center">分段</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">页是信息的<strong>物理</strong>单位</td>
<td style="text-align:center">段是信息的<strong>逻辑</strong>单位</td>
</tr>
<tr>
<td style="text-align:center">系统行为，<strong>用户不可见</strong></td>
<td style="text-align:center">逻辑需求，<strong>用户可见</strong></td>
</tr>
<tr>
<td style="text-align:center">页大小固定</td>
<td style="text-align:center">段大小不定</td>
</tr>
<tr>
<td style="text-align:center">地址空间<strong>一维</strong>（地址）</td>
<td style="text-align:center">地址空间<strong>二维</strong>（段名，段内地址）</td>
</tr>
<tr>
<td style="text-align:center">-</td>
<td style="text-align:center"><strong>易信息共享和保护</strong>（<strong>纯代码或可重入代码</strong>）</td>
</tr>
<tr>
<td style="text-align:center">单级页表<strong>两次</strong>访存</td>
<td style="text-align:center">段表–内存，<strong>两次</strong>访存</td>
</tr>
<tr>
<td style="text-align:center"><strong>可</strong>引入快表</td>
<td style="text-align:center"><strong>可</strong>引入快表</td>
</tr>
</tbody>
</table>
<ul>
<li>
<p>信息共享保护通过<strong>多个段表项</strong>引用<strong>同一段</strong>实现，而分页可能会使共享段被强制分隔为两个页面的一部分，而难以划定共享区</p>
</li>
<li>
<p>段表改造</p>
<table>
<thead>
<tr>
<th style="text-align:center">段号（隐含）</th>
<th style="text-align:center">段长</th>
<th style="text-align:center">基址</th>
<th style="text-align:center">是否允许其他进程访问</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">7K</td>
<td style="text-align:center">80K</td>
<td style="text-align:center">不允许</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">3K</td>
<td style="text-align:center">120K</td>
<td style="text-align:center"><strong>允许</strong></td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">6K</td>
<td style="text-align:center">40K</td>
<td style="text-align:center">不允许</td>
</tr>
</tbody>
</table>
</li>
</ul>
<h3 id="小结"><a class="markdownIt-Anchor" href="#小结"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/07/02/VKwzZujdb38EWDk.png" alt="image-20200508152936119" /></p>
<h2 id="段页式"><a class="markdownIt-Anchor" href="#段页式"></a> 段页式</h2>
<h3 id="分段分页优缺点分析"><a class="markdownIt-Anchor" href="#分段分页优缺点分析"></a> 分段分页优缺点分析</h3>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">优点</th>
<th style="text-align:center">缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>分页</strong></td>
<td style="text-align:center">内存空间利用率高<br /><strong>不会产生外部碎片</strong><br />仅少量内部碎片</td>
<td style="text-align:center">不便于按逻辑模块实现信息共享和保护</td>
</tr>
<tr>
<td style="text-align:center"><strong>分段</strong></td>
<td style="text-align:center">可按逻辑模块实现信息共享和保护</td>
<td style="text-align:center">段长<strong>过大</strong>不便于分配连续空间<br /><strong>会产生外部碎片</strong></td>
</tr>
</tbody>
</table>
<h3 id="管理流程"><a class="markdownIt-Anchor" href="#管理流程"></a> 管理流程</h3>
<ol>
<li>
<p>进程按逻辑<strong>分段</strong>，再将<strong>各段分页</strong></p>
</li>
<li>
<p>将<strong>内存空间</strong>分为大小相同的若干个<strong>页框</strong></p>
</li>
<li>
<p>将各页面分别装入内存块中</p>
</li>
</ol>
<h3 id="地址结构-2"><a class="markdownIt-Anchor" href="#地址结构-2"></a> 地址结构</h3>
<table>
<thead>
<tr>
<th style="text-align:center">段号</th>
<th style="text-align:center">页号</th>
<th style="text-align:center">页内偏移量</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">31 ······ 16</td>
<td style="text-align:center">15 ······ 12</td>
<td style="text-align:center">11 ······ 0</td>
</tr>
</tbody>
</table>
<ul>
<li>段号位数决定了每个进程最多分几段</li>
<li>页号位数决定每个段最多分几页</li>
<li>页内偏移量决定了页面的大小、内存块大小是多少</li>
</ul>
<blockquote>
<p>上例中，按字节寻址，每个进程最多 2<sup>16</sup> = 64K 个段，每段最多 2<sup>4</sup> = 16 页，每页大小 2<sup>12</sup> = 4 KB</p>
</blockquote>
<ul>
<li>分段和段内地址对用户可见，故段页式管理的地址结构是<strong>二维</strong>的</li>
</ul>
<h3 id="段表与页表"><a class="markdownIt-Anchor" href="#段表与页表"></a> 段表与页表</h3>
<ul>
<li>
<p>一个进程对应多个段</p>
<p>一个段对应一个段表项</p>
<p>一个段可能对应多个页（即页表长度 ≥ 1）</p>
</li>
<li>
<p>段表</p>
<table>
<thead>
<tr>
<th style="text-align:center">段号（隐含）</th>
<th style="text-align:center"><strong>页表长度</strong></th>
<th style="text-align:center">页表存放块号</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">2</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">1</td>
<td style="text-align:center">···</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">2</td>
<td style="text-align:center">···</td>
</tr>
</tbody>
</table>
<ul>
<li>每个段对应一个段表项，每个段表项由段号、<strong>页表长度</strong>、<strong>页表存放块号</strong>（页表起始地址）组成</li>
<li><strong>每个段表项长度相等</strong>，故段号可隐含</li>
<li>根据存放块号算出<strong>页表存放的内存地址</strong></li>
</ul>
</li>
<li>
<p>页表</p>
<table>
<thead>
<tr>
<th style="text-align:center">页号</th>
<th style="text-align:center">内存块号</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">k</td>
</tr>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">n</td>
</tr>
</tbody>
</table>
</li>
</ul>
<h3 id="地址变换机制-2"><a class="markdownIt-Anchor" href="#地址变换机制-2"></a> 地址变换机制</h3>
<ol>
<li>
<p>根据逻辑地址得到<strong>段号</strong>、<strong>页号</strong>、<strong>页内偏移量</strong></p>
<p>逻辑地址A：段号S | 页号P | 页内偏移量W</p>
</li>
<li>
<p>越界检查，S 与段表寄存器（段表始址F | 段表长度M）的 M 比较，若 S ≥ M，则越界中断</p>
</li>
<li>
<p>查询段表找到对应段表项，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">段</mi><mi mathvariant="normal">表</mi><mi mathvariant="normal">项</mi><mi mathvariant="normal">存</mi><mi mathvariant="normal">放</mi><mi mathvariant="normal">地</mi><mi mathvariant="normal">址</mi><mo>=</mo><mi>F</mi><mo>+</mo><mi>S</mi><mo>×</mo><mi mathvariant="normal">段</mi><mi mathvariant="normal">表</mi><mi mathvariant="normal">项</mi><mi mathvariant="normal">长</mi><mi mathvariant="normal">度</mi></mrow><annotation encoding="application/x-tex">段表项存放地址 = F + S \times 段表项长度</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">段</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">存</span><span class="mord cjk_fallback">放</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">址</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">段</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">长</span><span class="mord cjk_fallback">度</span></span></span></span></p>
</li>
<li>
<p><strong>第一次访存</strong>，检查页号P是否越界，若 P ≥ 页表长度，则越界中断</p>
</li>
<li>
<p><strong>第二次访存</strong>，根据页表存放块号、页号查询页表，找到对应页表项</p>
</li>
<li>
<p><strong>第三次访存</strong>，根据内存块号、页内偏移量得到最终的物理地址</p>
</li>
<li>
<p>访问目标单元</p>
</li>
</ol>
<ul>
<li>可引入快表机构，用段号和页号作为查询快表的关键字，若快表<strong>命中</strong>，则<strong>一次</strong>访存</li>
</ul>
<h3 id="小结-2"><a class="markdownIt-Anchor" href="#小结-2"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/07/02/dMYgPKIDZ41JTma.png" alt="image-20200508162012372" /></p>
<h2 id="虚拟技术"><a class="markdownIt-Anchor" href="#虚拟技术"></a> 虚拟技术</h2>
<h3 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h3>
<ul>
<li>
<p>传统存储，暂时不需要的数据也会<strong>长期占用</strong>内存，导致内存利用率低</p>
</li>
<li>
<p><strong>一次性</strong>：作业必须一次性全部装入内存后才可运行，导致大作业无法运行，多道程序并发度下降</p>
</li>
<li>
<p><strong>驻留性</strong>：作业一旦装入，就驻留至运行结束，浪费内存资源</p>
</li>
</ul>
<blockquote>
<p>4 G 的内存运行不了 6 G 的游戏</p>
</blockquote>
<ul>
<li><strong>高速缓冲技术</strong>思想：近期频繁使用的数据放到更高速的存储器中，暂时用不到的放到更低速存储器</li>
</ul>
<h3 id="定义和特征"><a class="markdownIt-Anchor" href="#定义和特征"></a> 定义和特征</h3>
<ul>
<li>
<p><strong>虚拟内存</strong>：程序无需全部装入即可运行，运行时根据需要动态调入数据，若内存不够，还需换出一些数据</p>
</li>
<li>
<p>虚拟内存的<strong>最大容量</strong>是由计算机的地址结构（CPU寻址范围）确定<br />
虚拟内存的<strong>实际容量</strong> = min（内外存容量和，CPU寻址范围）</p>
<blockquote>
<p>某计算机的地址结构为32位，按字节编址，内存大小为512 MB，外存大小为2 GB。</p>
<p>虚拟内存最大容量 = 2<sup>32</sup> B = 4 GB</p>
<p>实际容量 = min（512 MB+2 GB，4 GB）= 2.5 GB</p>
</blockquote>
</li>
<li>
<p><strong>特征</strong></p>
<ul>
<li><strong>多次性</strong>：无需在作业运行时一次性全部装入内存，而是允许被分成多次调入内存</li>
<li><strong>对换性</strong>：在作业运行时无需常驻内存，允许按需要换入换出</li>
<li><strong>虚拟性</strong>：从逻辑上扩充了内存容量</li>
</ul>
</li>
</ul>
<h3 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> 实现</h3>
<ul>
<li>建立在<strong>离散分配</strong>的内存管理方式基础上</li>
<li>访问信息不在内存时，操作系统将其从外存调入内存，然后继续执行 （<strong>请求调页</strong>（段）功能）</li>
<li>内存空间不够时，将内存中暂时用不到的信息换出外存 （页面（段）<strong>置换</strong>功能）</li>
<li>请求分页存储管理<br />
请求分段存储管理<br />
请求段页式存储管理</li>
</ul>
<h3 id="小结-3"><a class="markdownIt-Anchor" href="#小结-3"></a> 小结</h3>
<p><img src="https://i.loli.net/2020/07/02/Coxim5PGZw9gM2V.png" alt="image-20200508173313381" /></p>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>NexT Valine 评论系统配置</title>
    <url>/2020/04/12/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/NexT%20Valine%20%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E5%88%9B%E5%BB%BA%E5%BA%94%E7%94%A8">创建应用</a></li>
<li><a href="#%E9%85%8D%E7%BD%AE-appkey">配置 AppKey</a></li>
<li><a href="#%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE">部署项目</a></li>
<li><a href="#%E8%AF%84%E8%AE%BA%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86">评论数据管理</a></li>
<li><a href="#%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%E5%85%B3%E9%97%AD">评论功能关闭</a></li>
<li><a href="#%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE">个性化设置</a></li>
</ul>
</p>
<h1 id="valine-评论系统配置"><a class="markdownIt-Anchor" href="#valine-评论系统配置"></a> Valine 评论系统配置</h1>
<h2 id="创建应用"><a class="markdownIt-Anchor" href="#创建应用"></a> 创建应用</h2>
<ol>
<li>
<p>进入<a href="https://www.leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>官网，点击右上角控制台，注册账号</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200412195907.png" alt="" /></p>
</li>
<li>
<p>按要求验证邮箱和实名认证</p>
</li>
<li>
<p>点击左上方<code>应用</code> → <code>创建应用</code>，填写应用名称（随意），选择开发版，创建</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200412200228.png" alt="" /></p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200412200814.png" alt="" /></p>
</li>
<li>
<p>在面板可以看到新添加的应用</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200412201038.png" alt="" /></p>
</li>
</ol>
<h2 id="配置-appkey"><a class="markdownIt-Anchor" href="#配置-appkey"></a> 配置 AppKey</h2>
<ol>
<li>
<p>点击应用右上设置按钮，进入设置面板，点击左侧栏<code>设置</code> → <code>应用Keys</code>，分别<strong>保存<code>App ID</code> 与 <code>AppKey</code></strong></p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200412201401.png" alt="" /></p>
</li>
<li>
<p>开启<code>git bash</code> 切换到站点主目录 <code>blog</code> ，<strong>编辑<code>themes/next/_config.yml</code></strong></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /themes/next/_config.yml</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>查找到 <code>valine</code> 项，修改其 <code>enable</code> 值为 <code>true</code>，并将 <code>LeanCloud</code> 页面的 <code>AppID</code> 和 <code>appKey</code> 分别填入 <code>enable</code> 下方两项 <code>appid</code> 和 <code>appkey</code></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span></span><br><span class="line">valine:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span>  <span class="comment"># 是否启用 valine 评论系统</span></span><br><span class="line">  appid: XXXXXXXXX <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  appkey: XXXXXXXX <span class="comment"># Your leancloud application appkey</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="部署项目"><a class="markdownIt-Anchor" href="#部署项目"></a> 部署项目</h2>
<ol>
<li>
<p>修改配置文件后， 保存退出</p>
</li>
<li>
<p>在主目录 <code>blog</code> 下，执行 <code>hexo clean &amp;&amp; hexo s</code>，重新生成页面</p>
</li>
<li>
<p>浏览器使用 <code>http://localhost:4000</code> 进入本地页面查看添加效果</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200412203157.png" alt="" /></p>
</li>
<li>
<p>执行 <code>hexo clean &amp;&amp; hexo g -d</code> 可直接部署到远端</p>
</li>
</ol>
<h2 id="评论数据管理"><a class="markdownIt-Anchor" href="#评论数据管理"></a> 评论数据管理</h2>
<ol>
<li>
<p>进入 <code>LeanCloud</code>，登录账号</p>
</li>
<li>
<p>点击用于存储评论的应用，进入其管理界面</p>
</li>
<li>
<p>选择 <code>存储</code> → <code>结构化数据</code> → <code>Comment</code>，即可在管理端实现数据增删查改</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200412210207.png" alt="" /></p>
</li>
</ol>
<h2 id="评论功能关闭"><a class="markdownIt-Anchor" href="#评论功能关闭"></a> 评论功能关闭</h2>
<ul>
<li>
<p>关闭特定文章的评论功能只需在其 <code>Front Matter</code> 中，添加 <code>comments: false</code></p>
</li>
<li>
<p>关闭指定页面（如分类、标签页）的评论功能，则需进入页面目录，编辑其 <code>index.md</code> 文件，同样添加 <code>Front Matter</code> 的 <code>comments</code>项</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim <span class="built_in">source</span>/&lt;pageName&gt;/index.md</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="个性化设置"><a class="markdownIt-Anchor" href="#个性化设置"></a> 个性化设置</h2>
<p><code>NexT</code> 主题配置文件中支持更多关于 <code>Valine</code> 的其他配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span></span><br><span class="line">valine:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  appid: XXXXXXX <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  appkey: XXXXXXX <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  notify: <span class="literal">false</span> <span class="comment"># 邮件通知</span></span><br><span class="line">  verify: <span class="literal">false</span> <span class="comment"># 验证码</span></span><br><span class="line">  placeholder: Just go go <span class="comment"># 输入文本框占位符</span></span><br><span class="line">  avatar: mm <span class="comment"># 头像风格</span></span><br><span class="line">  guest_info: nick,mail,link <span class="comment"># 用户信息栏</span></span><br><span class="line">  pageSize: 10 <span class="comment"># 分页大小</span></span><br><span class="line">  language: <span class="comment"># 语言, 可用值: en, zh-cn</span></span><br><span class="line">  visitor: <span class="literal">false</span> <span class="comment"># 文章阅读统计</span></span><br><span class="line">  comment_count: <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  recordIP: <span class="literal">false</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  serverURLs: <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>BuildBlog</category>
      </categories>
      <tags>
        <tag>NexT</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo NexT 主题配置</title>
    <url>/2020/04/12/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Hexo%20Next%20%E4%B8%BB%E9%A2%98/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE">安装配置</a></li>
<li><a href="#%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE">个性化设置</a>
<ul>
<li><a href="#%E8%AE%BE%E7%BD%AE%E7%AB%99%E7%82%B9%E5%B1%9E%E6%80%A7">设置站点属性</a></li>
<li><a href="#%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E6%A0%B7%E5%BC%8F">修改主题样式</a></li>
<li><a href="#%E8%AE%BE%E7%BD%AE%E8%8F%9C%E5%8D%95">设置菜单</a></li>
<li><a href="#%E8%AE%BE%E7%BD%AE%E5%A4%B4%E5%83%8F">设置头像</a></li>
<li><a href="#%E9%98%85%E8%AF%BB%E8%BF%9B%E5%BA%A6">阅读进度</a></li>
<li><a href="#%E4%B9%A6%E7%AD%BE">书签</a></li>
<li><a href="#%E9%98%85%E8%AF%BB%E5%85%A8%E6%96%87">阅读全文</a></li>
<li><a href="#%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%9B%9E%E6%BA%AF%E6%8C%89%E9%92%AE">侧边栏回溯按钮</a></li>
<li><a href="#%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1">字数统计</a></li>
<li><a href="#%E6%B7%BB%E5%8A%A0%E6%A0%87%E7%AD%BE%E5%92%8C%E5%88%86%E7%B1%BB%E7%95%8C%E9%9D%A2">添加标签和分类界面</a></li>
</ul>
</li>
<li><a href="#%E7%AC%AC%E4%B8%89%E6%96%B9%E6%9C%8D%E5%8A%A1">第三方服务</a>
<ul>
<li><a href="#%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E6%B8%B2%E6%9F%93">数学公式渲染</a></li>
<li><a href="#%E6%9C%AC%E5%9C%B0%E6%90%9C%E7%B4%A2">本地搜索</a></li>
</ul>
</li>
<li><a href="#%E5%A4%87%E6%B3%A8">备注</a></li>
</ul>
</p>
<h1 id="hexo-next-主题配置"><a class="markdownIt-Anchor" href="#hexo-next-主题配置"></a> Hexo NexT 主题配置</h1>
<hr />
<h2 id="安装配置"><a class="markdownIt-Anchor" href="#安装配置"></a> 安装配置</h2>
<ol>
<li>
<p><strong>确定主目录</strong>，使用<code>git bash</code> 进入博客主目录（以下称为<code>blog</code>目录），确保<code>ls</code>可以查看到<code>themes</code>目录</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411213727.png" alt="" /></p>
</li>
<li>
<p><strong>克隆项目</strong>，在<code>blog</code>目录下执行<code>git clone https://github.com/theme-next/hexo-theme-next themes/next</code>克隆项目到<code>themes/next</code>目录</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411214142.png" alt="" /></p>
</li>
<li>
<p><strong>启用主题</strong>，编辑<code>blog</code>目录下的<code>_config.yml</code>，修改<code>theme: next</code>，保存退出</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411214612.png" alt="" /></p>
</li>
<li>
<p><strong>验证修改</strong>，执行<code>hexo clean</code>清理缓存，在执行<code>hexo s --debug</code>生成本地页面，浏览器使用<code>http://localhost:4000</code>查看修改是否生效，<strong>注意是<code>http</code></strong></p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411215035.png" alt="" /></p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411215315.png" alt="" /></p>
</li>
</ol>
<hr />
<h2 id="个性化设置"><a class="markdownIt-Anchor" href="#个性化设置"></a> 个性化设置</h2>
<h3 id="设置站点属性"><a class="markdownIt-Anchor" href="#设置站点属性"></a> 设置站点属性</h3>
<ol>
<li>
<p>打开站点配置文件<code>blog/_config.yml</code>，<strong>注意是位于主目录下的_config.yml</strong></p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411220553.png" alt="" /></p>
</li>
<li>
<p>在文件开头按需修改<strong>站点名<code>title</code>、站点描述<code>description</code>、作者<code>author</code>、语言<code>language</code></strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">语言</th>
<th style="text-align:center">代码</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">简体中文</td>
<td style="text-align:center">zh-CN</td>
</tr>
<tr>
<td style="text-align:center">英语</td>
<td style="text-align:center">en（默认）</td>
</tr>
<tr>
<td style="text-align:center">日文</td>
<td style="text-align:center">ja</td>
</tr>
</tbody>
</table>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411220257.png" alt="" /></p>
</li>
<li>
<p>如有需要可以参照 <em>安装 → 4.</em> 进行验证</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411220921.png" alt="" /></p>
</li>
</ol>
<h3 id="修改主题样式"><a class="markdownIt-Anchor" href="#修改主题样式"></a> 修改主题样式</h3>
<ol>
<li>
<p><strong>进入<code>themes/next</code>目录</strong>，打开该目录下的<code>_config.yml</code>进行主题设置</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411221749.png" alt="" /></p>
</li>
<li>
<p>找到 <code>scheme</code> 关键字，会看到有四行 <code>scheme</code> 的配置，将需要启用的 <code>scheme</code> 前面<strong>注释 <code>#</code> 去除</strong>，同时把原来的加上注释 <code>#</code> 即可</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411221917.png" alt="" /></p>
</li>
<li>
<p>可将下方 <code>Dark Mode</code> 的 <code>false</code> 改为  true 以开启黑暗模式</p>
</li>
</ol>
<h3 id="设置菜单"><a class="markdownIt-Anchor" href="#设置菜单"></a> 设置菜单</h3>
<ol>
<li>
<p>同一个文档，找到<code>menu</code>字段（一般在主题样式下一项），修改其下配置内容即可</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411222658.png" alt="" /></p>
</li>
<li>
<p>根据需要注释掉<code>#</code>以开启或关闭，除默认开启的 <code>home</code> 和 <code>archives</code>外，其余选项应额外配置新文件夹（具体步骤有需求再补充），<code>格式为： about(菜单项):/about/ (对应目录)|| fa(图标) fa-user (图标名称)</code></p>
 <figure class="highlight c"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  <span class="built_in">home</span>: / || fa fa-<span class="built_in">home</span>  <span class="comment">// 主页</span></span><br><span class="line">  <span class="meta">#about: /about/ || fa fa-user  <span class="comment">// 关于页面</span></span></span><br><span class="line">  <span class="meta">#tags: /tags/ || fa fa-tags  <span class="comment">// 标签页</span></span></span><br><span class="line">  <span class="meta">#categories: /categories/ || fa fa-th  <span class="comment">// 分类页</span></span></span><br><span class="line">  archives: /archives/ || fa fa-archive  <span class="comment">// 归档页</span></span><br><span class="line">  <span class="meta">#schedule: /schedule/ || fa fa-calendar  <span class="comment">// </span></span></span><br><span class="line">  <span class="meta">#sitemap: /sitemap.xml || fa fa-sitemap  <span class="comment">// </span></span></span><br><span class="line">  <span class="meta">#commonweal: /404/ || fa fa-heartbeat  <span class="comment">// 公益 404</span></span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="设置头像"><a class="markdownIt-Anchor" href="#设置头像"></a> 设置头像</h3>
<ol>
<li>
<p>找到并<strong>修改 <code>avatar</code>项</strong></p>
 <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  # Replace the <span class="keyword">default</span> <span class="built_in">image</span> <span class="keyword">and</span> <span class="built_in">set</span> the url here.</span><br><span class="line">  url: #/images/avatar.gif  <span class="comment">// 头像图片链接</span></span><br><span class="line">  # If <span class="literal">true</span>, the avatar will be dispalyed in <span class="built_in">circle</span>.</span><br><span class="line">  rounded: <span class="literal">false</span>  <span class="comment">// 是否显示为圆形</span></span><br><span class="line">  # If <span class="literal">true</span>, the avatar will be rotated with the <span class="built_in">cursor</span>.</span><br><span class="line">  rotated: <span class="literal">false</span>  <span class="comment">// 获得焦点时是否旋转</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>头像图片由 <code>url</code> 指定，有<strong>三种指定方式</strong></p>
<table>
<thead>
<tr>
<th style="text-align:center">方式</th>
<th style="text-align:center">方法</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Hexo 目录</td>
<td style="text-align:center">将头像文件放置在<code>blog/source/uploads/</code>目录下<code>(blog为站点主目录)</code>，<br />若目录不存在需手动新建；之后修改 <code>url:/uploads/&lt;fileName.jpg/png/...&gt;</code></td>
</tr>
<tr>
<td style="text-align:center">NexT目录</td>
<td style="text-align:center">将头像头像文件放在 <code>blog/themes/next/source/images/</code>目录，<br />之后修改 <code>url:/images/&lt;fileName.jpg/png/...&gt;</code></td>
</tr>
<tr>
<td style="text-align:center">Internet url</td>
<td style="text-align:center">指定带有图像绝对路径的任何外部URL： <code>http(s)://example.com/avatar.png</code></td>
</tr>
</tbody>
</table>
</li>
</ol>
<h3 id="阅读进度"><a class="markdownIt-Anchor" href="#阅读进度"></a> 阅读进度</h3>
<ul>
<li>
<p>设置 <code>reading_progress.enable</code> 的值为 <code>true</code> 以启用</p>
  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"># Reading progress bar</span><br><span class="line">reading_progress:</span><br><span class="line">  enable: <span class="literal">false</span>  <span class="comment">// 是否启用进度显示</span></span><br><span class="line">  # Available values: top | bottom</span><br><span class="line">  <span class="built_in">position</span>: top  <span class="comment">// 位置</span></span><br><span class="line">  color: <span class="string">"#37c6c0"</span>  <span class="comment">// 颜色</span></span><br><span class="line">  <span class="built_in">height</span>: <span class="number">3</span>px  <span class="comment">// 大小</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="书签"><a class="markdownIt-Anchor" href="#书签"></a> 书签</h3>
<ol>
<li>
<p>允许保存阅读进度。只需单击<strong>页面左上方的书签</strong>图标（如🔖）即可保存滚动位置。当下次访问时，可以自动恢复每个页面的最后滚动位置。</p>
</li>
<li>
<p>设置 <code>bookmark.enable</code> 的值为 <code>true</code> 以启用</p>
 <figure class="highlight c"><table><tr><td class="code"><pre><span class="line">bookmark:</span><br><span class="line">  enable: <span class="literal">false</span>  <span class="comment">// 是否启用</span></span><br><span class="line">  # Customize the color of the bookmark.</span><br><span class="line">  color: <span class="string">"#222"</span>  <span class="comment">// 颜色</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="阅读全文"><a class="markdownIt-Anchor" href="#阅读全文"></a> 阅读全文</h3>
<ul>
<li>
<p><code>Hexo</code> <strong>推荐做法</strong>是在文本中适当的位置写入 <strong><code>&lt;!--more--&gt;</code></strong>，手动设置显示摘录长度</p>
</li>
<li>
<p><code>NexT</code>主题同时也支持<strong>默认提取</strong> <code>Front Matter</code> 中的 <code>description</code> 作为摘录内容</p>
  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line">title: First_Article</span><br><span class="line">date: <span class="number">2020</span><span class="number">-03</span><span class="number">-31</span> <span class="number">22</span>:<span class="number">16</span>:<span class="number">10</span></span><br><span class="line">mathjax: <span class="literal">true</span></span><br><span class="line">description: '摘录信息'</span><br><span class="line">tags:</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200412015002.png" alt="" /></p>
</li>
</ul>
<h3 id="侧边栏回溯按钮"><a class="markdownIt-Anchor" href="#侧边栏回溯按钮"></a> 侧边栏回溯按钮</h3>
<ul>
<li>
<p>修改 <code>_config.yml</code> 的 <strong><code>back2top</code></strong> 项</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">back2top:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span>  <span class="comment"># 开启回溯按钮 默认在右下角</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  sidebar: <span class="literal">false</span>  <span class="comment"># 是否调整按钮到侧边栏 </span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  scrollpercent: <span class="literal">false</span>  <span class="comment"># 是否在按钮上显示当前阅读进度</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200412020619.png" alt="" /></p>
</li>
</ul>
<h3 id="字数统计"><a class="markdownIt-Anchor" href="#字数统计"></a> 字数统计</h3>
<ul>
<li>
<p><strong>返回站点主目录 <code>blog</code></strong>，使用 <code>npm install hexo-symbols-count-time</code> 安装<strong>插件</strong></p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200412151934.png" alt="" /></p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200412152043.png" alt="" /></p>
</li>
</ul>
<h3 id="添加标签和分类界面"><a class="markdownIt-Anchor" href="#添加标签和分类界面"></a> 添加标签和分类界面</h3>
<ol>
<li>
<p><strong>返回站点主目录 <code>blog</code></strong>，执行 <code>hexo new page tags</code> 新建 <code>tags</code> 页面，</p>
<p>执行 <code>hexo new page categories</code> 新建 <code>categories</code> 页面</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>编辑<strong>新建的页面目录</strong>中的<code>index.md</code>文件，<strong>添加 <code>type: tags(categories)</code></strong></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim <span class="built_in">source</span>/tags/index.md</span><br><span class="line">vim <span class="built_in">source</span>/categories/index.md</span><br></pre></td></tr></table></figure>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2020-04-12 15:24:39</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"tags"</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2020-04-12 15:27:26</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"categories"</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>编辑<strong>主题配置文件</strong> <code>themes/next/_config.yml</code>，在 <code>menu</code> 项中<strong>解除 <code>tags</code> 和 <code>categories</code> 的注释 <code>#</code></strong></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># External url should start with http:// or https://</span></span><br><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  <span class="comment">#about: /about/ || fa fa-user</span></span><br><span class="line">  <span class="comment">#tags: /tags/ || fa fa-tags  删去# 解除此项注释</span></span><br><span class="line">  <span class="comment">#categories: /categories/ || fa fa-th  删去# 解除此项注释</span></span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在编写 <code>Front Matter</code> 时，添加 <strong><code>tag</code> 和 <code>categorie</code></strong> 项</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">title: First_Article</span><br><span class="line">date: 2020-03-31 22:16:10</span><br><span class="line">description: <span class="string">'摘录信息'</span></span><br><span class="line">tags: </span><br><span class="line">	- other</span><br><span class="line">	- OTHER</span><br><span class="line">categories: Test</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>重新生成页面验证修改</p>
 <img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200412155629.png" style="zoom:50%;" />
</li>
</ol>
<hr />
<h2 id="第三方服务"><a class="markdownIt-Anchor" href="#第三方服务"></a> 第三方服务</h2>
<h3 id="数学公式渲染"><a class="markdownIt-Anchor" href="#数学公式渲染"></a> 数学公式渲染</h3>
<ol>
<li>
<p>返回<strong>站点主目录</strong> <code>blog</code> ，<strong>卸载</strong>原始渲染器 <code>hexo-renderer-marked</code>，<strong>安装</strong>渲染器 <code>hexo-renderer-markdown-it-plus</code></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm un hexo-renderer-marked</span><br><span class="line">npm i hexo-renderer-markdown-it-plus</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411234934.png" alt="" /></p>
</li>
<li>
<p>在 <code>themes/next/_config.yml</code> 中查找到 <strong><code>katex</code></strong> 项并修改 <code>enable</code> 值为 <code>true</code></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-renderer-markdown-it-plus (or hexo-renderer-markdown-it with markdown-it-katex plugin) required for full Katex support.</span></span><br><span class="line"> katex:</span><br><span class="line">   <span class="built_in">enable</span>: <span class="literal">false</span> <span class="comment"># 是否启用</span></span><br><span class="line">   <span class="comment"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span></span><br><span class="line">   copy_tex: <span class="literal">false</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>注意事项</strong>：</p>
<ul>
<li>要使用<code>LaTex</code>，<strong>需要在<code>Front Matter</code>中添加 <code>mathjax: true</code></strong>(注意冒号后空格)，才能被渲染</li>
<li>语法上也要严格规范，<code>LaTex</code> 的单行公式  <code>$ $</code>，<strong>美元符号与内容之间不要留空格</strong>，可能导致渲染失败</li>
<li>安装了新插件后<strong>支持 <code>@[TOC]</code>生成目录</strong>，注意不能省略 <code>@</code>，这与 <code>Typora</code> 有区别</li>
</ul>
</li>
</ol>
<h3 id="本地搜索"><a class="markdownIt-Anchor" href="#本地搜索"></a> 本地搜索</h3>
<ol>
<li>
<p>在<strong>站点主目录</strong><code>blog</code>下，<strong>安装</strong>插件 <code>hexo-generator-searchdb</code></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>安装完成后，编辑 <strong><code>blog</code> 目录</strong>下的 <code>_config.yml</code>，在文件末尾添加 <code>search</code> 项，<strong>注意缩进</strong></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Search</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>编辑配置文件</strong><code>themes/next/_config.yml</code>，<strong>修改</strong><code>local_search</code>项的<code>enable</code>值为<code>true</code></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim themes/next/_config.yml</span><br></pre></td></tr></table></figure>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  <span class="comment"># 是否启用本地搜索</span></span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 是否自动显示结果 auto 自动  manual 手动</span></span><br><span class="line">  trigger: auto</span><br><span class="line">  <span class="comment"># 显示每篇文章的前n个结果 设置-1则显示所有结果</span></span><br><span class="line">  top_n_per_article: 1</span><br><span class="line">  unescape: <span class="literal">false</span></span><br><span class="line">  preload: <span class="literal">false</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>执行 <code>hexo clean &amp;&amp; hexo s</code> 重新生成页面后，在 <code>http://local:4000</code> 查看本地页面，左侧栏出现搜索选项</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200412162619.png" alt="" /></p>
</li>
<li>
<p>后续按需部署到远端即可</p>
</li>
</ol>
<hr />
<h2 id="备注"><a class="markdownIt-Anchor" href="#备注"></a> 备注</h2>
<ul>
<li>参考：<a href="https://theme-next.org/docs/getting-started/" target="_blank" rel="noopener">NexT v6.0+ 官方文档</a>，<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">NexT v5.1中文文档</a></li>
</ul>
]]></content>
      <categories>
        <category>BuildBlog</category>
      </categories>
      <tags>
        <tag>NexT</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Win10 GitHub Hexo 搭建个人博客</title>
    <url>/2020/03/31/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Win10%20%20Hexo%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E7%8E%AF%E5%A2%83">环境</a></li>
<li><a href="#%E5%88%9D%E6%AD%A5%E6%90%AD%E5%BB%BA">初步搭建</a></li>
<li><a href="#%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0">发布文章</a></li>
<li><a href="#%E9%83%A8%E7%BD%B2%E8%BF%9C%E7%AB%AF">部署远端</a></li>
<li><a href="#%E5%A4%87%E6%B3%A8">备注</a>
<ul>
<li><a href="#%E9%85%8D%E7%BD%AEssh">配置SSH</a></li>
<li><a href="#%E6%9D%82%E9%A1%B9">杂项</a></li>
</ul>
</li>
<li><a href="#%E5%8F%82%E8%80%83">参考</a></li>
</ul>
</p>
<hr />
<h1 id="win10-github-hexo-搭建个人博客"><a class="markdownIt-Anchor" href="#win10-github-hexo-搭建个人博客"></a> Win10 GitHub Hexo 搭建个人博客</h1>
<h2 id="环境"><a class="markdownIt-Anchor" href="#环境"></a> 环境</h2>
<ul>
<li>git    2.26.0</li>
<li>node.js    12.16.1</li>
<li>npm    6.13.4</li>
</ul>
<h2 id="初步搭建"><a class="markdownIt-Anchor" href="#初步搭建"></a> 初步搭建</h2>
<ol>
<li>
<p>更换淘宝源，<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p>
<p>若出现 <code>WARN mkdirp</code>（如下图），可视心情决定执行 <code>cnpm install -g mkdirp</code> 更新 <code>mkdirp</code> 版本</p>
 <img src="https://i.loli.net/2020/03/31/qDK7ezYS2wIVgAn.png" style="zoom:80%;" />
</li>
<li>
<p><code>cnpm -v</code> 验证换源结果</p>
 <img src="https://i.loli.net/2020/03/31/fLwVHJQ6ymEevZk.png" style="zoom:80%;" />
</li>
<li>
<p><code>cnpm install -g hexo-cli</code> 安装 Hexo</p>
 <img src="https://i.loli.net/2020/03/31/Z1qzRaIeoMDgPQ2.png" style="zoom:70%;" />
</li>
<li>
<p><code>hexo -v</code> 验证安装结果</p>
 <img src="https://i.loli.net/2020/03/31/8JXGocheK2LaPZq.png" style="zoom:80%;" />
</li>
<li>
<p>在自定义位置创建文件夹，作为<strong>博客归档</strong>位置</p>
</li>
<li>
<p><code>cd &lt;dirname&gt;(如 blog)</code> 进入文件夹目录，执行 <code>hexo init</code> 进行初始化</p>
 <img src="https://i.loli.net/2020/03/31/M8O1vfGoYq39zxF.png" style="zoom:100%;" />
</li>
<li>
<p><code>dir</code> 查看目录，有文件生成即可</p>
 <img src="https://i.loli.net/2020/03/31/mksoWudBpMCQxXR.png" style="zoom:80%;" />
</li>
<li>
<p><code>hexo s</code> 启动 Hexo</p>
 <img src="https://i.loli.net/2020/03/31/y2lNXHxe5I3U1FG.png" style="zoom:100%;" />
</li>
<li>
<p>在浏览器中使用 <code>http://localhost:4000</code> 访问博客页面</p>
 <img src="https://i.loli.net/2020/03/31/miFJO7TktwK5cQP.png" style="zoom:37%;" />
<hr />
</li>
</ol>
<h2 id="发布文章"><a class="markdownIt-Anchor" href="#发布文章"></a> 发布文章</h2>
<ol>
<li>
<p><code>Crtl+C</code>强制终止或关闭cmd窗口，切换到<code>Git Bash</code>，主要是较熟悉Shell窗口的操作，可以根据自身需要选择继续使用cmd</p>
</li>
<li>
<p><strong>确保进入到博客归档目录</strong>，<code>hexo n &lt;fileName&gt;</code><strong>创建新文件</strong>，不指定后缀名则默认<code>.md</code>文件，创建的文件默认位于<code>./source/_post/</code></p>
 <img src="https://i.loli.net/2020/03/31/UxjtOV2YsMFpl9f.png" style="zoom:100%;" />
</li>
<li>
<p><code>cd source/_posts/</code> 切换到文章所在目录，使用<code>vim</code>等编辑器写入文章内容</p>
 <img src="https://i.loli.net/2020/03/31/8afQhSLTUkgHrzP.png" style="zoom:100%;" />
</li>
<li>
<p><strong>切换回归档目录</strong>，<code>hexo clean</code> <strong>清除存档</strong>，<code>hexo g</code> <strong>重新生成页面</strong>，可以看到最后是新添加的文章</p>
 <img src="https://i.loli.net/2020/03/31/eGN7uklYP8yRngp.png" style="zoom:67%;" />
 <img src="https://i.loli.net/2020/03/31/1i3VqSvhm4XBnDs.png" style="zoom:60%;" />
</li>
<li>
<p><code>hexo s</code> <strong>重新建立连接</strong>，在浏览器查看修改效果，可以看到新博客生成</p>
 <img src="https://i.loli.net/2020/03/31/1IGgieS8UzXAm3J.png" style="zoom:100%;" />
<hr />
</li>
</ol>
<h2 id="部署远端"><a class="markdownIt-Anchor" href="#部署远端"></a> 部署远端</h2>
<ol>
<li>
<p>在 GitHub 上建立一个<strong>空仓库</strong>，<strong>仓库名为 <code>&lt;username&gt;.github.io</code></strong>，<code>&lt;username&gt;</code> 是用户名，<code>.github.io</code> 不可改变</p>
 <img src="https://i.loli.net/2020/03/31/8vreVHtd27hncmE.png" style="zoom:100%;" />
</li>
<li>
<p><code>cnpm install --save hexo-deployer-git</code> <strong>安装扩展</strong></p>
<p><img src="https://i.loli.net/2020/03/31/m7rczy3QDOJvYXS.png" alt="" /></p>
</li>
<li>
<p><code>vim _config.yml</code>设置 <code>_config.yml</code> 文件，<strong>修改文件末尾的 <code>Deployment</code></strong></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/&lt;userName&gt;/&lt;userName&gt;.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p><img src="https://i.loli.net/2020/03/31/kYop13nMRt2lqWm.png" alt="" /></p>
</li>
<li>
<p>运行 <code>hexo d</code> <strong>实现部署</strong>，期间可能会出现 Github 登录窗口，填写登录即可</p>
 <img src="https://i.loli.net/2020/03/31/rvVELdaHO9NmPnA.png" style="zoom:33%;" />
 <img src="https://i.loli.net/2020/03/31/LjqigUKsxboahXQ.png" style="zoom:100%;" />
</li>
<li>
<p>配置成功后，刷新 GitHub 对应空仓库即可看见新加入的文件</p>
<p><img src="https://i.loli.net/2020/03/31/yhVS5iMqOgdG8nl.png" alt="" /></p>
</li>
<li>
<p>此时浏览器使用 <code>https://&lt;userName&gt;.github.io/</code>即可访问，<strong>注意是 <code>https</code></strong></p>
<p><img src="https://i.loli.net/2020/03/31/3KXBEFe2U7ftsDZ.png" alt="image-20200331230620119" /></p>
<p><img src="https://i.loli.net/2020/03/31/Lw2auRZnSTQBE8H.png" alt="image-20200331230645440" /></p>
</li>
<li>
<p>至此，博客搭建基本完成，后续博文添加可<strong>将文件放在 <code>source/_posts/</code> 目录下</strong>，然后运行命令 <strong><code>hexo g</code> 生成更新文件</strong>，<strong><code>hexo d</code> 重新部署</strong>到 GitHub 仓库中，即可实现更新。</p>
<p><img src="https://i.loli.net/2020/03/31/g1UNyIJ4QivH9ah.png" alt="image-20200331232445188" /></p>
<hr />
</li>
</ol>
<h2 id="备注"><a class="markdownIt-Anchor" href="#备注"></a> 备注</h2>
<h3 id="配置ssh"><a class="markdownIt-Anchor" href="#配置ssh"></a> 配置SSH</h3>
<ol>
<li>
<p>发现使用<code>http</code>部署，在上传时往往需要重新输入 Github 账号密码，而使用 SSH 配置则不需要，且更稳定。以下是具体步骤</p>
</li>
<li>
<p>开启 <code>git bash</code> 进入 <code>blog</code> 目录，执行 <code>git init</code> 初始化</p>
</li>
<li>
<p>执行<code>ssh-keygen -t rsa -C &quot;&lt;emailAddress（注册所用邮箱名）&gt;&quot;</code>可在<strong>系统用户目录</strong>创建隐藏<code>.ssh</code>文件夹，回车默认设置即可。完成后<code>.ssh</code>文件夹中有<code>id_rsa</code>和<code>id_rsa.pub</code>文件，<strong>其中<code>.pub</code>是公钥</strong>。如果已经存在这些文件，跳过该步骤</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411192808.png" alt="" /></p>
</li>
<li>
<p>在 GitHub 账户头像下拉菜单的 <strong>settings <strong>中选择 <strong><code>SSH and GPG key</code> → <code>New SSH Key</code></strong>。标题任意，Key 复制</strong><code>id_rsa.pub</code>内容</strong>。添加成功后<code>SSH keys</code>即可见到加入项</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411193258.png" alt="" /></p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411193533.png" alt="" /></p>
</li>
<li>
<p>返回 <strong><code>blog</code> 目录</strong>的 <code>gitbash</code> 设置 <code>_config.yml</code> 文件，修改文件末尾的 <code>Deployment</code>。</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411195600.png" alt="" /></p>
</li>
<li>
<p>修改 <code>ropo</code> 项为 <strong><code>git@github.com:&lt;userName&gt;/&lt;userName&gt;.github.io.git</code></strong></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:&lt;userName&gt;/&lt;userName&gt;.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200411195214.png" alt="" /></p>
</li>
<li>
<p>修改后保存退出，即可再次尝试上传博文验证修改结果。</p>
</li>
</ol>
<h3 id="杂项"><a class="markdownIt-Anchor" href="#杂项"></a> 杂项</h3>
<ul>
<li>
<p>网络原因，实测更新会有一段时间的<strong>延迟</strong>，请耐心等待几分钟再刷新。验证是否更新成功，可以在 GitHub 相应仓库中查看文件夹更新时间</p>
</li>
<li>
<p>更换主题，会在另外的文章再行介绍</p>
</li>
<li>
<p>上传命令可直接简化为 <strong><code>hexo g -d</code></strong></p>
</li>
<li>
<p>如果是外部博客文件注意添加<strong>使用 <code>YAML Front Matter</code></strong>，否则<code>hexo</code>无法准确识别</p>
<hr />
</li>
</ul>
<h2 id="参考"><a class="markdownIt-Anchor" href="#参考"></a> 参考</h2>
<ul>
<li><a href="https://www.bilibili.com/video/BV1Yb411a7ty/" target="_blank" rel="noopener">参考视频</a></li>
</ul>
]]></content>
      <categories>
        <category>BuildBlog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>NexT Valine 留言板页面配置</title>
    <url>/2020/04/12/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/NexT%20%E7%95%99%E8%A8%80%E6%9D%BF%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E5%88%9B%E5%BB%BA%E9%A1%B5%E9%9D%A2">创建页面</a></li>
<li><a href="#%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">修改配置文件</a></li>
<li><a href="#valine-%E9%85%8D%E7%BD%AE%E4%B8%8E%E6%93%8D%E4%BD%9C">Valine 配置与操作</a></li>
<li><a href="#%E6%9C%80%E5%90%8E%E9%83%A8%E7%BD%B2">最后部署</a></li>
<li><a href="#%E5%A4%87%E6%B3%A8">备注</a></li>
</ul>
</p>
<h1 id="next-valine-留言板页面配置"><a class="markdownIt-Anchor" href="#next-valine-留言板页面配置"></a> NexT Valine 留言板页面配置</h1>
<blockquote>
<p>留言板生成本质可以视为新建一个自定义页面，操作过程与标签、分类页的创建大同小异</p>
</blockquote>
<h2 id="创建页面"><a class="markdownIt-Anchor" href="#创建页面"></a> 创建页面</h2>
<ol>
<li>
<p>在网站主目录 <code>blog</code>下执行 <code>hexo new page GuestBook</code></p>
<blockquote>
<p>INFO  Created: D:\blog\source\GuestBook\<a href="http://index.md" target="_blank" rel="noopener">index.md</a></p>
</blockquote>
</li>
<li>
<p>编辑新页面的 <code>index.md</code> 文件，修改其 <code>Front Matter</code>，添加 <code>type</code> 项</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim <span class="built_in">source</span>/GuestBook/index.md</span><br></pre></td></tr></table></figure>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: GuestBook</span><br><span class="line">date: 2020-04-12 22:35:28</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"GuestBook"</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="修改配置文件"><a class="markdownIt-Anchor" href="#修改配置文件"></a> 修改配置文件</h2>
<ol>
<li>
<p>编辑主题配置文件 <code>themes/next/_config.yml</code>，在 <code>menu</code> 中仿照已有格式添加 <code>GuestBook</code></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim themes/next/_config.yml</span><br></pre></td></tr></table></figure>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  <span class="comment"># about: /about/ || fa fa-user</span></span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line">  <span class="comment"># 按已有格式 添加GuestBook项</span></span><br><span class="line">  GuestBook: /GuestBook/ || fa fa-paper-plane</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>规定格式为 <code>&lt;menuName&gt;: /&lt;dirName&gt;/ || &lt;link&gt; &lt;iconName&gt;</code></p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">menuName</td>
<td style="text-align:center">显示在页面菜单栏中的页面名</td>
</tr>
<tr>
<td style="text-align:center">dirName</td>
<td style="text-align:center"><code>hexo new page</code> 时，使用的页面名</td>
</tr>
<tr>
<td style="text-align:center">link</td>
<td style="text-align:center">指向网站内相对URL的图标目标链接，初始使用 <code>fa</code></td>
</tr>
<tr>
<td style="text-align:center">iconName</td>
<td style="text-align:center">图标名称，可自行替换其它，<code>fa</code> 使用的是 <a href="https://fontawesome.com/" target="_blank" rel="noopener"><code>Font Awesome</code></a></td>
</tr>
</tbody>
</table>
</li>
</ol>
<h2 id="valine-配置与操作"><a class="markdownIt-Anchor" href="#valine-配置与操作"></a> Valine 配置与操作</h2>
<p>详细请参见博客：<a href="https://easttang.github.io/2020/04/12/NexT%20Valine%20%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/" target="_blank" rel="noopener">NexT Valine 评论系统配置</a></p>
<h2 id="最后部署"><a class="markdownIt-Anchor" href="#最后部署"></a> 最后部署</h2>
<ol>
<li>
<p>修改保存后，先执行 <code>hexo clean &amp;&amp; hexo s</code>  在本地界面 <code>http://local:4000</code> 查看效果</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200412231418.png" alt="" /></p>
</li>
<li>
<p>后执行 <code>hexo clean &amp;&amp; hexo g -d</code> 生成新页面文件，并部署到远端</p>
</li>
</ol>
<h2 id="备注"><a class="markdownIt-Anchor" href="#备注"></a> 备注</h2>
<ul>
<li>菜单栏中<code>GuestBook</code>可以修改名称，同样只需修改主题配置文件 <code>themes/next/_config.yml</code>的 <code>menu</code> 项，将添加的 <code>&lt;menuName&gt;</code>即 <code>GuestBook</code> 替换即可，只修改冒号前的即可。为保证稳定性，建议若修改为中文，可以考虑将站点语言设为 <code>en</code></li>
<li>如有需要，其他自定义页面配置方法与此类似</li>
</ul>
]]></content>
      <categories>
        <category>BuildBlog</category>
      </categories>
      <tags>
        <tag>NexT</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>流量控制</title>
    <url>/2020/04/20/%E8%AE%A1%E7%BD%91/%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6">流量控制</a>
<ul>
<li><a href="#%E6%A6%82%E5%BF%B5">概念</a></li>
<li><a href="#%E6%8E%A7%E5%88%B6%E6%96%B9%E6%B3%95">控制方法</a>
<ul>
<li><a href="#%E5%81%9C%E6%AD%A2%E7%AD%89%E5%BE%85%E5%8D%8F%E8%AE%AE">停止等待协议</a></li>
<li><a href="#%E4%BF%A1%E9%81%93%E5%88%A9%E7%94%A8%E7%8E%87">信道利用率</a></li>
<li><a href="#%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E5%8D%8F%E8%AE%AE">滑动窗口协议</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</p>
<h2 id="流量控制"><a class="markdownIt-Anchor" href="#流量控制"></a> 流量控制</h2>
<h3 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h3>
<ol>
<li><strong>发送过快</strong>或<strong>接收过慢</strong>会导致传输出错</li>
<li>
<ul>
<li>数据链路层的流量控制是<strong>点对点</strong>的，针对<strong>主机之间</strong>；</li>
<li>传输层是<strong>端对端</strong>的，针对<strong>结点</strong></li>
</ul>
</li>
<li>
<ul>
<li><strong>数据链路层</strong>的控制手段：接收方接受不下就<strong>不回复确认帧</strong>；</li>
<li><strong>传输层</strong>的手段：<strong>接收段</strong>向发送端出示<strong>窗口公告</strong>（接受能力如何、缓冲空间剩余等），由<strong>发送方自我调节</strong></li>
</ul>
</li>
</ol>
<h3 id="控制方法"><a class="markdownIt-Anchor" href="#控制方法"></a> 控制方法</h3>
<h4 id="停止等待协议"><a class="markdownIt-Anchor" href="#停止等待协议"></a> 停止等待协议</h4>
<ul>
<li>
<p>每发送完一个分组就<strong>停止</strong>发送，<strong>等待</strong>对方确认，<strong>收到确认后再发送</strong>下一个分组</p>
  <img src="https://i.loli.net/2020/04/20/lNmCfLES8IMP1GX.png" alt="img" style="zoom:50%;" />
</li>
<li>
<p>应用于<strong>半双工通信</strong>，解决<strong>丢包</strong>问题</p>
</li>
<li>
<p><strong>超时计时器</strong>：每<strong>发送完</strong>一帧就启动，设置时间<strong>略长于</strong>帧传输的平均RTT，收到确认帧<strong>强行终止</strong>，<strong>超时</strong>则<strong>重传</strong>该帧</p>
</li>
<li>
<p>发送完一帧<strong>需备份</strong>，确保可能重传</p>
</li>
<li>
<p>数据帧和确认帧<strong>需编号</strong>，防止重复接收</p>
</li>
<li>
<p><strong>有差错</strong>情况<strong>处理</strong>方法</p>
<p><img src="https://i.loli.net/2020/04/20/GMNpVlQjE8UkeZC.png" alt="img" /></p>
</li>
<li>
<p><strong>信道利用率低</strong>，<strong>效率低</strong></p>
</li>
</ul>
<h4 id="信道利用率"><a class="markdownIt-Anchor" href="#信道利用率"></a> 信道利用率</h4>
<ul>
<li>发送方在一个<strong>发送周期</strong>内，有效发送的数据<strong>所需时间</strong>占<strong>整个周期</strong>的比率</li>
<li><strong>发送周期</strong>：从开始发送数据到收到第一个确认帧为止</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">信</mi><mi mathvariant="normal">道</mi><mi mathvariant="normal">利</mi><mi mathvariant="normal">用</mi><mi mathvariant="normal">率</mi><mo>=</mo><mfrac><mrow><mi>L</mi><mi mathvariant="normal">/</mi><mi>C</mi></mrow><mi>T</mi></mfrac><mspace linebreak="newline"></mspace><mi>L</mi><mo>:</mo><mi>T</mi><mi mathvariant="normal">内</mi><mi mathvariant="normal">发</mi><mi mathvariant="normal">送</mi><mi>L</mi><mi mathvariant="normal">比</mi><mi mathvariant="normal">特</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">据</mi><mspace linebreak="newline"></mspace><mi>C</mi><mi mathvariant="normal">：</mi><mi mathvariant="normal">发</mi><mi mathvariant="normal">送</mi><mi mathvariant="normal">方</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">据</mi><mi mathvariant="normal">传</mi><mi mathvariant="normal">输</mi><mi mathvariant="normal">率</mi><mspace linebreak="newline"></mspace><mi>T</mi><mi mathvariant="normal">：</mi><mi mathvariant="normal">发</mi><mi mathvariant="normal">送</mi><mi mathvariant="normal">周</mi><mi mathvariant="normal">期</mi></mrow><annotation encoding="application/x-tex">信道利用率 = \frac {L/C} T \\ L:T内发送L比特数据 \\ C：发送方的数据传输率 \\ T：发送周期</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">利</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mord mtight">/</span><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">发</span><span class="mord cjk_fallback">送</span><span class="mord mathdefault">L</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">发</span><span class="mord cjk_fallback">送</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">率</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">发</span><span class="mord cjk_fallback">送</span><span class="mord cjk_fallback">周</span><span class="mord cjk_fallback">期</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">信</mi><mi mathvariant="normal">道</mi><mi mathvariant="normal">吞</mi><mi mathvariant="normal">吐</mi><mi mathvariant="normal">率</mi><mo>=</mo><mi mathvariant="normal">信</mi><mi mathvariant="normal">道</mi><mi mathvariant="normal">利</mi><mi mathvariant="normal">用</mi><mi mathvariant="normal">率</mi><mo>×</mo><mi mathvariant="normal">发</mi><mi mathvariant="normal">送</mi><mi mathvariant="normal">方</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">发</mi><mi mathvariant="normal">送</mi><mi mathvariant="normal">速</mi><mi mathvariant="normal">率</mi></mrow><annotation encoding="application/x-tex">信道吞吐率 = 信道利用率 \times 发送方的发送速率</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">吞</span><span class="mord cjk_fallback">吐</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">利</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">发</span><span class="mord cjk_fallback">送</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">发</span><span class="mord cjk_fallback">送</span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">率</span></span></span></span></li>
</ul>
<blockquote>
<p>例题:一个信道的数据传输率为4kb/s,单向传播时延为 30ms,如果使停止-等待协议的信道最大利用率达到80% 要求的数据帧长度至少为()。</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>L</mi><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>4</mn><mi>k</mi><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo stretchy="false">)</mo></mrow><mrow><mi>L</mi><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>4</mn><mi>k</mi><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo stretchy="false">)</mo><mo>+</mo><mn>2</mn><mo>×</mo><mn>30</mn><mi>m</mi><mi>s</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mo>=</mo><mfrac><mi>L</mi><mrow><mi>L</mi><mo>+</mo><mn>2</mn><mo>×</mo><mn>30</mn><mi>m</mi><mi>s</mi><mo>×</mo><mn>4</mn><mo stretchy="false">(</mo><mi>b</mi><mi mathvariant="normal">/</mi><mi>m</mi><mi>s</mi><mo stretchy="false">)</mo></mrow></mfrac><mspace linebreak="newline"></mspace><mo>=</mo><mn>80</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">\frac {L/(4 kb/s)}{L/(4 kb/s)+2\times30ms} \\ = \frac L {L+2\times30ms\times4(b/ms)} \\ = 80\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mord mtight">/</span><span class="mopen mtight">(</span><span class="mord mtight">4</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mord mathdefault mtight">b</span><span class="mord mtight">/</span><span class="mord mathdefault mtight">s</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mbin mtight">×</span><span class="mord mtight">3</span><span class="mord mtight">0</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">s</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mord mtight">/</span><span class="mopen mtight">(</span><span class="mord mtight">4</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mord mathdefault mtight">b</span><span class="mord mtight">/</span><span class="mord mathdefault mtight">s</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.392331em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mbin mtight">×</span><span class="mord mtight">3</span><span class="mord mtight">0</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">s</span><span class="mbin mtight">×</span><span class="mord mtight">4</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">b</span><span class="mord mtight">/</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">s</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">8</span><span class="mord">0</span><span class="mord">%</span></span></span></span></p>
<p>解得 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>=</mo><mn>960</mn><mtext> </mtext><mi>b</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">L=960\ bit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">9</span><span class="mord">6</span><span class="mord">0</span><span class="mspace"> </span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span></span></span></span></p>
<p>注意周期包含<strong>发送时延和两个单向传播时延</strong></p>
</blockquote>
<h4 id="滑动窗口协议"><a class="markdownIt-Anchor" href="#滑动窗口协议"></a> 滑动窗口协议</h4>
<ul>
<li>
<p>概念</p>
<ul>
<li><strong>发送（接收）窗口</strong>：发送方维持<strong>一组</strong>连续的<strong>允许发送</strong>（<strong>接收</strong>）的帧的序号</li>
<li>多个发送窗口可以<strong>依次</strong>发送，不必等待上一窗口收到确认，发送后触发<strong>超时计时器</strong></li>
</ul>
</li>
<li>
<p><strong>后退N帧协议</strong></p>
<ul>
<li>
<p><strong>发送窗口多个</strong>，<strong>接收窗口一个</strong></p>
</li>
<li>
<p>每个<strong>发送窗口</strong>发送帧后<strong>触发计时器</strong>，规定时间内<strong>收到指定确认帧</strong>即发送完成，<strong>窗口后移</strong>一步，超过规定时间则<strong>重发未确认及之后的所有帧</strong></p>
<p><img src="https://i.loli.net/2020/04/20/hTO2YKSQgflP4xA.png" alt="img" /></p>
</li>
<li>
<p><strong>发送方必须响应的三件事</strong></p>
<ol>
<li>
<p><strong>上层的调用</strong>。上层需要发送数据时，检查窗口是否已满，<strong>不满则生成帧并发送</strong>；满则抛回上层，示意等待（实际使用可以先<strong>缓存数据</strong>，<strong>待不满时再发送</strong>）</p>
</li>
<li>
<p>收到ACK时，对n号帧的确认采用<mark>累积确认</mark>的方式，表明此帧以及<strong>之前的所有帧</strong>接收方已收到，所以接收方无需一帧一帧返回ACK，不超时的前提下<strong>选取最后收到的一帧</strong>返回确认即可</p>
<blockquote>
<p>发送方发送：1、2、3、4、5、6</p>
<p>接收方接收：1、2、3、4、5、6</p>
<p>ACK：2、4、5、6</p>
</blockquote>
</li>
<li>
<p><strong>超时事件</strong>，如果出现超时，发送方<strong>重传所有已发送</strong>但未被确认的帧（事实上，若某帧没收到，接收方不会接受编号在其后的其他帧）</p>
<blockquote>
<p>发送方发送：1、2、3、4、5、6，其中3丢失</p>
<p>接收方接收：1、2，没有收到3时，即使4、5、6到来也不会接收</p>
<p>待3的计时器超时，发送方再<strong>重传3、4、5、6四帧</strong></p>
</blockquote>
</li>
</ol>
</li>
<li>
<p><strong>接收方要做的事</strong></p>
<ol>
<li>正确收到n号帧，并且<strong>按序</strong>，则<strong>返回</strong>n号的<strong>ACK</strong>，并将帧<strong>数据</strong>部分<strong>交付</strong>给上层</li>
<li><strong>其余情况都丢弃帧</strong>，并按<strong>最近按序接收</strong>到的帧<strong>重新发送ACK</strong>，接收方<strong>无需缓存任何帧</strong>，只需维护信息——<strong>此时期望的帧序号</strong></li>
</ol>
</li>
<li>
<p><img src="https://i.loli.net/2020/04/20/fIgukRxLBoldTKY.png" alt="" /></p>
</li>
<li>
<p><strong>要点总结</strong></p>
<ul>
<li><mark>累积确认</mark>（偶尔捎带确认）</li>
<li>接收方只<strong>按顺序接收帧</strong>，不按序的直接丢弃</li>
<li>确认<strong>序列号最大</strong>的、<strong>按序到达</strong>的帧</li>
<li>发送窗口最大 <strong>2<sup>n</sup>-1</strong>（n是能标识帧最大数的最小比特数），接收窗口为 <strong>1</strong></li>
</ul>
</li>
</ul>
<blockquote>
<p>数据链路层采用了后退N帧(GBN)协议,发送方已经发送了编号为0~7的帧。当计时器超时时,若发送方只收到0、2、3号帧的确认,则发送方需要重发的帧数是()。</p>
<p>最终3号ACK已被收到，证明之前所有帧顺利接收，故 4、5、6、7 需重传，共<strong>4</strong>个</p>
</blockquote>
<ul>
<li><strong>性能分析</strong>
<ul>
<li>连续发送数据帧<strong>提高了信道利用率</strong></li>
<li>重传时包含了<strong>部分已正确发送</strong>的数据帧，传送效率降低，网络压力增加</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>选择重传协议</strong></p>
<ul>
<li><strong>多个发送窗口</strong>，<strong>多个接收窗口</strong></li>
<li><strong>上层调用</strong>，从上层收到数据，判断发送窗口是否已满，未满则发送，<strong>满则缓存等待或返回上层</strong></li>
<li>收到ACK时，若在发送窗口中，则<strong>标记相应帧为已接收</strong>，否则丢弃不管。如果<strong>标记帧是窗口的下界（第一个窗口）</strong>，则将窗口向后<strong>移动到最近的未确认帧</strong>处。移动后的窗口中若<strong>有未发送的帧</strong>，则<strong>开始发送</strong></li>
<li><strong>超时事件</strong>，每个帧有自己的定时器，<strong>一个超时时间只重传一个帧</strong></li>
<li>接收端窗口滑动过程<img src="https://i.loli.net/2020/04/20/SMmOFLvxRJGVHPK.png" alt="" /></li>
<li><strong>接收方</strong>：<strong>窗口内的帧来者不拒</strong>，不管是否按次序，<strong>都缓存</strong>下来，并发送<strong>相应的</strong>ACK，窗口右<strong>移到最近一个未接收</strong>的帧并提交<strong>已收到的连续一段</strong>给上层</li>
<li><strong>运行过程</strong><img src="https://i.loli.net/2020/04/20/CbQyR3uamweocjH.png" alt="" /></li>
<li><strong>重点总结</strong>
<ul>
<li>对数据帧逐一确认，<strong>收一个确认一个</strong></li>
<li>只重传<strong>出错的帧</strong></li>
<li><strong>接收方有缓存</strong></li>
<li>发送窗口的<strong>长度</strong>应与接收窗口<strong>相等</strong>，且小于2<sup>n-1</sup></li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>差错控制</title>
    <url>/2020/04/19/%E8%AE%A1%E7%BD%91/%E5%B7%AE%E9%94%99%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E5%B7%AE%E9%94%99%E5%88%86%E7%B1%BB">差错分类</a></li>
<li><a href="#%E6%A3%80%E9%94%99%E7%BC%96%E7%A0%81">检错编码</a>
<ul>
<li><a href="#%E5%A5%87%E5%81%B6%E6%A0%A1%E9%AA%8C%E7%A0%81">奇偶校验码</a></li>
<li><a href="#%E5%BE%AA%E7%8E%AF%E5%86%97%E4%BD%99%E7%A0%81">循环冗余码</a></li>
</ul>
</li>
<li><a href="#%E7%BA%A0%E9%94%99%E7%BC%96%E7%A0%81-%E6%B5%B7%E6%98%8E%E7%A0%81">纠错编码 (海明码)</a>
<ul>
<li><a href="#%E7%AE%97%E6%B3%95%E6%AD%A5%E9%AA%A4">算法步骤</a></li>
<li><a href="#%E6%A3%80%E9%94%99%E6%AD%A5%E9%AA%A4">检错步骤</a></li>
</ul>
</li>
</ul>
</p>
<h2 id="差错分类"><a class="markdownIt-Anchor" href="#差错分类"></a> 差错分类</h2>
<ul>
<li><strong>全局性的随机噪声</strong>，信道固有，随机存在，通过<strong>提高信噪比</strong>解决</li>
<li><strong>局部性的冲击噪声</strong>，外界特殊原因，利用<strong>编码技术</strong>解决</li>
<li>差错：位错（比特错）、帧错（丢失13、重复12223、失序132）</li>
<li>链路层服务分类;
<ul>
<li><strong>无确认无连接</strong> → 通信质量好、有线链路</li>
<li><strong>有确认无连接</strong></li>
<li><strong>有确认有连接</strong></li>
<li>后两者多为通信质量差的无线链路，有<strong>确认重传机制</strong></li>
</ul>
</li>
</ul>
<h2 id="检错编码"><a class="markdownIt-Anchor" href="#检错编码"></a> 检错编码</h2>
<h3 id="奇偶校验码"><a class="markdownIt-Anchor" href="#奇偶校验码"></a> 奇偶校验码</h3>
<ul>
<li>
<p><strong>1个奇偶校验位 + n-1个帧信息元</strong></p>
</li>
<li>
<p>使得最终的 n 个比特 “1”的数量为<strong>奇数个</strong> （奇校验码）</p>
<blockquote>
<p>如 采用<strong>奇校验</strong> 信息元 “1011011” → 编码后数据“<strong>0</strong> 1011011”，若 源信息元 “1” 个数为偶数，则首位为1</p>
</blockquote>
</li>
<li>
<p>收到信息元后检查 “1” 的个数，判断奇偶</p>
</li>
<li>
<p>只能查出<strong>奇数</strong>个比特错误，检错能力<strong>50%</strong></p>
</li>
</ul>
<h3 id="循环冗余码"><a class="markdownIt-Anchor" href="#循环冗余码"></a> 循环冗余码</h3>
<ul>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">要</mi><mi mathvariant="normal">传</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">据</mi><mo>÷</mo><mi mathvariant="normal">生</mi><mi mathvariant="normal">成</mi><mi mathvariant="normal">多</mi><mi mathvariant="normal">项</mi><mi mathvariant="normal">式</mi><mo>=</mo><mtext> </mtext><mo stretchy="false">?</mo><mtext> </mtext><mo>⋯</mo><mi>F</mi><mi>C</mi><mi>S</mi><mi mathvariant="normal">帧</mi><mi mathvariant="normal">校</mi><mi mathvariant="normal">验</mi><mi mathvariant="normal">码</mi><mi mathvariant="normal">（</mi><mi mathvariant="normal">冗</mi><mi mathvariant="normal">余</mi><mi mathvariant="normal">码</mi><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">要传的数据 \div 生成多项式 = \ ? \ \cdots FCS帧校验码（冗余码）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">要</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">÷</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mclose">?</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord cjk_fallback">帧</span><span class="mord cjk_fallback">校</span><span class="mord cjk_fallback">验</span><span class="mord cjk_fallback">码</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">冗</span><span class="mord cjk_fallback">余</span><span class="mord cjk_fallback">码</span><span class="mord cjk_fallback">）</span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">收</mi><mi mathvariant="normal">到</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">据</mi><mo>÷</mo><mi mathvariant="normal">生</mi><mi mathvariant="normal">成</mi><mi mathvariant="normal">多</mi><mi mathvariant="normal">项</mi><mi mathvariant="normal">式</mi><mo>=</mo><mtext> </mtext><mo stretchy="false">?</mo><mtext> </mtext><mo>⋯</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">收到的数据 \div 生成多项式 = \ ? \ \cdots 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">收</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">÷</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace"> </span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mclose">?</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span></span></span></span>  <strong>余数为0则收到的数据接近于1的概率无差错</strong></p>
</li>
<li>
<p>计算步骤：</p>
<ul>
<li>
<p><strong>先补0</strong>，生成多项式几阶就补几个0</p>
<blockquote>
<p>“1001”和“<strong>0</strong>1010”都是<strong>3阶</strong><br />
从左至右，从零开始标号，<strong>1 的最高位</strong>就是阶数</p>
</blockquote>
</li>
<li>
<p>模2除法（<strong>异或代替相减</strong>）</p>
</li>
<li>
<p>补0后的数 + 余数 = 要发送的数</p>
</li>
</ul>
</li>
<li>
<p>例子：</p>
  <img src="https://i.loli.net/2020/03/28/V2XpkmgDBuCvNan.png" alt="循环冗余" style="zoom:67%;" />
</li>
<li>
<p>接收段将每一帧都除以生成多项式，余数为0则接收，不为0则<strong>丢弃</strong></p>
</li>
<li>
<p>发送FSC的生成与接收端CRC的检验都由<strong>硬件</strong>完成，处理迅速</p>
</li>
</ul>
<h2 id="纠错编码-海明码"><a class="markdownIt-Anchor" href="#纠错编码-海明码"></a> 纠错编码 (海明码)</h2>
<ul>
<li>
<p><strong>发现双比特错</strong>，<strong>纠正单比特错</strong></p>
</li>
<li>
<p><strong>海明不等式</strong>： <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>r</mi></msup><mo>≥</mo><mi>k</mi><mo>+</mo><mi>r</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^r \geq k+r+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.800362em;vertical-align:-0.13597em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>    <strong>r 为冗余信息位数，k 为源信息位数</strong></p>
</li>
</ul>
<h3 id="算法步骤"><a class="markdownIt-Anchor" href="#算法步骤"></a> 算法步骤</h3>
<ol>
<li>
<p>知 k 求 r</p>
 <figure class="highlight c"><table><tr><td class="code"><pre><span class="line">要发送的数据 D = <span class="number">101101</span></span><br><span class="line">数据位数 k = <span class="number">6</span></span><br><span class="line">由海明不等式可求得 r = <span class="number">4</span></span><br><span class="line">所以 D 的海明码由 <span class="number">6</span>+<span class="number">4</span>=<span class="number">10</span> 位</span><br><span class="line">源数据 <span class="number">6</span> 位  校验位 <span class="number">4</span> 位</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>确定校验码位置和数据的位置</p>
<ul>
<li>
<p>按海明码位数，从1开始列出<strong>数据位</strong>，并将位置数转化为二进制数列出<strong>二进制码</strong></p>
</li>
<li>
<p>假设4位校验码位<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">P_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">P_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">P_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">P_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；6位数据标号分别为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">D_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">D_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">D_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">D_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>6</mn></msub></mrow><annotation encoding="application/x-tex">D_6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>置于<strong>数据位</strong>为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>的位置，注意到此时数据位数值对应的二进制码<strong>仅</strong>第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>位值为<strong>1</strong>，其余位置值为0（<strong>从右至左，从1开始计数</strong>）</p>
</li>
<li>
<p>在<strong>剩余位置</strong>从左至右<strong>依次</strong>填上<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">D_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<table>
<thead>
<tr>
<th>二进制码</th>
<th>0001</th>
<th>0010</th>
<th>0011</th>
<th>0100</th>
<th>0101</th>
<th>0110</th>
<th>0111</th>
<th>1000</th>
<th>1001</th>
<th>1010</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>数据位</strong></td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>7</td>
<td>8</td>
<td>9</td>
<td>10</td>
</tr>
<tr>
<td><strong>代码</strong></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">P_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">P_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">D_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">P_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">D_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">D_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">D_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">P_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">D_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
<td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>6</mn></msub></mrow><annotation encoding="application/x-tex">D_6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td>
</tr>
<tr>
<td><strong>实际值</strong></td>
<td></td>
<td></td>
<td>1</td>
<td></td>
<td>0</td>
<td>1</td>
<td>1</td>
<td></td>
<td>0</td>
<td>1</td>
</tr>
</tbody>
</table>
</li>
</ul>
</li>
<li>
<p>求校验码各自负责的校验位</p>
<ul>
<li>
<p>明确此处二进制码计算<strong>其中单个数字位置</strong>是 <strong>从右至左，从1开始计算</strong></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">i</span></span></span></span>检测的是二进制码第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>位为<strong>1</strong>的位置对应的数据<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span></p>
<blockquote>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">P_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>处的二进制码为 000<strong>1</strong>，第<strong>1</strong>位为1；</p>
<p>数据位 3、5、7、9 对应的二进制码为 001<strong>1</strong>、010<strong>1</strong>、011<strong>1</strong>、100<strong>1</strong>，同样第<strong>1</strong>位为1；</p>
<p>故<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">P_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><strong>校验的是</strong>数据位 3、5、7、9 处的<strong>对应代码</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">D_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">D_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">D_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">D_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">P_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>处的二进制码位 00<strong>1</strong>0，第<strong>2</strong>位为1；</p>
<p>数据位  3、6、7、10 对应的二进制码位 00<strong>1</strong>1、01<strong>1</strong>0、01<strong>1</strong>1、10<strong>1</strong>0，同样第<strong>2</strong>位为1；</p>
<p>故<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">P_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><strong>校验的是</strong>数据位 3、6、7、10 处的<strong>对应代码</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">D_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">D_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">D_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>6</mn></msub></mrow><annotation encoding="application/x-tex">D_6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>同理可求 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">P_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">P_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的校验位</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">P_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> : <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">D_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">D_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">D_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">P_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> : <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">D_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>6</mn></msub></mrow><annotation encoding="application/x-tex">D_6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
</blockquote>
</li>
<li>
<p>校验码<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>与所得校验位<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>连续异或，应结果为0，求解 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<blockquote>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∵</mo><msub><mi>P</mi><mn>1</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>1</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>2</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>4</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>5</mn></msub><mspace linebreak="newline"></mspace><mo>=</mo><msub><mi>P</mi><mn>1</mn></msub><mo>⊕</mo><mn>1</mn><mo>⊕</mo><mn>0</mn><mo>⊕</mo><mn>1</mn><mo>⊕</mo><mn>0</mn><mspace linebreak="newline"></mspace><mo>=</mo><mn>0</mn><mspace linebreak="newline"></mspace><mo>∴</mo><msub><mi>P</mi><mn>1</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\because P_1 \oplus D_1 \oplus D_ 2 \oplus D_4 \oplus D_5 \\ =P_1 \oplus 1 \oplus 0  \oplus 1 \oplus 0 \\ = 0 \\ \therefore P_1=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p>
<p>同理解得 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>2</mn></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>P</mi><mn>3</mn></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>P</mi><mn>4</mn></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">P_2=0,P_3=0,P_4=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
</blockquote>
</li>
<li>
<p>补全原表可得，数据 101101 <strong>所对应的海明码为 00100 11101</strong></p>
<table>
<thead>
<tr>
<th><strong>代码</strong></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">P_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">P_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">D_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">P_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">D_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">D_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">D_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">P_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">D_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
<th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>6</mn></msub></mrow><annotation encoding="application/x-tex">D_6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>实际值</strong></td>
<td><strong>0</strong></td>
<td><strong>0</strong></td>
<td>1</td>
<td><strong>0</strong></td>
<td>0</td>
<td>1</td>
<td>1</td>
<td><strong>1</strong></td>
<td>0</td>
<td>1</td>
</tr>
</tbody>
</table>
</li>
</ul>
</li>
</ol>
<h3 id="检错步骤"><a class="markdownIt-Anchor" href="#检错步骤"></a> 检错步骤</h3>
<blockquote>
<p>上述步骤求得的海明码为 00100 11101，假设其传输过程中<strong>左起</strong>第五位出错，由0变为1，则接收到的错误编码为 0010<strong>1</strong> 11101，如何实现<strong>检错并纠错</strong></p>
</blockquote>
<ul>
<li>
<p>先确定校验位 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的值，为<strong>左起</strong>第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>位（参考二进制码<strong>仅</strong>第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>位为1理解），其余数字依次为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">D_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<blockquote>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>P</mi><mn>2</mn></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>P</mi><mn>3</mn></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>P</mi><mn>4</mn></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">P_1=0,P_2=0,P_3=0,P_4=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>D</mi><mn>2</mn></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>D</mi><mn>3</mn></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>D</mi><mn>4</mn></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>D</mi><mn>5</mn></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>D</mi><mn>6</mn></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">D_1=1,D_2=1,D_3=1,D_4=1,D_5=0,D_6=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<p>即依次为原海明码<strong>左起第1、2、4、8位</strong>上的数字</p>
</blockquote>
</li>
<li>
<p>令 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 与 <strong>其对应的校验位</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span> <strong>异或</strong>求得结果</p>
<blockquote>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">P_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 对应 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>D</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>D</mi><mn>4</mn></msub><mo separator="true">,</mo><msub><mi>D</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">D_1,D_2,D_4,D_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>1</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>2</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>4</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>5</mn></msub><mspace linebreak="newline"></mspace><mo>=</mo><mn>0</mn><mo>⊕</mo><mn>1</mn><mo>⊕</mo><mn>1</mn><mo>⊕</mo><mn>1</mn><mo>⊕</mo><mn>0</mn><mspace linebreak="newline"></mspace><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">P_1 \oplus D_1 \oplus D_2 \oplus D_4 \oplus D_5 \\ = 0 \oplus 1 \oplus 1 \oplus 1 \oplus 0 \\ = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<p>同理</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>2</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>1</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>3</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>4</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>6</mn></msub><mspace linebreak="newline"></mspace><mo>=</mo><mn>0</mn><mo>⊕</mo><mn>1</mn><mo>⊕</mo><mn>1</mn><mo>⊕</mo><mn>1</mn><mo>⊕</mo><mn>1</mn><mspace linebreak="newline"></mspace><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">P_2 \oplus D_1 \oplus D_3 \oplus D_4 \oplus D_6 \\ = 0 \oplus 1 \oplus 1 \oplus 1 \oplus 1 \\ = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>3</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>2</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>3</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>4</mn></msub><mspace linebreak="newline"></mspace><mo>=</mo><mn>0</mn><mo>⊕</mo><mn>1</mn><mo>⊕</mo><mn>1</mn><mo>⊕</mo><mn>1</mn><mspace linebreak="newline"></mspace><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">P_3 \oplus D_2 \oplus D_3 \oplus D_4 \\ = 0 \oplus 1 \oplus 1 \oplus 1 \\ = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>4</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>5</mn></msub><mo>⊕</mo><msub><mi>D</mi><mn>6</mn></msub><mspace linebreak="newline"></mspace><mo>=</mo><mn>1</mn><mo>⊕</mo><mn>0</mn><mo>⊕</mo><mn>1</mn><mspace linebreak="newline"></mspace><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">P_4 \oplus D_5 \oplus D_6 \\ = 1 \oplus 0 \oplus 1 \\ = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p>
</blockquote>
</li>
<li>
<p>将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的值依次并排，组成的<strong>二进制数</strong>转换为<strong>十进制</strong>，其值就是<strong>错误比特的位置</strong>（<strong>左起</strong>），该位置的<strong>值取反</strong>即为正确值</p>
<blockquote>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∴</mo><msub><mi>P</mi><mn>1</mn></msub><msub><mi>P</mi><mn>2</mn></msub><msub><mi>P</mi><mn>3</mn></msub><msub><mi>P</mi><mn>4</mn></msub><mo>⇒</mo><mn>1010</mn><mo>=</mo><mn>5</mn><mspace linebreak="newline"></mspace><mo>∴</mo><mi mathvariant="normal">第</mi><mi mathvariant="normal">五</mi><mi mathvariant="normal">位</mi><mi mathvariant="normal">出</mi><mi mathvariant="normal">错</mi><mi mathvariant="normal">，</mi><mi>i</mi><mi>n</mi><mi>d</mi><mi>e</mi><msup><mi>x</mi><mrow><mo stretchy="false">[</mo><mn>5</mn><mo stretchy="false">]</mo></mrow></msup><mo>=</mo><mn>1</mn><mi mathvariant="normal">应</mi><mi mathvariant="normal">改</mi><mi mathvariant="normal">为</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">\therefore P_1P_2P_3P_4 \Rightarrow 1010 = 5 \\ \therefore 第五位出错， index^{[5]}=1应改为0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord cjk_fallback">第</span><span class="mord cjk_fallback">五</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">错</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord mathdefault">e</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">[</span><span class="mord mtight">5</span><span class="mclose mtight">]</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord cjk_fallback">应</span><span class="mord cjk_fallback">改</span><span class="mord cjk_fallback">为</span><span class="mord">0</span></span></span></span></p>
</blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络基本概念</title>
    <url>/2020/04/13/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5">基本概念</a></li>
<li><a href="#%E5%88%86%E7%B1%BB">分类</a></li>
<li><a href="#%E5%AF%BC%E5%9B%BE">导图</a></li>
<li><a href="#%E5%88%86%E5%B1%82%E6%A6%82%E5%BF%B5">分层概念</a></li>
<li><a href="#%E6%A8%A1%E5%9E%8B">模型</a>
<ul>
<li><a href="#osi">OSI</a></li>
<li><a href="#tcpip">TCP/IP</a></li>
<li><a href="#5-%E5%B1%82%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B">5 层参考模型</a></li>
</ul>
</li>
</ul>
</p>
<h1 id="计算机网络"><a class="markdownIt-Anchor" href="#计算机网络"></a> 计算机网络</h1>
<h2 id="基本概念"><a class="markdownIt-Anchor" href="#基本概念"></a> 基本概念</h2>
<ul>
<li><strong>计算机网络</strong>：将分散、独立的<strong>计算机系统</strong>，通过<strong>通信设备</strong>和<strong>线路</strong>连接起来，由软件实现<strong>资源共享</strong>和<strong>信息传递</strong>的系统
<ul>
<li>是<strong>互连</strong>（互联互通）、<strong>自治</strong>（无主从关系）的计算机集合</li>
</ul>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200413221407.png" alt="" /></p>
<ul>
<li>
<p>功能</p>
<ol>
<li><strong>数据通信</strong>：连通性</li>
<li><strong>资源共享</strong>：硬件、软件和数据的共享</li>
<li>分布式处理：多台计算机分工完成项目</li>
<li>提高可靠性：当网络中有设备宕机，及时实现替代机</li>
<li>负载均衡</li>
</ol>
</li>
<li>
<p>组成</p>
<ol>
<li>
<p>组成划分：硬件、软件、协议</p>
</li>
<li>
<p>工作方式</p>
<ul>
<li>边缘部分 用户直接使用 （<code>C/S</code>方式、<code>P2P</code>方式）</li>
<li>核心部分 为边缘部分提供服务</li>
</ul>
</li>
<li>
<p><strong>功能组成</strong></p>
</li>
</ol>
</li>
<li>
<p>通信子网 <strong>数据通信</strong><br />
- 资源子网 <strong>资源共享</strong>及数据处理</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200413221825.png" alt="" /></p>
</li>
</ul>
<h2 id="分类"><a class="markdownIt-Anchor" href="#分类"></a> 分类</h2>
<ol>
<li>适用范围
<ul>
<li>广域网<code>WAN</code>（交换技术）、城域网<code>MAN</code>、</li>
<li>局域网<code>LAN</code>（广播技术）、个人区域网<code>PAN</code></li>
</ul>
</li>
<li>使用者
<ul>
<li>公用网 （移动、联通）</li>
<li>专用网 （军事、政府）</li>
</ul>
</li>
<li>交换技术：电路交换、报文交换、分组交换</li>
<li>拓扑结构：总线形、星形、环形、网状形（常用于广域网）</li>
<li><strong>传输技术</strong>
<ul>
<li><strong>广播式</strong> 共享公共通信信道</li>
<li><strong>点对点</strong> 使用 <em>分组存储转发</em> 和 <em>路由选择</em> 机制</li>
</ul>
</li>
</ol>
<h2 id="导图"><a class="markdownIt-Anchor" href="#导图"></a> 导图</h2>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200414153126.png" alt="" /></p>
<hr />
<h1 id="评价指标"><a class="markdownIt-Anchor" href="#评价指标"></a> 评价指标</h1>
<ol>
<li>
<p><strong>速率</strong>（数据率、比特率）</p>
<ul>
<li>主机在数字信道上传送<strong>比特</strong><code>bit</code>数据的速率</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">单</mi><mi mathvariant="normal">位</mi><mi mathvariant="normal">：</mi><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo separator="true">,</mo><mi>k</mi><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo>⋯</mo></mrow><annotation encoding="application/x-tex">单位：b/s, kb/s \cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">：</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span></span></span></span></li>
<li>速率考虑的是<strong>比特传输</strong>，所以使用<code>b（bit）</code>；存储容量考虑量，使用<code>B（Byte 位）</code></li>
</ul>
</li>
<li>
<p><strong>带宽</strong></p>
<ul>
<li><strong>理想</strong>情况下，信道能达到的<strong>最高数据率</strong></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">单</mi><mi mathvariant="normal">位</mi><mi mathvariant="normal">：</mi><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo separator="true">,</mo><mi>k</mi><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo>⋯</mo></mrow><annotation encoding="application/x-tex">单位：b/s, kb/s \cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">：</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span></span></span></span></li>
<li>反应网络的通信线路传送数据的能力</li>
</ul>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200414162906.png" alt="" /></p>
</li>
<li>
<p><strong>吞吐量</strong></p>
<ul>
<li>表示单位时间内通过某个网络（或<strong>信道</strong>、<strong>接口</strong>）的<strong>数据量</strong>，受带宽和网络额定速率限制</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">单</mi><mi mathvariant="normal">位</mi><mi mathvariant="normal">：</mi><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo separator="true">,</mo><mi>k</mi><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo>⋯</mo></mrow><annotation encoding="application/x-tex">单位：b/s, kb/s \cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">：</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span></span></span></span></li>
</ul>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200413225407.png" alt="" /></p>
</li>
<li>
<p><strong>时延</strong></p>
<ul>
<li>
<p>数据（报文/分组/比特流）从网络一端传送到另一端的<strong>耗时</strong>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">单</mi><mi mathvariant="normal">位</mi><mi mathvariant="normal">：</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">单位：s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">：</span><span class="mord mathdefault">s</span></span></span></span></p>
</li>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">总</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mo>=</mo><mi mathvariant="normal">发</mi><mi mathvariant="normal">送</mi><mi mathvariant="normal">（</mi><mi mathvariant="normal">传</mi><mi mathvariant="normal">输</mi><mi mathvariant="normal">）</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mo>+</mo><mi mathvariant="normal">传</mi><mi mathvariant="normal">播</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mo>+</mo><mi mathvariant="normal">排</mi><mi mathvariant="normal">队</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mo>+</mo><mi mathvariant="normal">处</mi><mi mathvariant="normal">理</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi></mrow><annotation encoding="application/x-tex">总时延 = 发送（传输）时延+传播时延+排队时延+处理时延
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">总</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">发</span><span class="mord cjk_fallback">送</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">播</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">排</span><span class="mord cjk_fallback">队</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">处</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">发</mi><mi mathvariant="normal">送</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mo>=</mo><mfrac><mrow><mi mathvariant="normal">数</mi><mi mathvariant="normal">据</mi><mi mathvariant="normal">长</mi><mi mathvariant="normal">度</mi></mrow><mrow><mi mathvariant="normal">信</mi><mi mathvariant="normal">道</mi><mi mathvariant="normal">带</mi><mi mathvariant="normal">宽</mi><mi mathvariant="normal">（</mi><mi mathvariant="normal">发</mi><mi mathvariant="normal">送</mi><mi mathvariant="normal">速</mi><mi mathvariant="normal">率</mi><mi mathvariant="normal">）</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">发送时延 = \frac {数据长度} {信道带宽（发送速率）}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">发</span><span class="mord cjk_fallback">送</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.363em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.677em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">宽</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">发</span><span class="mord cjk_fallback">送</span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">率</span><span class="mord cjk_fallback">）</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mord cjk_fallback">长</span><span class="mord cjk_fallback">度</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">传</mi><mi mathvariant="normal">播</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mo>=</mo><mfrac><mrow><mi mathvariant="normal">信</mi><mi mathvariant="normal">道</mi><mi mathvariant="normal">长</mi><mi mathvariant="normal">度</mi></mrow><mrow><mi mathvariant="normal">介</mi><mi mathvariant="normal">质</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">传</mi><mi mathvariant="normal">播</mi><mi mathvariant="normal">速</mi><mi mathvariant="normal">率</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">传播时延 = \frac {信道长度} {介质中传播速率}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">播</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.363em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.677em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">介</span><span class="mord cjk_fallback">质</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">播</span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">率</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">长</span><span class="mord cjk_fallback">度</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>
<p><strong>发送时延</strong>：数据处理为比特流的时间，发生在机器内</p>
<ul>
<li><strong>高速链路</strong>：发送速率极高，而<strong>不影响传播速率</strong></li>
</ul>
</li>
<li>
<p><strong>传播速率</strong>：取决于<strong>电磁波传播</strong>速率和信道<strong>链路长度</strong>，发生在机器外</p>
</li>
<li>
<p>排队时延：等待输入（输出）链路可用的时间（类似安检前排队）</p>
</li>
<li>
<p>处理时延：检错，查找输出端（类似安检时扫描）</p>
</li>
</ul>
</li>
<li>
<p><strong>时延带宽积</strong></p>
<ul>
<li>以比特为单位的链路长度（即<strong>某段饱和链路现在有多少比特</strong>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">单</mi><mi mathvariant="normal">位</mi><mi mathvariant="normal">：</mi><mi>b</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">单位：bit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">：</span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span></span></span></span>）</li>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mi mathvariant="normal">带</mi><mi mathvariant="normal">宽</mi><mi mathvariant="normal">积</mi><mo>=</mo><mi mathvariant="normal">传</mi><mi mathvariant="normal">播</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mo>×</mo><mi mathvariant="normal">带</mi><mi mathvariant="normal">宽</mi></mrow><annotation encoding="application/x-tex">时延带宽积 = 传播时延 \times 带宽 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">宽</span><span class="mord cjk_fallback">积</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">播</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">宽</span></span></span></span></span></p>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200413231202.png" alt="" /></p>
</li>
<li>
<p><strong>往返时延</strong></p>
<ul>
<li>发送方发送数据 → 接收方接收数据 → 接收方发送确认信息 → 接收方收到确认 的<strong>全过程耗时</strong></li>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">往</mi><mi mathvariant="normal">返</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mo>=</mo><mi mathvariant="normal">传</mi><mi mathvariant="normal">播</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">延</mi><mo>×</mo><mn>2</mn><mo>+</mo><mi mathvariant="normal">末</mi><mi mathvariant="normal">端</mi><mi mathvariant="normal">处</mi><mi mathvariant="normal">理</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi></mrow><annotation encoding="application/x-tex">往返时延 = 传播时延 \times 2 + 末端处理时间
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">往</span><span class="mord cjk_fallback">返</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">播</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">延</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">末</span><span class="mord cjk_fallback">端</span><span class="mord cjk_fallback">处</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span></span></span></span></span></p>
</li>
<li>往返时间越大，收到确认前，可以发送的数据就越多</li>
</ul>
</li>
<li>
<p><strong>利用率</strong></p>
<ul>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">信</mi><mi mathvariant="normal">道</mi><mi mathvariant="normal">利</mi><mi mathvariant="normal">用</mi><mi mathvariant="normal">率</mi><mo>=</mo><mfrac><mrow><mi mathvariant="normal">有</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">据</mi><mi mathvariant="normal">通</mi><mi mathvariant="normal">过</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi></mrow><mrow><mo stretchy="false">(</mo><mi mathvariant="normal">有</mi><mo>+</mo><mi mathvariant="normal">无</mi><mo stretchy="false">)</mo><mi mathvariant="normal">数</mi><mi mathvariant="normal">据</mi><mi mathvariant="normal">通</mi><mi mathvariant="normal">过</mi><mi mathvariant="normal">时</mi><mi mathvariant="normal">间</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">信道利用率 = \frac {有数据通过时间} {(有+无)数据通过时间}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">利</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.613em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.677em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord cjk_fallback">有</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord cjk_fallback">无</span><span class="mclose">)</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mord cjk_fallback">通</span><span class="mord cjk_fallback">过</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mord cjk_fallback">通</span><span class="mord cjk_fallback">过</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">网</mi><mi mathvariant="normal">络</mi><mi mathvariant="normal">利</mi><mi mathvariant="normal">用</mi><mi mathvariant="normal">率</mi><mo>=</mo><mi mathvariant="normal">信</mi><mi mathvariant="normal">道</mi><mi mathvariant="normal">利</mi><mi mathvariant="normal">用</mi><mi mathvariant="normal">率</mi><mi mathvariant="normal">加</mi><mi mathvariant="normal">权</mi><mi mathvariant="normal">平</mi><mi mathvariant="normal">均</mi><mi mathvariant="normal">值</mi></mrow><annotation encoding="application/x-tex">网络利用率 = 信道利用率加权平均值
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">网</span><span class="mord cjk_fallback">络</span><span class="mord cjk_fallback">利</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">利</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">率</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">权</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">均</span><span class="mord cjk_fallback">值</span></span></span></span></span></p>
</li>
<li>
<p><strong>利用率越高</strong>，信道上数据越饱和，<strong>时延就越大</strong></p>
  <img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200413232030.png" style="zoom:80%;" />
</li>
</ul>
</li>
</ol>
<h1 id="分层模型"><a class="markdownIt-Anchor" href="#分层模型"></a> 分层模型</h1>
<h2 id="分层概念"><a class="markdownIt-Anchor" href="#分层概念"></a> 分层概念</h2>
<ol>
<li>
<p>原则</p>
<ul>
<li>各层<strong>独立</strong>，实现相对独立的一种功能</li>
<li>各层<strong>界面自然清晰</strong>，耦合尽可能少</li>
<li>结构分割，各采用<strong>最合适的技术</strong>实现</li>
<li>保持下层对上层独立，<strong>上层单向使用层提供的服务</strong></li>
<li>整个分层结构促进标准化工作</li>
</ul>
</li>
<li>
<p>成分</p>
<ul>
<li><strong>实体</strong>：第n层的活动元素称为n层实体，接收与发送端同一层的实体称为<strong>对等实体</strong></li>
<li><strong>协议</strong>：为对等实体交换而设立的规则、<strong>标准</strong> 【水平方向】</li>
<li><strong>接口</strong>：<strong>访问服务点SAP</strong>，上层使用下层服务的<strong>入口</strong></li>
<li><strong>服务</strong>：下层为相邻上层提供的<strong>功能调用</strong></li>
</ul>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200414150323.png" alt="" /></p>
</li>
<li>
<p>数据单元</p>
<ul>
<li><code>SDU</code>数据单元：完成用户所需功能而应传送的数据</li>
<li><code>PCI</code>协议控制信息：控制协议操作的信息</li>
<li><code>PDU</code>协议数据单元：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>D</mi><mi>U</mi><mo>=</mo><mi>P</mi><mi>C</mi><mi>I</mi><mo>+</mo><mi>S</mi><mi>D</mi><mi>U</mi></mrow><annotation encoding="application/x-tex">PDU = PCI + SDU</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>，本层次传送的数据单位</li>
<li>本层本次传送的是<code>PDU</code>，作为下次接收的<code>SDU</code></li>
</ul>
 <img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200414160147.png" style="zoom:70%;" />
</li>
<li>
<p>要点</p>
<ul>
<li>每层遵循某些<strong>网络协议</strong>完成本层功能</li>
<li>计算机网络体系结构是<strong>分层结构</strong>，是计网的<strong>各层及其协议的集合</strong></li>
<li>每层提供给上层的服务不只是本身的功能，还有其下层的功能</li>
<li>仅在<strong>相邻层</strong>之间有接口，提供的具体服务细节对上一层<strong>完全屏蔽</strong></li>
</ul>
</li>
</ol>
<h2 id="模型"><a class="markdownIt-Anchor" href="#模型"></a> 模型</h2>
<h3 id="osi"><a class="markdownIt-Anchor" href="#osi"></a> OSI</h3>
<ol>
<li>
<p><strong>OSI 七层模型</strong>：应 表 会 传 网 数 物</p>
<ul>
<li>前四层端对端，后三层点对点</li>
<li>中途的交换机只有<strong>后三层</strong></li>
</ul>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200414161202.jpg" alt="" /></p>
</li>
<li>
<p>各层功能</p>
<ul>
<li>应：<strong>用户与网络交互</strong>，服务有文件传输<code>FTP</code>、电子邮件<code>SMTP</code>、万维网<code>HTTP</code></li>
<li>表：<strong>数据加工</strong>
<ul>
<li>格式变换 （文字 → 比特）</li>
<li>加密解密 （敏感信息加密处理）</li>
<li>压缩恢复 （视频图像流）</li>
</ul>
</li>
<li>会：建立<strong>会话/同步</strong>，向表示层实体/用户进程提供<strong>建立连接</strong>，并基于连接，<strong>有序传输</strong>数据
<ul>
<li>建立、管理、终止会话 （区分、分隔不同应用进程）</li>
<li><strong>校验点</strong>，正在通信失效时读档重传 （是用于传输大文件）</li>
</ul>
</li>
<li>传：本机与目标机的进程通信，即<strong>端对端</strong>的通信，传输单位是<strong>报文段或用户数据报</strong>
<ul>
<li><strong>决定</strong>可靠/不可靠传输 （确认重传机制）</li>
<li><strong>差错控制</strong>，查验纠正接收到的数据报</li>
<li><strong>流量控制</strong>，协调收发两方的数据传输速率</li>
<li><strong>复用分用</strong>，不同进程的消息放<strong>同一个报文段</strong>发送，到达目标机后，按<strong>端口号</strong>分离发往目标进程</li>
</ul>
</li>
<li>网：将报文<strong>分组</strong>从源端传送到目的端，为交换网上的不同主机提供服务，传输单位是<strong>数据报</strong>
<ul>
<li><strong>路由选择</strong>，选择传输所用的路由线路，查找<strong>最佳路线</strong></li>
<li><strong>流量控制</strong>、<strong>差错控制</strong>，同上层，重复是因为交换机没有传输层，所以网络层也要维持限流和检错功能</li>
<li><strong>拥塞控制</strong>，所有结点来不及接受分组而要大量丢弃分组就称为<strong>拥塞</strong>状态，网络层要采取一定缓解措施</li>
</ul>
</li>
<li>数：数据报<strong>封装成帧</strong>，传输单位是<strong>帧</strong>
<ul>
<li><strong>成帧</strong>，定义帧的开始（首部）与结束（尾部）</li>
<li><strong>差错控制</strong>，帧错 + 位错</li>
<li>流量控制，同上</li>
<li><strong>访问（接入）控制</strong>，控制各设备对共享信道的使用 （如广播式同一时间只允许一个设备发送数据报）</li>
</ul>
</li>
<li>物：在<strong>物理媒体</strong>上实现<strong>比特流</strong>的<strong>透明传输</strong>（不论数据的比特组合，一律支持传送）
<ul>
<li>定义接口特性 （硬件层面的接口）</li>
<li>定义传输模式，<strong>单工、双工、半双工</strong></li>
<li>定义传输速率</li>
<li>比特同步、比特编码</li>
</ul>
</li>
</ul>
</li>
<li>
<p>通信过程</p>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200414161342.png" alt="" /></p>
</li>
</ol>
<h3 id="tcpip"><a class="markdownIt-Anchor" href="#tcpip"></a> TCP/IP</h3>
<ul>
<li>
<p><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200414174659.png" alt="" /></p>
</li>
<li>
<p>与 OSI 的<strong>相同点</strong></p>
<ul>
<li>都分层</li>
<li>都基于独立的协议栈概念</li>
<li>可以实现异构网络互联互通</li>
</ul>
</li>
<li>
<p><strong>不同点</strong></p>
<ul>
<li>
<p>OSI 定义三点：服务、协议、接口，TCP/IP 只有协议</p>
</li>
<li>
<p>OSI 偏向特定协议</p>
</li>
<li>
<p>TCP/IP 将 <code>IP</code>作为重要层次</p>
</li>
<li>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">OSI</th>
<th style="text-align:center">TCP/IP</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">网络层</td>
<td style="text-align:center">无连接+面向连接</td>
<td style="text-align:center">无连接</td>
</tr>
<tr>
<td style="text-align:center">传输层</td>
<td style="text-align:center">面向连接</td>
<td style="text-align:center">无连接+面向连接</td>
</tr>
</tbody>
</table>
</li>
</ul>
</li>
<li>
<p><strong>面向连接</strong>分三个阶段：建立连接 → 数据传输 → 释放连接；<strong>无连接</strong>只有数据传输一个过程</p>
</li>
</ul>
<h3 id="5-层参考模型"><a class="markdownIt-Anchor" href="#5-层参考模型"></a> 5 层参考模型</h3>
<ul>
<li><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200414180250.png" alt="" /></li>
<li><img src="https://raw.githubusercontent.com/EastTang/FigureBed/master/img/20200414180327.png" alt="" /></li>
</ul>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>物理层知识点总结</title>
    <url>/2020/04/17/%E8%AE%A1%E7%BD%91/%E8%AE%A1%E7%BD%91-%E7%89%A9%E7%90%86%E5%B1%82/</url>
    <content><![CDATA[<p><ul class="markdownIt-TOC">
<li><a href="#%E7%A0%81%E5%85%83">码元</a></li>
<li><a href="#%E9%80%9F%E7%8E%87">速率</a>
<ul>
<li><a href="#%E6%A6%82%E5%BF%B5">概念</a></li>
<li><a href="#%E7%A0%81%E5%85%83%E4%BC%A0%E8%BE%93%E9%80%9F%E7%8E%87">码元传输速率</a></li>
<li><a href="#%E4%BF%A1%E6%81%AF%E4%BC%A0%E8%BE%93%E9%80%9F%E7%8E%87">信息传输速率</a></li>
<li><a href="#%E4%BE%8B%E9%A2%98">例题</a></li>
</ul>
</li>
<li><a href="#%E7%BC%96%E7%A0%81%E4%B8%8E%E8%B0%83%E5%88%B6">编码与调制</a>
<ul>
<li><a href="#%E6%A6%82%E5%BF%B5-2">概念</a></li>
<li><a href="#%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F">编码方式</a></li>
</ul>
</li>
<li><a href="#%E5%A5%88%E6%B0%8F%E5%87%86%E5%88%99">奈氏准则</a></li>
<li><a href="#%E9%A6%99%E5%86%9C%E5%AE%9A%E7%90%86">香农定理</a></li>
<li><a href="#%E4%BC%A0%E6%92%AD%E4%BB%8B%E8%B4%A8">传播介质</a></li>
<li><a href="#%E7%89%A9%E7%90%86%E5%B1%82%E8%AE%BE%E5%A4%87">物理层设备</a></li>
</ul>
</p>
<h2 id="码元"><a class="markdownIt-Anchor" href="#码元"></a> 码元</h2>
<ul>
<li>
<p>码元时<strong>一个</strong>固定时长（码元宽度）的<strong>信号波形</strong>（数字脉冲），代表不同离散数值的基本波形</p>
</li>
<li>
<p><code>k进制码元</code> ⟶ 码元的<strong>离散状态</strong>有 k 个 ⟶ <strong>k 种高低不同的信号波形</strong></p>
  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span>进制码元  --&gt;  离散状态有 <span class="number">2</span> 个  ---&gt; <span class="number">2</span>种波形 即 <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">4</span>进制码元  --&gt;  离散状态有 <span class="number">4</span> 个  ---&gt; <span class="number">4</span>种波形 即 <span class="number">00</span> <span class="number">01</span> <span class="number">10</span> <span class="number">11</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>一个码元可以携带多个比特的信息量，<strong>k进制码元</strong>携带 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>k</mi></mrow><annotation encoding="application/x-tex">log _2 k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> <strong>个比特</strong></p>
</li>
</ul>
<p><img src="https://i.loli.net/2020/04/18/RKvwro4OgDdjZNy.png" alt="" /></p>
<h2 id="速率"><a class="markdownIt-Anchor" href="#速率"></a> 速率</h2>
<h3 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h3>
<ul>
<li>速率是数据的<strong>传输</strong>速率，单位时间内传输的<strong>数据量</strong>，分为码元传输速率和信息传输速率</li>
<li>速率<strong>不同于传播速率</strong>，传播速率应是<strong>传播媒介</strong>(波)的速率</li>
</ul>
<h3 id="码元传输速率"><a class="markdownIt-Anchor" href="#码元传输速率"></a> 码元传输速率</h3>
<ul>
<li>
<p>一秒传输多少个<strong>码元</strong>，单位是<strong>波特</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi>a</mi><mi>u</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">Baud</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">a</span><span class="mord mathdefault">u</span><span class="mord mathdefault">d</span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi>B</mi><mi>a</mi><mi>u</mi><mi>d</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">码</mi><mi mathvariant="normal">元</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">1 Baud = 1 码元/s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">a</span><span class="mord mathdefault">u</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord cjk_fallback">码</span><span class="mord cjk_fallback">元</span><span class="mord">/</span><span class="mord mathdefault">s</span></span></span></span></p>
</li>
<li>
<p>码元可以是多进制的，所以码元速率与进制数无关，只统计<strong>码元总个数</strong></p>
<blockquote>
<p>例如：5个2进制码元一秒传完，5个16进制码元一秒传完，他们的码元传输速率相等</p>
</blockquote>
</li>
</ul>
<h3 id="信息传输速率"><a class="markdownIt-Anchor" href="#信息传输速率"></a> 信息传输速率</h3>
<ul>
<li>一秒传输多少个<strong>比特</strong>，单位是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mi>i</mi><mi>t</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">bit / s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord">/</span><span class="mord mathdefault">s</span></span></span></span> 简写 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">b/s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span></span></span></span></li>
<li>若一个码元携带 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mtext> </mtext><mi>b</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">n \ bit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span></span></span></span> 的信息量（<strong>即 2<sup>n</sup> 进制码元</strong>），则 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mtext> </mtext><mi>B</mi><mi>a</mi><mi>u</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">m \ Baud</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">a</span><span class="mord mathdefault">u</span><span class="mord mathdefault">d</span></span></span></span> 的码元传输速率 对应 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>×</mo><mi>m</mi><mtext> </mtext><mi>b</mi><mi>i</mi><mi>t</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">n \times m \ bit/s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mspace"> </span><span class="mord mathdefault">b</span><span class="mord mathdefault">i</span><span class="mord mathdefault">t</span><span class="mord">/</span><span class="mord mathdefault">s</span></span></span></span> 的信息传输速率</li>
<li><strong>带宽</strong>是理想的最高数据率，一般用 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">b/s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span></span></span></span> <strong>即信息传输速率</strong></li>
</ul>
<h3 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h3>
<blockquote>
<p>某一数字通信系统传输的是四进制码元,4s传输了8000个码元,求系统的码元传输速率是多少?信息传输速率是多少?</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>8000</mn><mn>4</mn></mfrac><mo>=</mo><mn>2000</mn><mtext> </mtext><mi>B</mi><mi>a</mi><mi>u</mi><mi>d</mi><mo separator="true">,</mo><mtext> </mtext><mn>2000</mn><mo>×</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mn>4</mn><mo>=</mo><mn>4000</mn><mtext> </mtext><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">\frac {8000} 4 = 2000\ Baud,\ 2000\times log_24=4000\ b/s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">a</span><span class="mord mathdefault">u</span><span class="mord mathdefault">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mspace"> </span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span></span></span></span></p>
<p>若另一通信系统传输的是十六进制码元,6s传输了7200个码元,求他的码元传输速率是多少?信息传输速率是多少?并指出哪个系统传输速率快?</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>7200</mn><mn>6</mn></mfrac><mo>=</mo><mn>1200</mn><mtext> </mtext><mi>B</mi><mi>u</mi><mi>a</mi><mi>d</mi><mo separator="true">,</mo><mtext> </mtext><mn>1200</mn><mo>×</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mn>16</mn><mo>=</mo><mn>4800</mn><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">\frac{7200}6=1200\ Buad,\ 1200 \times log_2 16 = 4800 b/s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">u</span><span class="mord mathdefault">a</span><span class="mord mathdefault">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord">1</span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord">8</span><span class="mord">0</span><span class="mord">0</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span></span></span></span>，显然后者更快</p>
</blockquote>
<ul>
<li><strong>注意，若条件是k进制码元，其携带的比特个数为</strong> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>k</mi></mrow><annotation encoding="application/x-tex">log_2 k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span></li>
<li>不同码元进制的系统，传输速率的比较应使用 <strong>信息传输速率</strong></li>
</ul>
<h2 id="编码与调制"><a class="markdownIt-Anchor" href="#编码与调制"></a> 编码与调制</h2>
<h3 id="概念-2"><a class="markdownIt-Anchor" href="#概念-2"></a> 概念</h3>
<table>
<thead>
<tr>
<th style="text-align:center">信号类型</th>
<th style="text-align:center">概念</th>
<th style="text-align:center">传输方式</th>
<th style="text-align:center">适用环境</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">基带信号</td>
<td style="text-align:center">直接来自<strong>信源</strong>，如计算机输出的代表文字图像的数据信号<br /><strong>直接表达了要传输的信息的信号</strong>，如声波</td>
<td style="text-align:center">基带传输（<strong>量化后送入数字信道</strong>）</td>
<td style="text-align:center">近距离</td>
</tr>
<tr>
<td style="text-align:center">宽带信号</td>
<td style="text-align:center">基带信号经 <strong>载波调制</strong> 成 <strong>频段较高</strong> 的模拟信号，高频段可防衰减</td>
<td style="text-align:center">宽带传输（<strong>基带信号转为模拟信号再送入模拟信道</strong>）</td>
<td style="text-align:center">远距离</td>
</tr>
</tbody>
</table>
<p><img src="https://i.loli.net/2020/04/18/yWUL4t8xzCHDnPm.png" alt="" /></p>
<h3 id="编码方式"><a class="markdownIt-Anchor" href="#编码方式"></a> 编码方式</h3>
<p><img src="https://i.loli.net/2020/04/18/mdFugVRx7pcobCf.png" alt="" /></p>
<ol>
<li>
<p><strong>非归零编码</strong></p>
<ul>
<li>一个码元 <strong>一段</strong>，<strong>高1低0</strong>，易实现、不检错</li>
<li>无法判断开始与结束，收发双方<strong>难以保持同步</strong>，需建立 <strong>另一条信道</strong> 沟通起始点</li>
<li><strong>归零编码</strong>
<ul>
<li><strong>前半段</strong>高1低0，<strong>后半段</strong>必须归零</li>
<li><img src="https://i.loli.net/2020/04/18/nhG9a8wgSerymKp.png" alt="" /></li>
</ul>
</li>
<li><strong>反向不归零编码</strong>
<ul>
<li>电平翻转为0，不翻转为1</li>
<li><strong>全0</strong>则不断翻转，<strong>全1</strong>则电平持续不变，收到几个 1 无法确定</li>
<li><img src="https://i.loli.net/2020/04/18/dp7Sf8wjYo1LZFy.png" alt="" /></li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>曼彻斯特编码</strong></p>
<ul>
<li>一个码元分为 <strong>两段</strong>，其中 <strong>前高后低为1</strong>、<strong>前低后高为0</strong>，规则也可调换</li>
<li>每个码元中间会有一次<strong>跳变</strong>，当数据传输完毕后，信号不再跳变，接收方以此<strong>确定传输结束</strong></li>
<li>因为<strong>每个</strong>码元都被调成<strong>两个</strong>电平，原来n个电平表示n个码元，现在只能表示<strong>n/2</strong>个，所以<strong>数据传输速率</strong>降至原来的<strong>1/2</strong></li>
<li><img src="https://i.loli.net/2020/04/18/SzujX4L31mtKxDH.png" alt="" /></li>
</ul>
</li>
<li>
<p><strong>差分曼彻斯特编码</strong></p>
<ul>
<li>一个码元分为 <strong>两段</strong>，若码元为1，则<strong>前半段</strong>码元的点平与<strong>上一个</strong>码元的<strong>后半段相同</strong>，若为0，则相反。<strong>这段</strong>码元的<strong>后半段</strong>是前半段的<strong>跳转</strong></li>
<li>常用于局域网传输，同样以每个码元的跳转实现同步，但<strong>抗干扰性</strong>强于曼彻斯特编码</li>
<li><img src="https://i.loli.net/2020/04/18/vb4fUZJPcHIuDyk.png" alt="" /></li>
</ul>
</li>
<li>
<p>4B/5B编码</p>
<ul>
<li>使用5个比特编码4个比特的数据，<strong>编码效率 80%</strong></li>
<li>5比特有32种状态，取16种用于表示（映射）4比特的16种数据，余下16种作为控制码（帧开始结束、线路状态）或者保留</li>
</ul>
</li>
<li>
<p>数字数据调制为模拟信号</p>
<ul>
<li>调幅、调频、调相、<strong>调幅+调相</strong>（QAM）</li>
</ul>
<blockquote>
<p>某通信链路的波特率是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1200</mn><mtext> </mtext><mi>B</mi><mi>a</mi><mi>u</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">1200\ Baud</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">a</span><span class="mord mathdefault">u</span><span class="mord mathdefault">d</span></span></span></span>，采用 4 个相位，每个相位有 4 种振幅的 QAM调制技术，求该链路的信息传输速率</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1200</mn><mo>×</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mn>4</mn><mo>×</mo><mn>4</mn><mo stretchy="false">)</mo><mo>=</mo><mn>4800</mn><mtext> </mtext><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">1200 \times log_2 (4\times4) = 4800\ b/s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord">8</span><span class="mord">0</span><span class="mord">0</span><span class="mspace"> </span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span></span></span></span></p>
<p><strong>先求总的能表示的状态种数，进而确定码元进制数，最后求速率</strong></p>
</blockquote>
</li>
<li>
<p>模拟数据编码为数字信号</p>
<ul>
<li>采样（取样本点） → 量化(离散化，5.2V --&gt; 5V) → 编码(转化为二进制编码)</li>
<li>f<sub>采样频率</sub> ≥ 2f<sub>信号最高频率</sub></li>
</ul>
</li>
</ol>
<h2 id="奈氏准则"><a class="markdownIt-Anchor" href="#奈氏准则"></a> 奈氏准则</h2>
<ul>
<li>在理想低通（无噪声、带宽受限）的情况下，为了避免码间串扰，极限码元传播速率为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>W</mi><mtext> </mtext><mi>B</mi><mi>a</mi><mi>u</mi><mi>d</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">其</mi><mi mathvariant="normal">中</mi><mi>W</mi><mi mathvariant="normal">是</mi><mi mathvariant="normal">信</mi><mi mathvariant="normal">道</mi><mi mathvariant="normal">带</mi><mi mathvariant="normal">宽</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">单</mi><mi mathvariant="normal">位</mi><mtext> </mtext><mi>H</mi><mi>z</mi></mrow><annotation encoding="application/x-tex">2W \ Baud，其中 W 是信道带宽，单位\ Hz</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">a</span><span class="mord mathdefault">u</span><span class="mord mathdefault">d</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">中</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">宽</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">位</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">极</mi><mi mathvariant="normal">限</mi><mi mathvariant="normal">信</mi><mi mathvariant="normal">息</mi><mi mathvariant="normal">传</mi><mi mathvariant="normal">输</mi><mi mathvariant="normal">速</mi><mi mathvariant="normal">率</mi><mo>=</mo><mn>2</mn><mi>W</mi><mtext> </mtext><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>V</mi><mtext> </mtext><mo stretchy="false">(</mo><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi mathvariant="normal">其</mi><mi mathvariant="normal">中</mi><mi>W</mi><mi mathvariant="normal">是</mi><mi mathvariant="normal">带</mi><mi mathvariant="normal">宽</mi><mi mathvariant="normal">、</mi><mi>V</mi><mi mathvariant="normal">是</mi><mi mathvariant="normal">码</mi><mi mathvariant="normal">元</mi><mi mathvariant="normal">种</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">也</mi><mi mathvariant="normal">是</mi><mi mathvariant="normal">码</mi><mi mathvariant="normal">元</mi><mi mathvariant="normal">进</mi><mi mathvariant="normal">制</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">，</mi><mspace linebreak="newline"></mspace><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>V</mi><mi mathvariant="normal">即</mi><mi mathvariant="normal">一</mi><mi mathvariant="normal">码</mi><mi mathvariant="normal">元</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">比</mi><mi mathvariant="normal">特</mi><mi mathvariant="normal">数</mi></mrow><annotation encoding="application/x-tex">极限信息传输速率 = 2W\ log_2V\ (b/s) \\ 其中W是带宽、V是码元种数，也是码元进制数，\\ log_2V即一码元的比特数</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">极</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">息</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">中</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">宽</span><span class="mord cjk_fallback">、</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">码</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">种</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">也</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">码</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">制</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">，</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord cjk_fallback">即</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">码</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">数</span></span></span></span></li>
<li>在任何信道，<strong>码元的传输速率是有上限的</strong>，超出就会出现严重的码间串扰，影响接收端正确识别</li>
<li>此处的带宽单位是赫兹，<strong>值为信道允许的信号频率上下限之差</strong>，频带越宽即<strong>带宽越大</strong>，允许的<strong>最高速率也就越大</strong></li>
<li><strong>奈氏准则给出了码元传输速率的限制，但没有给出信息传输速率的</strong></li>
<li>要提高传输速率，需设法使每个码元携带更多比特，<strong>即提高码元进制数</strong></li>
</ul>
<blockquote>
<p>在无噪声的情况下,若某通信链路的带宽为3kHz,采用4个相位,每个相位具有4种振幅的QAM调制技术,则该通信链路的最大数据传输率是多少?</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi><mo>=</mo><mn>3</mn><mi>k</mi><mo separator="true">;</mo><mtext> </mtext><mi>V</mi><mo>=</mo><mn>4</mn><mo>×</mo><mn>4</mn><mo>=</mo><mn>16</mn><mo separator="true">;</mo><mspace linebreak="newline"></mspace><mi>v</mi><mo>=</mo><mn>2</mn><mi>W</mi><mtext> </mtext><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>V</mi><mo>=</mo><mn>24</mn><mi>k</mi><mtext> </mtext><mo stretchy="false">(</mo><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">W=3k;\ V=4\times4=16;\\ v = 2W\ log_2 V = 24k\ (b/s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">4</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span></p>
</blockquote>
<h2 id="香农定理"><a class="markdownIt-Anchor" href="#香农定理"></a> 香农定理</h2>
<ul>
<li>
<p><strong>信噪比</strong> = 信号的平均功率 / 噪声的平均功率，记作 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi mathvariant="normal">/</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">S/N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>，单位 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">分</mi><mi mathvariant="normal">贝</mi><mi>d</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">分贝 dB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">贝</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">信</mi><mi mathvariant="normal">噪</mi><mi mathvariant="normal">比</mi><mo stretchy="false">(</mo><mi>d</mi><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mn>10</mn><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>10</mn></msub><mo stretchy="false">(</mo><mi>S</mi><mi mathvariant="normal">/</mi><mi>N</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mi mathvariant="normal">数</mi><mi mathvariant="normal">值</mi><mi mathvariant="normal">等</mi><mi mathvariant="normal">价</mi></mrow><annotation encoding="application/x-tex">信噪比(dB)=10 log_{10}(S/N),\ 数值等价
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">噪</span><span class="mord cjk_fallback">比</span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">等</span><span class="mord cjk_fallback">价</span></span></span></span></span></p>
</li>
<li>
<p><strong>香农定理</strong>：在带宽受限且<strong>有噪声</strong>的信道中，为了不产生误差，信道的数据传输速率有上限值</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">信</mi><mi mathvariant="normal">道</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">极</mi><mi mathvariant="normal">限</mi><mi mathvariant="normal">数</mi><mi mathvariant="normal">据</mi><mi mathvariant="normal">传</mi><mi mathvariant="normal">输</mi><mi mathvariant="normal">速</mi><mi mathvariant="normal">率</mi><mo>=</mo><mi>W</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>S</mi><mi mathvariant="normal">/</mi><mi>N</mi><mo stretchy="false">)</mo><mtext>  </mtext><mo stretchy="false">(</mo><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">信道的极限数据传输速率=W log_2(1+S/N)\ \ (b/s)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">极</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mspace"> </span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>如果题目给的信噪比是一个数，则直接作为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi mathvariant="normal">/</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">S/N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> 代入，<br />
如果是单位为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">dB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>，则需根据信噪比公式计算出 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi mathvariant="normal">/</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">S/N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span></p>
</li>
<li>
<p><strong>带宽或信噪比越大</strong>，极限速率就越高</p>
</li>
<li>
<p><strong>带宽和信噪比确定</strong>，极限传输速率也就确定了</p>
</li>
<li>
<p>只要信息的传输速率低于信道的极限，就存在某方法实现 <strong>无差错的传输</strong></p>
</li>
</ul>
<blockquote>
<p>电话系统的典型参数是信道带宽为3000Hz,信噪比为30dB,则该系统最大数据传输速率是多少?</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi mathvariant="normal">/</mi><mi>N</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mrow><mo stretchy="false">(</mo><mfrac><mn>30</mn><mn>10</mn></mfrac><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>3</mn></msup><mspace linebreak="newline"></mspace><mi>v</mi><mo>=</mo><mn>3</mn><mi>k</mi><mtext> </mtext><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>1</mn><msup><mn>0</mn><mn>3</mn></msup><mo stretchy="false">)</mo><mo>≈</mo><mn>30</mn><mi>k</mi><mtext> </mtext><mo stretchy="false">(</mo><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S/N=10^{(\frac{30}{10})}=10^3\\ v=3k\ log_2(1+10^3) \approx 30k\ (b/s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9540200000000001em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9540200000000001em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8443142857142858em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord">0</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span></p>
</blockquote>
<ul>
<li>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">区别</th>
<th style="text-align:center">极限数据传输率</th>
<th>如何提高</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">奈氏准则</td>
<td style="text-align:center">无噪声，<strong>码元速率上限</strong></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>W</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>V</mi></mrow><annotation encoding="application/x-tex">2W log_2V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span></td>
<td>提高带宽/更好的编码技术</td>
</tr>
<tr>
<td style="text-align:center">香农定理</td>
<td style="text-align:center">有噪声，<strong>信息速率上限</strong></td>
<td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>S</mi><mi mathvariant="normal">/</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Wlog_2(1+S/N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></td>
<td>提高带宽/信噪比</td>
</tr>
</tbody>
</table>
<p>如果题目只给<strong>码元</strong>和带宽，就用奈氏准则</p>
<p>如果题目只给<strong>信噪比</strong>和带宽，就用香农定理</p>
<p>如果都给了，两个都用，<strong>最后的极限数据传输速率取较小值</strong></p>
<blockquote>
<p>二进制信号在信噪比为127:1的4kHz信道上传输,最大的数据速率可达到多少?</p>
<p>Nice: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mn>1</mn></msub><mo>=</mo><mn>2</mn><mi>W</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>V</mi><mo>=</mo><mn>8</mn><mi>k</mi></mrow><annotation encoding="application/x-tex">v_1=2Wlog_2V=8k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span></p>
<p>香浓: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mn>2</mn></msub><mo>=</mo><mi>W</mi><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>S</mi><mi mathvariant="normal">/</mi><mi>N</mi><mo stretchy="false">)</mo><mo>=</mo><mn>4</mn><mi>k</mi><mo>×</mo><mn>7</mn><mo>=</mo><mn>28</mn><mi>k</mi></mrow><annotation encoding="application/x-tex">v_2=Wlog_2(1+S/N)=4k\times7=28k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">8</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span></p>
<p>故 取 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>8</mn><mi>k</mi><mtext> </mtext><mi>b</mi><mi mathvariant="normal">/</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">8k\ b/s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">8</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace"> </span><span class="mord mathdefault">b</span><span class="mord">/</span><span class="mord mathdefault">s</span></span></span></span></p>
</blockquote>
</li>
</ul>
<h2 id="传播介质"><a class="markdownIt-Anchor" href="#传播介质"></a> 传播介质</h2>
<p><img src="https://i.loli.net/2020/04/18/QHxPS5pOUAIG2tf.png" alt="" /></p>
<h2 id="物理层设备"><a class="markdownIt-Anchor" href="#物理层设备"></a> 物理层设备</h2>
<ol>
<li>
<p>中继器</p>
<ul>
<li>
<p><strong>再生还原数字信号</strong>，以延长传播距离</p>
</li>
<li>
<p>是适用于完全相同的<strong>两类（网段）网络</strong>，且速率要相同</p>
</li>
<li>
<p>只负责发送，不负责其他</p>
</li>
<li>
<p>左右两端媒体类别可以不同</p>
</li>
<li>
<p><strong>两端网段一定要同一个协议</strong></p>
</li>
<li>
<p><strong>5-4-3规则</strong>：不得超过5个网段，4 个网络延长设备，且只有其中3个区段可接网络设备</p>
<p><img src="https://i.loli.net/2020/04/19/tpVvL9AGKQZhaf2.png" alt="" /></p>
</li>
</ul>
</li>
<li>
<p>集线器</p>
<ul>
<li><strong>再生放大信号</strong></li>
<li>不具备定向传送能力，<strong>共享式设备</strong>，星型拓扑</li>
<li><strong>不分割冲突域</strong>，多设备同时发送会出现冲突</li>
<li><strong>所有设备平分带宽</strong></li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Study</category>
      </categories>
      <tags>
        <tag>网络</tag>
      </tags>
  </entry>
</search>
